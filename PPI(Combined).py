{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hht54ebiP6gS"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sb"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XMe_BtjORcT1"
      },
      "outputs": [],
      "source": [
        "df1 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/Combined/Combined(DIP)1.csv')\n",
        "df2 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/Combined/Combined(Martine)1.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t2is9e5Tiyv2",
        "outputId": "841888c0-6cb5-4ae7-ec7e-b17f94b46531"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "((11186, 243), (2914, 213))"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df1.shape, df2.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FjFPoZsRhzjR"
      },
      "source": [
        "Library"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l0OoeYulh3G4",
        "outputId": "fe6613b5-81d4-467c-b39f-7bd3913eb937"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting catboost\n",
            "  Downloading catboost-1.1.1-cp38-none-manylinux1_x86_64.whl (76.6 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m76.6/76.6 MB\u001b[0m \u001b[31m10.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.8/dist-packages (from catboost) (1.22.4)\n",
            "Requirement already satisfied: graphviz in /usr/local/lib/python3.8/dist-packages (from catboost) (0.10.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.8/dist-packages (from catboost) (1.15.0)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from catboost) (1.7.3)\n",
            "Requirement already satisfied: plotly in /usr/local/lib/python3.8/dist-packages (from catboost) (5.5.0)\n",
            "Requirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.8/dist-packages (from catboost) (1.3.5)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.8/dist-packages (from catboost) (3.5.3)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=0.24.0->catboost) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=0.24.0->catboost) (2022.7.1)\n",
            "Requirement already satisfied: pyparsing>=2.2.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->catboost) (3.0.9)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/dist-packages (from matplotlib->catboost) (0.11.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.8/dist-packages (from matplotlib->catboost) (4.38.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->catboost) (1.4.4)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.8/dist-packages (from matplotlib->catboost) (7.1.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.8/dist-packages (from matplotlib->catboost) (23.0)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.8/dist-packages (from plotly->catboost) (8.2.1)\n",
            "Installing collected packages: catboost\n",
            "Successfully installed catboost-1.1.1\n"
          ]
        }
      ],
      "source": [
        "!pip install catboost"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7T8RGooPh403"
      },
      "outputs": [],
      "source": [
        "from sklearn import metrics\n",
        "from sklearn.metrics import classification_report\n",
        "from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, confusion_matrix, cohen_kappa_score\n",
        "from sklearn.metrics import roc_auc_score\n",
        "from sklearn.metrics import precision_recall_curve\n",
        "from sklearn.metrics import matthews_corrcoef"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lSeuWP6Fh7A-"
      },
      "outputs": [],
      "source": [
        "from sklearn.feature_selection import mutual_info_classif, SelectFromModel, SelectKBest, chi2\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier\n",
        "from xgboost import XGBClassifier\n",
        "from catboost import CatBoostClassifier\n",
        "from lightgbm import LGBMClassifier\n",
        "from sklearn.ensemble import StackingClassifier\n",
        "from sklearn.model_selection import KFold\n",
        "from sklearn.model_selection import cross_val_score, cross_val_predict"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dYWZW9-3h-bu"
      },
      "outputs": [],
      "source": [
        "estimator = [('RF', RandomForestClassifier(n_estimators = 450, max_depth = 9)), ('XGB', XGBClassifier(n_estimators = 250,max_depth = 5, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1)),\n",
        "             ('Cat', CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77)), ('LGBM', LGBMClassifier(learning_rate = 0.09,max_depth = 5,random_state = 75)), ('DT', DecisionTreeClassifier(max_depth = 9)),\n",
        "             ('ETC', ExtraTreesClassifier(n_estimators = 450, max_depth = 9))]\n",
        "Stacking = StackingClassifier( estimators=estimator, final_estimator= ExtraTreesClassifier(n_estimators = 450, max_depth = 9))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TtGO6vNtiBk2"
      },
      "source": [
        "# **DIP Data**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GJ1JMFJ5iEPm"
      },
      "outputs": [],
      "source": [
        "columns = df1.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X = df1[columns]\n",
        "Y = df1[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rXqWiG5ziGsG"
      },
      "outputs": [],
      "source": [
        "total = []\n",
        "total = pd.DataFrame(total)\n",
        "total = df1.drop(['Target'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ue57vaRHiIwO",
        "outputId": "08b00d0e-0cdd-4154-de53-a085522c164f"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=9, n_estimato...  0.997318  0.994633   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.996871  0.993738   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.997765  0.995527   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.997318  0.994632   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.975594  0.951216   \n",
            "5  ExtraTreesClassifier(max_depth=9, n_estimators...  0.996603  0.993201   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.997765  0.995527   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.994632   0.997318  0.997318  0.997318  \n",
            "1  0.993737   0.996871  0.996871  0.996871  \n",
            "2  0.995527   0.997765  0.997765  0.997765  \n",
            "3  0.994632   0.997318  0.997318  0.997318  \n",
            "4  0.951134   0.975594  0.975594  0.975594  \n",
            "5  0.993201   0.996603  0.996603  0.996603  \n",
            "6  0.995527   0.997765  0.997765  0.997765  \n",
            "0:\tlearn: 0.5306218\ttotal: 78.7ms\tremaining: 3.46s\n",
            "1:\tlearn: 0.4058652\ttotal: 107ms\tremaining: 2.3s\n",
            "2:\tlearn: 0.3351551\ttotal: 133ms\tremaining: 1.87s\n",
            "3:\tlearn: 0.2773025\ttotal: 164ms\tremaining: 1.68s\n",
            "4:\tlearn: 0.2359899\ttotal: 193ms\tremaining: 1.54s\n",
            "5:\tlearn: 0.2092461\ttotal: 223ms\tremaining: 1.45s\n",
            "6:\tlearn: 0.1876419\ttotal: 251ms\tremaining: 1.36s\n",
            "7:\tlearn: 0.1691817\ttotal: 280ms\tremaining: 1.29s\n",
            "8:\tlearn: 0.1534724\ttotal: 311ms\tremaining: 1.24s\n",
            "9:\tlearn: 0.1410883\ttotal: 338ms\tremaining: 1.18s\n",
            "10:\tlearn: 0.1261598\ttotal: 366ms\tremaining: 1.13s\n",
            "11:\tlearn: 0.1157358\ttotal: 394ms\tremaining: 1.08s\n",
            "12:\tlearn: 0.1043998\ttotal: 422ms\tremaining: 1.04s\n",
            "13:\tlearn: 0.0911614\ttotal: 450ms\tremaining: 997ms\n",
            "14:\tlearn: 0.0816061\ttotal: 480ms\tremaining: 960ms\n",
            "15:\tlearn: 0.0733710\ttotal: 510ms\tremaining: 925ms\n",
            "16:\tlearn: 0.0647127\ttotal: 538ms\tremaining: 887ms\n",
            "17:\tlearn: 0.0592427\ttotal: 567ms\tremaining: 850ms\n",
            "18:\tlearn: 0.0532719\ttotal: 602ms\tremaining: 824ms\n",
            "19:\tlearn: 0.0502473\ttotal: 638ms\tremaining: 797ms\n",
            "20:\tlearn: 0.0470717\ttotal: 665ms\tremaining: 760ms\n",
            "21:\tlearn: 0.0433923\ttotal: 692ms\tremaining: 724ms\n",
            "22:\tlearn: 0.0393916\ttotal: 724ms\tremaining: 692ms\n",
            "23:\tlearn: 0.0364186\ttotal: 752ms\tremaining: 658ms\n",
            "24:\tlearn: 0.0331021\ttotal: 781ms\tremaining: 625ms\n",
            "25:\tlearn: 0.0319291\ttotal: 810ms\tremaining: 592ms\n",
            "26:\tlearn: 0.0285704\ttotal: 838ms\tremaining: 559ms\n",
            "27:\tlearn: 0.0260642\ttotal: 865ms\tremaining: 525ms\n",
            "28:\tlearn: 0.0252363\ttotal: 892ms\tremaining: 492ms\n",
            "29:\tlearn: 0.0240067\ttotal: 920ms\tremaining: 460ms\n",
            "30:\tlearn: 0.0229637\ttotal: 949ms\tremaining: 429ms\n",
            "31:\tlearn: 0.0220241\ttotal: 976ms\tremaining: 397ms\n",
            "32:\tlearn: 0.0203510\ttotal: 1.01s\tremaining: 367ms\n",
            "33:\tlearn: 0.0188687\ttotal: 1.04s\tremaining: 338ms\n",
            "34:\tlearn: 0.0183317\ttotal: 1.07s\tremaining: 306ms\n",
            "35:\tlearn: 0.0175899\ttotal: 1.1s\tremaining: 275ms\n",
            "36:\tlearn: 0.0168307\ttotal: 1.13s\tremaining: 244ms\n",
            "37:\tlearn: 0.0158211\ttotal: 1.16s\tremaining: 213ms\n",
            "38:\tlearn: 0.0144572\ttotal: 1.19s\tremaining: 183ms\n",
            "39:\tlearn: 0.0134292\ttotal: 1.22s\tremaining: 152ms\n",
            "40:\tlearn: 0.0124691\ttotal: 1.25s\tremaining: 122ms\n",
            "41:\tlearn: 0.0118861\ttotal: 1.27s\tremaining: 90.9ms\n",
            "42:\tlearn: 0.0110043\ttotal: 1.3s\tremaining: 60.5ms\n",
            "43:\tlearn: 0.0107129\ttotal: 1.33s\tremaining: 30.2ms\n",
            "44:\tlearn: 0.0101897\ttotal: 1.36s\tremaining: 0us\n",
            "0:\tlearn: 0.5301999\ttotal: 67.5ms\tremaining: 2.97s\n",
            "1:\tlearn: 0.4057031\ttotal: 123ms\tremaining: 2.64s\n",
            "2:\tlearn: 0.3207732\ttotal: 177ms\tremaining: 2.48s\n",
            "3:\tlearn: 0.2688220\ttotal: 239ms\tremaining: 2.45s\n",
            "4:\tlearn: 0.2239464\ttotal: 302ms\tremaining: 2.42s\n",
            "5:\tlearn: 0.1924743\ttotal: 355ms\tremaining: 2.31s\n",
            "6:\tlearn: 0.1641496\ttotal: 406ms\tremaining: 2.2s\n",
            "7:\tlearn: 0.1512484\ttotal: 458ms\tremaining: 2.12s\n",
            "8:\tlearn: 0.1337103\ttotal: 521ms\tremaining: 2.08s\n",
            "9:\tlearn: 0.1230888\ttotal: 584ms\tremaining: 2.04s\n",
            "10:\tlearn: 0.1121688\ttotal: 635ms\tremaining: 1.96s\n",
            "11:\tlearn: 0.1054858\ttotal: 690ms\tremaining: 1.9s\n",
            "12:\tlearn: 0.0948915\ttotal: 756ms\tremaining: 1.86s\n",
            "13:\tlearn: 0.0856997\ttotal: 815ms\tremaining: 1.8s\n",
            "14:\tlearn: 0.0816236\ttotal: 875ms\tremaining: 1.75s\n",
            "15:\tlearn: 0.0744310\ttotal: 937ms\tremaining: 1.7s\n",
            "16:\tlearn: 0.0666461\ttotal: 999ms\tremaining: 1.65s\n",
            "17:\tlearn: 0.0596459\ttotal: 1.06s\tremaining: 1.59s\n",
            "18:\tlearn: 0.0553998\ttotal: 1.12s\tremaining: 1.54s\n",
            "19:\tlearn: 0.0536464\ttotal: 1.18s\tremaining: 1.47s\n",
            "20:\tlearn: 0.0501679\ttotal: 1.24s\tremaining: 1.42s\n",
            "21:\tlearn: 0.0444063\ttotal: 1.3s\tremaining: 1.36s\n",
            "22:\tlearn: 0.0416557\ttotal: 1.36s\tremaining: 1.3s\n",
            "23:\tlearn: 0.0364250\ttotal: 1.42s\tremaining: 1.25s\n",
            "24:\tlearn: 0.0341274\ttotal: 1.49s\tremaining: 1.19s\n",
            "25:\tlearn: 0.0316063\ttotal: 1.55s\tremaining: 1.13s\n",
            "26:\tlearn: 0.0296832\ttotal: 1.61s\tremaining: 1.07s\n",
            "27:\tlearn: 0.0277390\ttotal: 1.67s\tremaining: 1.01s\n",
            "28:\tlearn: 0.0257840\ttotal: 1.73s\tremaining: 954ms\n",
            "29:\tlearn: 0.0248699\ttotal: 1.78s\tremaining: 890ms\n",
            "30:\tlearn: 0.0236038\ttotal: 1.81s\tremaining: 816ms\n",
            "31:\tlearn: 0.0224092\ttotal: 1.83s\tremaining: 745ms\n",
            "32:\tlearn: 0.0212052\ttotal: 1.86s\tremaining: 676ms\n",
            "33:\tlearn: 0.0203367\ttotal: 1.89s\tremaining: 610ms\n",
            "34:\tlearn: 0.0190114\ttotal: 1.91s\tremaining: 546ms\n",
            "35:\tlearn: 0.0180826\ttotal: 1.95s\tremaining: 487ms\n",
            "36:\tlearn: 0.0168493\ttotal: 1.97s\tremaining: 427ms\n",
            "37:\tlearn: 0.0156956\ttotal: 2s\tremaining: 369ms\n",
            "38:\tlearn: 0.0149664\ttotal: 2.03s\tremaining: 312ms\n",
            "39:\tlearn: 0.0144797\ttotal: 2.05s\tremaining: 257ms\n",
            "40:\tlearn: 0.0129603\ttotal: 2.08s\tremaining: 203ms\n",
            "41:\tlearn: 0.0117608\ttotal: 2.11s\tremaining: 151ms\n",
            "42:\tlearn: 0.0110771\ttotal: 2.13s\tremaining: 99.3ms\n",
            "43:\tlearn: 0.0102997\ttotal: 2.16s\tremaining: 49.2ms\n",
            "44:\tlearn: 0.0098780\ttotal: 2.19s\tremaining: 0us\n",
            "0:\tlearn: 0.5409329\ttotal: 32.8ms\tremaining: 1.45s\n",
            "1:\tlearn: 0.4254038\ttotal: 61ms\tremaining: 1.31s\n",
            "2:\tlearn: 0.3327360\ttotal: 88.9ms\tremaining: 1.24s\n",
            "3:\tlearn: 0.2909051\ttotal: 115ms\tremaining: 1.18s\n",
            "4:\tlearn: 0.2466972\ttotal: 143ms\tremaining: 1.14s\n",
            "5:\tlearn: 0.2073364\ttotal: 170ms\tremaining: 1.1s\n",
            "6:\tlearn: 0.1745693\ttotal: 197ms\tremaining: 1.07s\n",
            "7:\tlearn: 0.1516659\ttotal: 226ms\tremaining: 1.04s\n",
            "8:\tlearn: 0.1386925\ttotal: 257ms\tremaining: 1.03s\n",
            "9:\tlearn: 0.1189944\ttotal: 284ms\tremaining: 994ms\n",
            "10:\tlearn: 0.1058241\ttotal: 311ms\tremaining: 961ms\n",
            "11:\tlearn: 0.0965776\ttotal: 343ms\tremaining: 944ms\n",
            "12:\tlearn: 0.0857618\ttotal: 371ms\tremaining: 913ms\n",
            "13:\tlearn: 0.0763365\ttotal: 397ms\tremaining: 879ms\n",
            "14:\tlearn: 0.0683297\ttotal: 423ms\tremaining: 847ms\n",
            "15:\tlearn: 0.0623344\ttotal: 451ms\tremaining: 817ms\n",
            "16:\tlearn: 0.0547943\ttotal: 480ms\tremaining: 790ms\n",
            "17:\tlearn: 0.0510128\ttotal: 506ms\tremaining: 760ms\n",
            "18:\tlearn: 0.0447803\ttotal: 533ms\tremaining: 730ms\n",
            "19:\tlearn: 0.0417347\ttotal: 559ms\tremaining: 699ms\n",
            "20:\tlearn: 0.0388038\ttotal: 586ms\tremaining: 670ms\n",
            "21:\tlearn: 0.0374810\ttotal: 613ms\tremaining: 640ms\n",
            "22:\tlearn: 0.0347084\ttotal: 639ms\tremaining: 611ms\n",
            "23:\tlearn: 0.0323281\ttotal: 665ms\tremaining: 582ms\n",
            "24:\tlearn: 0.0300278\ttotal: 694ms\tremaining: 555ms\n",
            "25:\tlearn: 0.0278264\ttotal: 722ms\tremaining: 527ms\n",
            "26:\tlearn: 0.0258238\ttotal: 749ms\tremaining: 499ms\n",
            "27:\tlearn: 0.0247175\ttotal: 775ms\tremaining: 470ms\n",
            "28:\tlearn: 0.0235328\ttotal: 801ms\tremaining: 442ms\n",
            "29:\tlearn: 0.0223316\ttotal: 828ms\tremaining: 414ms\n",
            "30:\tlearn: 0.0211826\ttotal: 863ms\tremaining: 390ms\n",
            "31:\tlearn: 0.0210850\ttotal: 888ms\tremaining: 361ms\n",
            "32:\tlearn: 0.0203012\ttotal: 917ms\tremaining: 333ms\n",
            "33:\tlearn: 0.0189649\ttotal: 945ms\tremaining: 306ms\n",
            "34:\tlearn: 0.0180091\ttotal: 971ms\tremaining: 277ms\n",
            "35:\tlearn: 0.0169847\ttotal: 997ms\tremaining: 249ms\n",
            "36:\tlearn: 0.0164841\ttotal: 1.02s\tremaining: 221ms\n",
            "37:\tlearn: 0.0155989\ttotal: 1.05s\tremaining: 193ms\n",
            "38:\tlearn: 0.0149598\ttotal: 1.07s\tremaining: 165ms\n",
            "39:\tlearn: 0.0141354\ttotal: 1.1s\tremaining: 138ms\n",
            "40:\tlearn: 0.0136405\ttotal: 1.13s\tremaining: 110ms\n",
            "41:\tlearn: 0.0127143\ttotal: 1.16s\tremaining: 83ms\n",
            "42:\tlearn: 0.0119075\ttotal: 1.19s\tremaining: 55.6ms\n",
            "43:\tlearn: 0.0114696\ttotal: 1.22s\tremaining: 27.8ms\n",
            "44:\tlearn: 0.0110157\ttotal: 1.25s\tremaining: 0us\n",
            "0:\tlearn: 0.5138146\ttotal: 32.9ms\tremaining: 1.45s\n",
            "1:\tlearn: 0.4028846\ttotal: 60.2ms\tremaining: 1.29s\n",
            "2:\tlearn: 0.3306536\ttotal: 87.6ms\tremaining: 1.23s\n",
            "3:\tlearn: 0.2815866\ttotal: 115ms\tremaining: 1.18s\n",
            "4:\tlearn: 0.2368545\ttotal: 144ms\tremaining: 1.15s\n",
            "5:\tlearn: 0.2013464\ttotal: 172ms\tremaining: 1.12s\n",
            "6:\tlearn: 0.1728248\ttotal: 199ms\tremaining: 1.08s\n",
            "7:\tlearn: 0.1573937\ttotal: 226ms\tremaining: 1.04s\n",
            "8:\tlearn: 0.1381762\ttotal: 256ms\tremaining: 1.02s\n",
            "9:\tlearn: 0.1222832\ttotal: 283ms\tremaining: 990ms\n",
            "10:\tlearn: 0.1046316\ttotal: 310ms\tremaining: 958ms\n",
            "11:\tlearn: 0.0899548\ttotal: 336ms\tremaining: 924ms\n",
            "12:\tlearn: 0.0759052\ttotal: 364ms\tremaining: 896ms\n",
            "13:\tlearn: 0.0681768\ttotal: 396ms\tremaining: 876ms\n",
            "14:\tlearn: 0.0612480\ttotal: 425ms\tremaining: 850ms\n",
            "15:\tlearn: 0.0569542\ttotal: 454ms\tremaining: 822ms\n",
            "16:\tlearn: 0.0509453\ttotal: 484ms\tremaining: 796ms\n",
            "17:\tlearn: 0.0469481\ttotal: 510ms\tremaining: 765ms\n",
            "18:\tlearn: 0.0443944\ttotal: 535ms\tremaining: 731ms\n",
            "19:\tlearn: 0.0405852\ttotal: 560ms\tremaining: 700ms\n",
            "20:\tlearn: 0.0376109\ttotal: 586ms\tremaining: 670ms\n",
            "21:\tlearn: 0.0349119\ttotal: 613ms\tremaining: 640ms\n",
            "22:\tlearn: 0.0311053\ttotal: 639ms\tremaining: 611ms\n",
            "23:\tlearn: 0.0290199\ttotal: 665ms\tremaining: 582ms\n",
            "24:\tlearn: 0.0281370\ttotal: 693ms\tremaining: 554ms\n",
            "25:\tlearn: 0.0258302\ttotal: 720ms\tremaining: 526ms\n",
            "26:\tlearn: 0.0242040\ttotal: 746ms\tremaining: 497ms\n",
            "27:\tlearn: 0.0233008\ttotal: 771ms\tremaining: 468ms\n",
            "28:\tlearn: 0.0232286\ttotal: 801ms\tremaining: 442ms\n",
            "29:\tlearn: 0.0216658\ttotal: 827ms\tremaining: 414ms\n",
            "30:\tlearn: 0.0199005\ttotal: 856ms\tremaining: 386ms\n",
            "31:\tlearn: 0.0182299\ttotal: 885ms\tremaining: 359ms\n",
            "32:\tlearn: 0.0166223\ttotal: 914ms\tremaining: 332ms\n",
            "33:\tlearn: 0.0154997\ttotal: 939ms\tremaining: 304ms\n",
            "34:\tlearn: 0.0154642\ttotal: 964ms\tremaining: 275ms\n",
            "35:\tlearn: 0.0146752\ttotal: 991ms\tremaining: 248ms\n",
            "36:\tlearn: 0.0139582\ttotal: 1.02s\tremaining: 220ms\n",
            "37:\tlearn: 0.0130875\ttotal: 1.04s\tremaining: 192ms\n",
            "38:\tlearn: 0.0126702\ttotal: 1.07s\tremaining: 165ms\n",
            "39:\tlearn: 0.0118573\ttotal: 1.1s\tremaining: 137ms\n",
            "40:\tlearn: 0.0116388\ttotal: 1.12s\tremaining: 110ms\n",
            "41:\tlearn: 0.0108260\ttotal: 1.15s\tremaining: 82.3ms\n",
            "42:\tlearn: 0.0096654\ttotal: 1.18s\tremaining: 55ms\n",
            "43:\tlearn: 0.0092994\ttotal: 1.21s\tremaining: 27.5ms\n",
            "44:\tlearn: 0.0088959\ttotal: 1.24s\tremaining: 0us\n",
            "0:\tlearn: 0.5123298\ttotal: 33.6ms\tremaining: 1.48s\n",
            "1:\tlearn: 0.3952284\ttotal: 61.4ms\tremaining: 1.32s\n",
            "2:\tlearn: 0.3234626\ttotal: 88.6ms\tremaining: 1.24s\n",
            "3:\tlearn: 0.2726327\ttotal: 115ms\tremaining: 1.18s\n",
            "4:\tlearn: 0.2344574\ttotal: 141ms\tremaining: 1.13s\n",
            "5:\tlearn: 0.2137408\ttotal: 168ms\tremaining: 1.09s\n",
            "6:\tlearn: 0.1835355\ttotal: 195ms\tremaining: 1.06s\n",
            "7:\tlearn: 0.1642300\ttotal: 222ms\tremaining: 1.03s\n",
            "8:\tlearn: 0.1448097\ttotal: 252ms\tremaining: 1.01s\n",
            "9:\tlearn: 0.1265428\ttotal: 278ms\tremaining: 974ms\n",
            "10:\tlearn: 0.1124602\ttotal: 306ms\tremaining: 945ms\n",
            "11:\tlearn: 0.1032719\ttotal: 331ms\tremaining: 911ms\n",
            "12:\tlearn: 0.0954546\ttotal: 358ms\tremaining: 880ms\n",
            "13:\tlearn: 0.0888378\ttotal: 384ms\tremaining: 850ms\n",
            "14:\tlearn: 0.0835762\ttotal: 412ms\tremaining: 823ms\n",
            "15:\tlearn: 0.0747088\ttotal: 440ms\tremaining: 797ms\n",
            "16:\tlearn: 0.0660920\ttotal: 470ms\tremaining: 774ms\n",
            "17:\tlearn: 0.0603949\ttotal: 496ms\tremaining: 745ms\n",
            "18:\tlearn: 0.0548962\ttotal: 524ms\tremaining: 718ms\n",
            "19:\tlearn: 0.0515026\ttotal: 550ms\tremaining: 688ms\n",
            "20:\tlearn: 0.0482278\ttotal: 576ms\tremaining: 658ms\n",
            "21:\tlearn: 0.0434358\ttotal: 603ms\tremaining: 630ms\n",
            "22:\tlearn: 0.0409009\ttotal: 629ms\tremaining: 601ms\n",
            "23:\tlearn: 0.0372023\ttotal: 656ms\tremaining: 574ms\n",
            "24:\tlearn: 0.0350318\ttotal: 686ms\tremaining: 549ms\n",
            "25:\tlearn: 0.0332944\ttotal: 712ms\tremaining: 520ms\n",
            "26:\tlearn: 0.0319270\ttotal: 738ms\tremaining: 492ms\n",
            "27:\tlearn: 0.0290937\ttotal: 766ms\tremaining: 465ms\n",
            "28:\tlearn: 0.0258635\ttotal: 793ms\tremaining: 438ms\n",
            "29:\tlearn: 0.0257237\ttotal: 818ms\tremaining: 409ms\n",
            "30:\tlearn: 0.0238316\ttotal: 846ms\tremaining: 382ms\n",
            "31:\tlearn: 0.0223883\ttotal: 872ms\tremaining: 354ms\n",
            "32:\tlearn: 0.0212928\ttotal: 902ms\tremaining: 328ms\n",
            "33:\tlearn: 0.0199557\ttotal: 930ms\tremaining: 301ms\n",
            "34:\tlearn: 0.0193623\ttotal: 958ms\tremaining: 274ms\n",
            "35:\tlearn: 0.0183238\ttotal: 989ms\tremaining: 247ms\n",
            "36:\tlearn: 0.0175883\ttotal: 1.02s\tremaining: 220ms\n",
            "37:\tlearn: 0.0175329\ttotal: 1.04s\tremaining: 192ms\n",
            "38:\tlearn: 0.0170075\ttotal: 1.07s\tremaining: 164ms\n",
            "39:\tlearn: 0.0159120\ttotal: 1.09s\tremaining: 137ms\n",
            "40:\tlearn: 0.0154846\ttotal: 1.13s\tremaining: 110ms\n",
            "41:\tlearn: 0.0147189\ttotal: 1.16s\tremaining: 82.5ms\n",
            "42:\tlearn: 0.0133478\ttotal: 1.18s\tremaining: 55.1ms\n",
            "43:\tlearn: 0.0126482\ttotal: 1.21s\tremaining: 27.5ms\n",
            "44:\tlearn: 0.0119666\ttotal: 1.24s\tremaining: 0us\n",
            "0:\tlearn: 0.5437600\ttotal: 32.6ms\tremaining: 1.43s\n",
            "1:\tlearn: 0.4138177\ttotal: 61.3ms\tremaining: 1.32s\n",
            "2:\tlearn: 0.3210801\ttotal: 95.3ms\tremaining: 1.33s\n",
            "3:\tlearn: 0.2720677\ttotal: 123ms\tremaining: 1.26s\n",
            "4:\tlearn: 0.2281423\ttotal: 150ms\tremaining: 1.2s\n",
            "5:\tlearn: 0.1956885\ttotal: 178ms\tremaining: 1.15s\n",
            "6:\tlearn: 0.1714500\ttotal: 204ms\tremaining: 1.11s\n",
            "7:\tlearn: 0.1541586\ttotal: 233ms\tremaining: 1.07s\n",
            "8:\tlearn: 0.1314742\ttotal: 262ms\tremaining: 1.05s\n",
            "9:\tlearn: 0.1132576\ttotal: 289ms\tremaining: 1.01s\n",
            "10:\tlearn: 0.1026692\ttotal: 315ms\tremaining: 973ms\n",
            "11:\tlearn: 0.0957751\ttotal: 340ms\tremaining: 936ms\n",
            "12:\tlearn: 0.0874664\ttotal: 366ms\tremaining: 901ms\n",
            "13:\tlearn: 0.0814706\ttotal: 392ms\tremaining: 867ms\n",
            "14:\tlearn: 0.0750823\ttotal: 418ms\tremaining: 836ms\n",
            "15:\tlearn: 0.0675737\ttotal: 452ms\tremaining: 819ms\n",
            "16:\tlearn: 0.0608906\ttotal: 477ms\tremaining: 786ms\n",
            "17:\tlearn: 0.0566171\ttotal: 502ms\tremaining: 753ms\n",
            "18:\tlearn: 0.0516848\ttotal: 533ms\tremaining: 730ms\n",
            "19:\tlearn: 0.0485107\ttotal: 559ms\tremaining: 699ms\n",
            "20:\tlearn: 0.0438009\ttotal: 584ms\tremaining: 668ms\n",
            "21:\tlearn: 0.0391532\ttotal: 610ms\tremaining: 638ms\n",
            "22:\tlearn: 0.0366667\ttotal: 634ms\tremaining: 607ms\n",
            "23:\tlearn: 0.0341242\ttotal: 661ms\tremaining: 579ms\n",
            "24:\tlearn: 0.0324968\ttotal: 686ms\tremaining: 548ms\n",
            "25:\tlearn: 0.0309556\ttotal: 710ms\tremaining: 519ms\n",
            "26:\tlearn: 0.0289442\ttotal: 735ms\tremaining: 490ms\n",
            "27:\tlearn: 0.0274885\ttotal: 763ms\tremaining: 463ms\n",
            "28:\tlearn: 0.0249344\ttotal: 791ms\tremaining: 436ms\n",
            "29:\tlearn: 0.0232221\ttotal: 817ms\tremaining: 409ms\n",
            "30:\tlearn: 0.0219843\ttotal: 844ms\tremaining: 381ms\n",
            "31:\tlearn: 0.0210309\ttotal: 873ms\tremaining: 355ms\n",
            "32:\tlearn: 0.0197681\ttotal: 899ms\tremaining: 327ms\n",
            "33:\tlearn: 0.0186199\ttotal: 927ms\tremaining: 300ms\n",
            "34:\tlearn: 0.0174085\ttotal: 962ms\tremaining: 275ms\n",
            "35:\tlearn: 0.0162978\ttotal: 988ms\tremaining: 247ms\n",
            "36:\tlearn: 0.0153335\ttotal: 1.01s\tremaining: 219ms\n",
            "37:\tlearn: 0.0140745\ttotal: 1.04s\tremaining: 191ms\n",
            "38:\tlearn: 0.0137215\ttotal: 1.06s\tremaining: 164ms\n",
            "39:\tlearn: 0.0130514\ttotal: 1.09s\tremaining: 136ms\n",
            "40:\tlearn: 0.0124574\ttotal: 1.11s\tremaining: 109ms\n",
            "41:\tlearn: 0.0118560\ttotal: 1.14s\tremaining: 81.7ms\n",
            "42:\tlearn: 0.0118165\ttotal: 1.17s\tremaining: 54.4ms\n",
            "43:\tlearn: 0.0110921\ttotal: 1.2s\tremaining: 27.2ms\n",
            "44:\tlearn: 0.0105239\ttotal: 1.22s\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 400, max_depth = 9),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 400, max_depth = 9),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, Y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(Y, y_pred)\n",
        "  mcc = matthews_corrcoef(Y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(Y, y_pred)\n",
        "  f1 = f1_score(Y, y_pred, average='micro')\n",
        "  precision_score = precision_score(Y, y_pred, average='micro')\n",
        "  recall_score = recall_score(Y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"total_Metics(Cobmined(DIP)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X, Y)\n",
        "pd.DataFrame(prob).to_csv(\"total_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "T6BGJlSq1fq3"
      },
      "outputs": [],
      "source": [
        "importances = mutual_info_classif(X,Y)\n",
        "feature_importances = pd.Series(importances, total.columns[0:len(total.columns)])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "wXCa1MIq1gpu",
        "outputId": "1ea75ece-28e9-4ae8-a382-df4bbe8c6a4c"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fe4e1005a60>"
            ]
          },
          "execution_count": 16,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x2160 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure(figsize=(8,30))\n",
        "feature_importances.nlargest(100).plot(kind='barh', color='Teal')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CMK7rZvWobt2"
      },
      "source": [
        "**Analysis of Top-100 Features**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "o9RB3Ce3oh36"
      },
      "outputs": [],
      "source": [
        "top_100 = df1[['PAAC13','PAAC6','PAAC2','PAAC15','PAAC11','PAAC1','PAAC3','PAAC7','PAAC20','PAAC14','PAAC4','PAAC16','PAAC19','PAAC12','PAAC17','PAAC8','PAAC21','PAAC10','CTDC37','CTDC9','PAAC22',\n",
        "               'CTDC6','CTDC27','PAAC9','CTDC10','CTDC32','CTDC26','CTDC19','CTDC35','CTDC33','CTDC5','CTDC21','CTDC18','CTDC16','CTDC17','CTDC13','CTDC31','CTDC28','CTDC7',\n",
        "               'CTDC23','PAAC5','PAAC18','WToV385','WToV10','WToV477','WToV217','WToV481','WToV202','WToV364','WToV131','WToV138','WToV443','WToV371','WToV350','WToV68','WToV96','WToV404','WToV258',\n",
        "               'WToV6','WToV82','WToV154','WToV67','WToV204','WToV462','WToV396','WToV459','WToV368','WToV495','WToV193','WToV341','WToV286','WToV144','WToV432','WToV288','WToV130','WToV244',\n",
        "               'WToV380','WToV45','WToV2','WToV416','WToV146','WToV248','WToV126','WToV195','WToV275','WToV253','WToV104','WToV486','WToV417','WToV152','WToV468','WToV205','WToV494','WToV489',\n",
        "               'WToV355','WToV335','WToV492','WToV313','WToV284','WToV398','Target']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iBDQ6RliuSux",
        "outputId": "3c994b87-5464-4b10-f86b-16c08954e068"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=7, n_estimato...  0.971303  0.942816   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.979796  0.959631   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.991954  0.983916   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.990524  0.981057   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.933846  0.868502   \n",
            "5  ExtraTreesClassifier(max_depth=9, n_estimators...  0.987574  0.975143   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.995620  0.991232   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.942524   0.971303  0.971303  0.971303  \n",
            "1  0.959547   0.979796  0.979796  0.979796  \n",
            "2  0.983893   0.991954  0.991954  0.991954  \n",
            "3  0.981029   0.990524  0.990524  0.990524  \n",
            "4  0.867408   0.933846  0.933846  0.933846  \n",
            "5  0.975124   0.987574  0.987574  0.987574  \n",
            "6  0.991232   0.995620  0.995620  0.995620  \n",
            "0:\tlearn: 0.5679445\ttotal: 74.9ms\tremaining: 3.3s\n",
            "1:\tlearn: 0.5019469\ttotal: 94.8ms\tremaining: 2.04s\n",
            "2:\tlearn: 0.4542145\ttotal: 114ms\tremaining: 1.6s\n",
            "3:\tlearn: 0.3957445\ttotal: 135ms\tremaining: 1.38s\n",
            "4:\tlearn: 0.3519736\ttotal: 157ms\tremaining: 1.26s\n",
            "5:\tlearn: 0.3256831\ttotal: 177ms\tremaining: 1.15s\n",
            "6:\tlearn: 0.3010456\ttotal: 197ms\tremaining: 1.07s\n",
            "7:\tlearn: 0.2759023\ttotal: 217ms\tremaining: 1s\n",
            "8:\tlearn: 0.2560553\ttotal: 237ms\tremaining: 947ms\n",
            "9:\tlearn: 0.2403733\ttotal: 256ms\tremaining: 896ms\n",
            "10:\tlearn: 0.2208447\ttotal: 285ms\tremaining: 880ms\n",
            "11:\tlearn: 0.2059626\ttotal: 304ms\tremaining: 837ms\n",
            "12:\tlearn: 0.1921444\ttotal: 325ms\tremaining: 800ms\n",
            "13:\tlearn: 0.1755106\ttotal: 346ms\tremaining: 766ms\n",
            "14:\tlearn: 0.1638745\ttotal: 370ms\tremaining: 740ms\n",
            "15:\tlearn: 0.1531694\ttotal: 401ms\tremaining: 727ms\n",
            "16:\tlearn: 0.1431805\ttotal: 422ms\tremaining: 694ms\n",
            "17:\tlearn: 0.1345702\ttotal: 441ms\tremaining: 662ms\n",
            "18:\tlearn: 0.1258901\ttotal: 461ms\tremaining: 631ms\n",
            "19:\tlearn: 0.1164871\ttotal: 483ms\tremaining: 603ms\n",
            "20:\tlearn: 0.1117842\ttotal: 508ms\tremaining: 580ms\n",
            "21:\tlearn: 0.1058703\ttotal: 527ms\tremaining: 551ms\n",
            "22:\tlearn: 0.0992946\ttotal: 547ms\tremaining: 523ms\n",
            "23:\tlearn: 0.0940787\ttotal: 567ms\tremaining: 496ms\n",
            "24:\tlearn: 0.0879991\ttotal: 586ms\tremaining: 469ms\n",
            "25:\tlearn: 0.0840808\ttotal: 605ms\tremaining: 442ms\n",
            "26:\tlearn: 0.0798134\ttotal: 625ms\tremaining: 417ms\n",
            "27:\tlearn: 0.0750716\ttotal: 646ms\tremaining: 392ms\n",
            "28:\tlearn: 0.0707321\ttotal: 668ms\tremaining: 368ms\n",
            "29:\tlearn: 0.0649784\ttotal: 696ms\tremaining: 348ms\n",
            "30:\tlearn: 0.0622338\ttotal: 717ms\tremaining: 324ms\n",
            "31:\tlearn: 0.0588150\ttotal: 737ms\tremaining: 299ms\n",
            "32:\tlearn: 0.0558048\ttotal: 757ms\tremaining: 275ms\n",
            "33:\tlearn: 0.0523142\ttotal: 776ms\tremaining: 251ms\n",
            "34:\tlearn: 0.0493021\ttotal: 804ms\tremaining: 230ms\n",
            "35:\tlearn: 0.0472458\ttotal: 823ms\tremaining: 206ms\n",
            "36:\tlearn: 0.0452347\ttotal: 844ms\tremaining: 182ms\n",
            "37:\tlearn: 0.0432831\ttotal: 863ms\tremaining: 159ms\n",
            "38:\tlearn: 0.0405115\ttotal: 883ms\tremaining: 136ms\n",
            "39:\tlearn: 0.0390782\ttotal: 910ms\tremaining: 114ms\n",
            "40:\tlearn: 0.0366982\ttotal: 938ms\tremaining: 91.5ms\n",
            "41:\tlearn: 0.0355831\ttotal: 960ms\tremaining: 68.6ms\n",
            "42:\tlearn: 0.0343014\ttotal: 980ms\tremaining: 45.6ms\n",
            "43:\tlearn: 0.0326990\ttotal: 1s\tremaining: 22.7ms\n",
            "44:\tlearn: 0.0310222\ttotal: 1.02s\tremaining: 0us\n",
            "0:\tlearn: 0.5872962\ttotal: 42.8ms\tremaining: 1.88s\n",
            "1:\tlearn: 0.5316220\ttotal: 84ms\tremaining: 1.81s\n",
            "2:\tlearn: 0.4856353\ttotal: 126ms\tremaining: 1.76s\n",
            "3:\tlearn: 0.4426878\ttotal: 162ms\tremaining: 1.66s\n",
            "4:\tlearn: 0.3990472\ttotal: 198ms\tremaining: 1.58s\n",
            "5:\tlearn: 0.3618675\ttotal: 235ms\tremaining: 1.52s\n",
            "6:\tlearn: 0.3249440\ttotal: 287ms\tremaining: 1.56s\n",
            "7:\tlearn: 0.3019044\ttotal: 329ms\tremaining: 1.52s\n",
            "8:\tlearn: 0.2890022\ttotal: 371ms\tremaining: 1.48s\n",
            "9:\tlearn: 0.2645773\ttotal: 406ms\tremaining: 1.42s\n",
            "10:\tlearn: 0.2457823\ttotal: 447ms\tremaining: 1.38s\n",
            "11:\tlearn: 0.2298688\ttotal: 482ms\tremaining: 1.32s\n",
            "12:\tlearn: 0.2135307\ttotal: 533ms\tremaining: 1.31s\n",
            "13:\tlearn: 0.1999169\ttotal: 574ms\tremaining: 1.27s\n",
            "14:\tlearn: 0.1772445\ttotal: 621ms\tremaining: 1.24s\n",
            "15:\tlearn: 0.1660686\ttotal: 664ms\tremaining: 1.2s\n",
            "16:\tlearn: 0.1521532\ttotal: 712ms\tremaining: 1.17s\n",
            "17:\tlearn: 0.1407646\ttotal: 756ms\tremaining: 1.13s\n",
            "18:\tlearn: 0.1322843\ttotal: 801ms\tremaining: 1.1s\n",
            "19:\tlearn: 0.1225469\ttotal: 846ms\tremaining: 1.06s\n",
            "20:\tlearn: 0.1150612\ttotal: 886ms\tremaining: 1.01s\n",
            "21:\tlearn: 0.1085180\ttotal: 928ms\tremaining: 970ms\n",
            "22:\tlearn: 0.1011074\ttotal: 970ms\tremaining: 928ms\n",
            "23:\tlearn: 0.0973758\ttotal: 1.01s\tremaining: 888ms\n",
            "24:\tlearn: 0.0937719\ttotal: 1.05s\tremaining: 844ms\n",
            "25:\tlearn: 0.0893196\ttotal: 1.09s\tremaining: 801ms\n",
            "26:\tlearn: 0.0811394\ttotal: 1.15s\tremaining: 767ms\n",
            "27:\tlearn: 0.0768539\ttotal: 1.19s\tremaining: 725ms\n",
            "28:\tlearn: 0.0700128\ttotal: 1.24s\tremaining: 684ms\n",
            "29:\tlearn: 0.0676433\ttotal: 1.29s\tremaining: 646ms\n",
            "30:\tlearn: 0.0630579\ttotal: 1.33s\tremaining: 603ms\n",
            "31:\tlearn: 0.0594931\ttotal: 1.38s\tremaining: 560ms\n",
            "32:\tlearn: 0.0572687\ttotal: 1.41s\tremaining: 512ms\n",
            "33:\tlearn: 0.0536716\ttotal: 1.43s\tremaining: 464ms\n",
            "34:\tlearn: 0.0503832\ttotal: 1.46s\tremaining: 418ms\n",
            "35:\tlearn: 0.0482349\ttotal: 1.5s\tremaining: 376ms\n",
            "36:\tlearn: 0.0465631\ttotal: 1.55s\tremaining: 335ms\n",
            "37:\tlearn: 0.0445057\ttotal: 1.6s\tremaining: 295ms\n",
            "38:\tlearn: 0.0431490\ttotal: 1.65s\tremaining: 254ms\n",
            "39:\tlearn: 0.0408476\ttotal: 1.69s\tremaining: 211ms\n",
            "40:\tlearn: 0.0383620\ttotal: 1.73s\tremaining: 169ms\n",
            "41:\tlearn: 0.0374249\ttotal: 1.78s\tremaining: 127ms\n",
            "42:\tlearn: 0.0357268\ttotal: 1.82s\tremaining: 84.9ms\n",
            "43:\tlearn: 0.0349209\ttotal: 1.87s\tremaining: 42.5ms\n",
            "44:\tlearn: 0.0338286\ttotal: 1.9s\tremaining: 0us\n",
            "0:\tlearn: 0.5818593\ttotal: 42.5ms\tremaining: 1.87s\n",
            "1:\tlearn: 0.5131854\ttotal: 76.6ms\tremaining: 1.65s\n",
            "2:\tlearn: 0.4690409\ttotal: 95.1ms\tremaining: 1.33s\n",
            "3:\tlearn: 0.4375514\ttotal: 122ms\tremaining: 1.25s\n",
            "4:\tlearn: 0.3933383\ttotal: 142ms\tremaining: 1.13s\n",
            "5:\tlearn: 0.3595357\ttotal: 179ms\tremaining: 1.16s\n",
            "6:\tlearn: 0.3376537\ttotal: 198ms\tremaining: 1.07s\n",
            "7:\tlearn: 0.3124614\ttotal: 218ms\tremaining: 1.01s\n",
            "8:\tlearn: 0.2838761\ttotal: 237ms\tremaining: 950ms\n",
            "9:\tlearn: 0.2691349\ttotal: 269ms\tremaining: 942ms\n",
            "10:\tlearn: 0.2485543\ttotal: 291ms\tremaining: 899ms\n",
            "11:\tlearn: 0.2239880\ttotal: 310ms\tremaining: 853ms\n",
            "12:\tlearn: 0.2116233\ttotal: 329ms\tremaining: 810ms\n",
            "13:\tlearn: 0.1943369\ttotal: 350ms\tremaining: 776ms\n",
            "14:\tlearn: 0.1768559\ttotal: 369ms\tremaining: 737ms\n",
            "15:\tlearn: 0.1658270\ttotal: 387ms\tremaining: 701ms\n",
            "16:\tlearn: 0.1503460\ttotal: 407ms\tremaining: 670ms\n",
            "17:\tlearn: 0.1396205\ttotal: 427ms\tremaining: 640ms\n",
            "18:\tlearn: 0.1268713\ttotal: 447ms\tremaining: 612ms\n",
            "19:\tlearn: 0.1176013\ttotal: 466ms\tremaining: 583ms\n",
            "20:\tlearn: 0.1071499\ttotal: 493ms\tremaining: 564ms\n",
            "21:\tlearn: 0.1012871\ttotal: 512ms\tremaining: 536ms\n",
            "22:\tlearn: 0.0967318\ttotal: 530ms\tremaining: 507ms\n",
            "23:\tlearn: 0.0910172\ttotal: 549ms\tremaining: 481ms\n",
            "24:\tlearn: 0.0862796\ttotal: 569ms\tremaining: 455ms\n",
            "25:\tlearn: 0.0825391\ttotal: 595ms\tremaining: 435ms\n",
            "26:\tlearn: 0.0758650\ttotal: 615ms\tremaining: 410ms\n",
            "27:\tlearn: 0.0736758\ttotal: 634ms\tremaining: 385ms\n",
            "28:\tlearn: 0.0685566\ttotal: 655ms\tremaining: 362ms\n",
            "29:\tlearn: 0.0640868\ttotal: 674ms\tremaining: 337ms\n",
            "30:\tlearn: 0.0595911\ttotal: 696ms\tremaining: 314ms\n",
            "31:\tlearn: 0.0551012\ttotal: 719ms\tremaining: 292ms\n",
            "32:\tlearn: 0.0524059\ttotal: 736ms\tremaining: 268ms\n",
            "33:\tlearn: 0.0504558\ttotal: 756ms\tremaining: 244ms\n",
            "34:\tlearn: 0.0474975\ttotal: 775ms\tremaining: 221ms\n",
            "35:\tlearn: 0.0451959\ttotal: 794ms\tremaining: 198ms\n",
            "36:\tlearn: 0.0439099\ttotal: 813ms\tremaining: 176ms\n",
            "37:\tlearn: 0.0420397\ttotal: 831ms\tremaining: 153ms\n",
            "38:\tlearn: 0.0398666\ttotal: 850ms\tremaining: 131ms\n",
            "39:\tlearn: 0.0383053\ttotal: 868ms\tremaining: 109ms\n",
            "40:\tlearn: 0.0363355\ttotal: 887ms\tremaining: 86.5ms\n",
            "41:\tlearn: 0.0353255\ttotal: 912ms\tremaining: 65.2ms\n",
            "42:\tlearn: 0.0345312\ttotal: 931ms\tremaining: 43.3ms\n",
            "43:\tlearn: 0.0334559\ttotal: 950ms\tremaining: 21.6ms\n",
            "44:\tlearn: 0.0318240\ttotal: 969ms\tremaining: 0us\n",
            "0:\tlearn: 0.5778421\ttotal: 26.3ms\tremaining: 1.16s\n",
            "1:\tlearn: 0.5237446\ttotal: 45ms\tremaining: 967ms\n",
            "2:\tlearn: 0.4580870\ttotal: 79.3ms\tremaining: 1.11s\n",
            "3:\tlearn: 0.4107387\ttotal: 98.1ms\tremaining: 1s\n",
            "4:\tlearn: 0.3776411\ttotal: 119ms\tremaining: 949ms\n",
            "5:\tlearn: 0.3441132\ttotal: 139ms\tremaining: 902ms\n",
            "6:\tlearn: 0.3159106\ttotal: 158ms\tremaining: 856ms\n",
            "7:\tlearn: 0.2858014\ttotal: 177ms\tremaining: 817ms\n",
            "8:\tlearn: 0.2632396\ttotal: 195ms\tremaining: 781ms\n",
            "9:\tlearn: 0.2441688\ttotal: 214ms\tremaining: 749ms\n",
            "10:\tlearn: 0.2158926\ttotal: 241ms\tremaining: 744ms\n",
            "11:\tlearn: 0.1917080\ttotal: 260ms\tremaining: 714ms\n",
            "12:\tlearn: 0.1760741\ttotal: 279ms\tremaining: 686ms\n",
            "13:\tlearn: 0.1653397\ttotal: 298ms\tremaining: 660ms\n",
            "14:\tlearn: 0.1554535\ttotal: 320ms\tremaining: 641ms\n",
            "15:\tlearn: 0.1404939\ttotal: 339ms\tremaining: 614ms\n",
            "16:\tlearn: 0.1289056\ttotal: 358ms\tremaining: 589ms\n",
            "17:\tlearn: 0.1189059\ttotal: 377ms\tremaining: 566ms\n",
            "18:\tlearn: 0.1115913\ttotal: 395ms\tremaining: 541ms\n",
            "19:\tlearn: 0.1048396\ttotal: 413ms\tremaining: 516ms\n",
            "20:\tlearn: 0.0987461\ttotal: 431ms\tremaining: 492ms\n",
            "21:\tlearn: 0.0917891\ttotal: 458ms\tremaining: 479ms\n",
            "22:\tlearn: 0.0855104\ttotal: 476ms\tremaining: 456ms\n",
            "23:\tlearn: 0.0798208\ttotal: 495ms\tremaining: 433ms\n",
            "24:\tlearn: 0.0761815\ttotal: 513ms\tremaining: 411ms\n",
            "25:\tlearn: 0.0721286\ttotal: 533ms\tremaining: 389ms\n",
            "26:\tlearn: 0.0685148\ttotal: 551ms\tremaining: 367ms\n",
            "27:\tlearn: 0.0654911\ttotal: 570ms\tremaining: 346ms\n",
            "28:\tlearn: 0.0614602\ttotal: 589ms\tremaining: 325ms\n",
            "29:\tlearn: 0.0582641\ttotal: 608ms\tremaining: 304ms\n",
            "30:\tlearn: 0.0554850\ttotal: 626ms\tremaining: 283ms\n",
            "31:\tlearn: 0.0531395\ttotal: 645ms\tremaining: 262ms\n",
            "32:\tlearn: 0.0514311\ttotal: 671ms\tremaining: 244ms\n",
            "33:\tlearn: 0.0492469\ttotal: 690ms\tremaining: 223ms\n",
            "34:\tlearn: 0.0466997\ttotal: 709ms\tremaining: 202ms\n",
            "35:\tlearn: 0.0455352\ttotal: 726ms\tremaining: 182ms\n",
            "36:\tlearn: 0.0435268\ttotal: 745ms\tremaining: 161ms\n",
            "37:\tlearn: 0.0415431\ttotal: 765ms\tremaining: 141ms\n",
            "38:\tlearn: 0.0403631\ttotal: 782ms\tremaining: 120ms\n",
            "39:\tlearn: 0.0385090\ttotal: 802ms\tremaining: 100ms\n",
            "40:\tlearn: 0.0360359\ttotal: 820ms\tremaining: 80ms\n",
            "41:\tlearn: 0.0339993\ttotal: 838ms\tremaining: 59.8ms\n",
            "42:\tlearn: 0.0325983\ttotal: 856ms\tremaining: 39.8ms\n",
            "43:\tlearn: 0.0311732\ttotal: 879ms\tremaining: 20ms\n",
            "44:\tlearn: 0.0301950\ttotal: 899ms\tremaining: 0us\n",
            "0:\tlearn: 0.5729830\ttotal: 30.3ms\tremaining: 1.33s\n",
            "1:\tlearn: 0.5141645\ttotal: 55.9ms\tremaining: 1.2s\n",
            "2:\tlearn: 0.4580985\ttotal: 75ms\tremaining: 1.05s\n",
            "3:\tlearn: 0.4176409\ttotal: 93ms\tremaining: 954ms\n",
            "4:\tlearn: 0.3813913\ttotal: 111ms\tremaining: 889ms\n",
            "5:\tlearn: 0.3481475\ttotal: 129ms\tremaining: 839ms\n",
            "6:\tlearn: 0.3159232\ttotal: 148ms\tremaining: 805ms\n",
            "7:\tlearn: 0.3000547\ttotal: 167ms\tremaining: 772ms\n",
            "8:\tlearn: 0.2790246\ttotal: 186ms\tremaining: 746ms\n",
            "9:\tlearn: 0.2554645\ttotal: 205ms\tremaining: 718ms\n",
            "10:\tlearn: 0.2402804\ttotal: 225ms\tremaining: 696ms\n",
            "11:\tlearn: 0.2276540\ttotal: 244ms\tremaining: 670ms\n",
            "12:\tlearn: 0.2091440\ttotal: 273ms\tremaining: 673ms\n",
            "13:\tlearn: 0.1933851\ttotal: 292ms\tremaining: 647ms\n",
            "14:\tlearn: 0.1792665\ttotal: 311ms\tremaining: 622ms\n",
            "15:\tlearn: 0.1628709\ttotal: 330ms\tremaining: 598ms\n",
            "16:\tlearn: 0.1500039\ttotal: 349ms\tremaining: 575ms\n",
            "17:\tlearn: 0.1355577\ttotal: 368ms\tremaining: 551ms\n",
            "18:\tlearn: 0.1279776\ttotal: 388ms\tremaining: 531ms\n",
            "19:\tlearn: 0.1196365\ttotal: 410ms\tremaining: 513ms\n",
            "20:\tlearn: 0.1131709\ttotal: 435ms\tremaining: 497ms\n",
            "21:\tlearn: 0.1077899\ttotal: 455ms\tremaining: 476ms\n",
            "22:\tlearn: 0.0986462\ttotal: 477ms\tremaining: 456ms\n",
            "23:\tlearn: 0.0953965\ttotal: 498ms\tremaining: 436ms\n",
            "24:\tlearn: 0.0900808\ttotal: 516ms\tremaining: 413ms\n",
            "25:\tlearn: 0.0847450\ttotal: 534ms\tremaining: 390ms\n",
            "26:\tlearn: 0.0818469\ttotal: 551ms\tremaining: 368ms\n",
            "27:\tlearn: 0.0763082\ttotal: 570ms\tremaining: 346ms\n",
            "28:\tlearn: 0.0682017\ttotal: 589ms\tremaining: 325ms\n",
            "29:\tlearn: 0.0640675\ttotal: 608ms\tremaining: 304ms\n",
            "30:\tlearn: 0.0598325\ttotal: 627ms\tremaining: 283ms\n",
            "31:\tlearn: 0.0569365\ttotal: 646ms\tremaining: 262ms\n",
            "32:\tlearn: 0.0548345\ttotal: 664ms\tremaining: 242ms\n",
            "33:\tlearn: 0.0515762\ttotal: 689ms\tremaining: 223ms\n",
            "34:\tlearn: 0.0503739\ttotal: 707ms\tremaining: 202ms\n",
            "35:\tlearn: 0.0460107\ttotal: 726ms\tremaining: 181ms\n",
            "36:\tlearn: 0.0440202\ttotal: 745ms\tremaining: 161ms\n",
            "37:\tlearn: 0.0428464\ttotal: 763ms\tremaining: 141ms\n",
            "38:\tlearn: 0.0411493\ttotal: 781ms\tremaining: 120ms\n",
            "39:\tlearn: 0.0396979\ttotal: 799ms\tremaining: 99.9ms\n",
            "40:\tlearn: 0.0372305\ttotal: 818ms\tremaining: 79.8ms\n",
            "41:\tlearn: 0.0354106\ttotal: 837ms\tremaining: 59.8ms\n",
            "42:\tlearn: 0.0338066\ttotal: 856ms\tremaining: 39.8ms\n",
            "43:\tlearn: 0.0326549\ttotal: 875ms\tremaining: 19.9ms\n",
            "44:\tlearn: 0.0311954\ttotal: 899ms\tremaining: 0us\n",
            "0:\tlearn: 0.5991430\ttotal: 18.5ms\tremaining: 813ms\n",
            "1:\tlearn: 0.5333209\ttotal: 37.8ms\tremaining: 813ms\n",
            "2:\tlearn: 0.4681595\ttotal: 64.2ms\tremaining: 899ms\n",
            "3:\tlearn: 0.4211569\ttotal: 84.9ms\tremaining: 870ms\n",
            "4:\tlearn: 0.3864025\ttotal: 103ms\tremaining: 827ms\n",
            "5:\tlearn: 0.3564762\ttotal: 122ms\tremaining: 795ms\n",
            "6:\tlearn: 0.3262722\ttotal: 141ms\tremaining: 764ms\n",
            "7:\tlearn: 0.3025058\ttotal: 161ms\tremaining: 743ms\n",
            "8:\tlearn: 0.2817239\ttotal: 183ms\tremaining: 732ms\n",
            "9:\tlearn: 0.2651779\ttotal: 203ms\tremaining: 709ms\n",
            "10:\tlearn: 0.2461468\ttotal: 221ms\tremaining: 684ms\n",
            "11:\tlearn: 0.2265365\ttotal: 240ms\tremaining: 660ms\n",
            "12:\tlearn: 0.2079274\ttotal: 260ms\tremaining: 641ms\n",
            "13:\tlearn: 0.1913750\ttotal: 287ms\tremaining: 636ms\n",
            "14:\tlearn: 0.1803584\ttotal: 305ms\tremaining: 611ms\n",
            "15:\tlearn: 0.1688029\ttotal: 324ms\tremaining: 586ms\n",
            "16:\tlearn: 0.1565891\ttotal: 343ms\tremaining: 566ms\n",
            "17:\tlearn: 0.1409005\ttotal: 365ms\tremaining: 548ms\n",
            "18:\tlearn: 0.1301775\ttotal: 389ms\tremaining: 532ms\n",
            "19:\tlearn: 0.1219465\ttotal: 411ms\tremaining: 513ms\n",
            "20:\tlearn: 0.1145682\ttotal: 430ms\tremaining: 491ms\n",
            "21:\tlearn: 0.1109308\ttotal: 448ms\tremaining: 468ms\n",
            "22:\tlearn: 0.1035893\ttotal: 468ms\tremaining: 447ms\n",
            "23:\tlearn: 0.0962809\ttotal: 494ms\tremaining: 432ms\n",
            "24:\tlearn: 0.0865206\ttotal: 513ms\tremaining: 410ms\n",
            "25:\tlearn: 0.0816890\ttotal: 533ms\tremaining: 389ms\n",
            "26:\tlearn: 0.0749885\ttotal: 553ms\tremaining: 369ms\n",
            "27:\tlearn: 0.0702209\ttotal: 572ms\tremaining: 347ms\n",
            "28:\tlearn: 0.0684929\ttotal: 591ms\tremaining: 326ms\n",
            "29:\tlearn: 0.0658151\ttotal: 611ms\tremaining: 306ms\n",
            "30:\tlearn: 0.0617487\ttotal: 630ms\tremaining: 284ms\n",
            "31:\tlearn: 0.0562453\ttotal: 651ms\tremaining: 265ms\n",
            "32:\tlearn: 0.0536814\ttotal: 670ms\tremaining: 244ms\n",
            "33:\tlearn: 0.0515931\ttotal: 688ms\tremaining: 223ms\n",
            "34:\tlearn: 0.0485037\ttotal: 714ms\tremaining: 204ms\n",
            "35:\tlearn: 0.0459717\ttotal: 734ms\tremaining: 184ms\n",
            "36:\tlearn: 0.0446653\ttotal: 753ms\tremaining: 163ms\n",
            "37:\tlearn: 0.0427730\ttotal: 771ms\tremaining: 142ms\n",
            "38:\tlearn: 0.0405845\ttotal: 791ms\tremaining: 122ms\n",
            "39:\tlearn: 0.0385885\ttotal: 811ms\tremaining: 101ms\n",
            "40:\tlearn: 0.0371465\ttotal: 832ms\tremaining: 81.2ms\n",
            "41:\tlearn: 0.0351229\ttotal: 852ms\tremaining: 60.9ms\n",
            "42:\tlearn: 0.0336300\ttotal: 870ms\tremaining: 40.5ms\n",
            "43:\tlearn: 0.0329036\ttotal: 889ms\tremaining: 20.2ms\n",
            "44:\tlearn: 0.0319349\ttotal: 907ms\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "X = top_100.drop(['Target'], axis=1)\n",
        "y = top_100['Target']\n",
        "\n",
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 400, max_depth = 7),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 400, max_depth = 9),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(y, y_pred)\n",
        "  mcc = matthews_corrcoef(y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(y, y_pred)\n",
        "  f1 = f1_score(y, y_pred, average='micro')\n",
        "  precision_score = precision_score(y, y_pred, average='micro')\n",
        "  recall_score = recall_score(y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"Top100_Metics(Combined(DIP)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X,y)\n",
        "pd.DataFrame(prob).to_csv(\"Top20_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VBhnfpnb0CMG"
      },
      "source": [
        "**Analysis of Top-50 Features**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "S_zwJnRR0KPO"
      },
      "outputs": [],
      "source": [
        "top_50 = df1[['PAAC13','PAAC6','PAAC2','PAAC15','PAAC11','PAAC1','PAAC3','PAAC7','PAAC20','PAAC14','PAAC4','PAAC16','PAAC19','PAAC12','PAAC17','PAAC8','PAAC21','PAAC10','CTDC37','CTDC9','PAAC22',\n",
        "               'CTDC6','CTDC27','PAAC9','CTDC10','CTDC32','CTDC26','CTDC19','CTDC35','CTDC33','CTDC5','CTDC21','CTDC18','CTDC16','CTDC17','CTDC13','CTDC31','CTDC28','CTDC7',\n",
        "               'CTDC23','PAAC5','PAAC18','WToV385','WToV10','WToV477','WToV217','WToV481','WToV202','WToV364','WToV131','Target']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XR6Y744_0Yy-",
        "outputId": "028b3530-b5c8-473e-f44c-d6982df561e0"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=7, n_estimato...  0.956463  0.913837   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.965940  0.932047   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.990345  0.980704   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.983908  0.967846   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.926694  0.854517   \n",
            "5  ExtraTreesClassifier(max_depth=7, n_estimators...  0.848739  0.700303   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.994994  0.989980   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.912743   0.956463  0.956463  0.956463  \n",
            "1  0.931783   0.965940  0.965940  0.965940  \n",
            "2  0.980671   0.990345  0.990345  0.990345  \n",
            "3  0.967782   0.983908  0.983908  0.983908  \n",
            "4  0.853039   0.926694  0.926694  0.926694  \n",
            "5  0.696367   0.848739  0.848739  0.848739  \n",
            "6  0.989980   0.994994  0.994994  0.994994  \n",
            "0:\tlearn: 0.5749112\ttotal: 40.1ms\tremaining: 1.76s\n",
            "1:\tlearn: 0.5132443\ttotal: 75ms\tremaining: 1.61s\n",
            "2:\tlearn: 0.4598633\ttotal: 99.6ms\tremaining: 1.39s\n",
            "3:\tlearn: 0.4249100\ttotal: 137ms\tremaining: 1.4s\n",
            "4:\tlearn: 0.3978668\ttotal: 167ms\tremaining: 1.33s\n",
            "5:\tlearn: 0.3702110\ttotal: 200ms\tremaining: 1.3s\n",
            "6:\tlearn: 0.3430077\ttotal: 231ms\tremaining: 1.25s\n",
            "7:\tlearn: 0.3259956\ttotal: 272ms\tremaining: 1.26s\n",
            "8:\tlearn: 0.3123459\ttotal: 304ms\tremaining: 1.22s\n",
            "9:\tlearn: 0.2943291\ttotal: 347ms\tremaining: 1.21s\n",
            "10:\tlearn: 0.2727365\ttotal: 377ms\tremaining: 1.17s\n",
            "11:\tlearn: 0.2518227\ttotal: 412ms\tremaining: 1.13s\n",
            "12:\tlearn: 0.2282754\ttotal: 448ms\tremaining: 1.1s\n",
            "13:\tlearn: 0.2105161\ttotal: 490ms\tremaining: 1.08s\n",
            "14:\tlearn: 0.1969794\ttotal: 521ms\tremaining: 1.04s\n",
            "15:\tlearn: 0.1789221\ttotal: 552ms\tremaining: 1s\n",
            "16:\tlearn: 0.1694669\ttotal: 578ms\tremaining: 952ms\n",
            "17:\tlearn: 0.1554394\ttotal: 611ms\tremaining: 917ms\n",
            "18:\tlearn: 0.1453880\ttotal: 646ms\tremaining: 883ms\n",
            "19:\tlearn: 0.1296528\ttotal: 677ms\tremaining: 846ms\n",
            "20:\tlearn: 0.1229916\ttotal: 716ms\tremaining: 818ms\n",
            "21:\tlearn: 0.1154357\ttotal: 745ms\tremaining: 779ms\n",
            "22:\tlearn: 0.1091322\ttotal: 783ms\tremaining: 748ms\n",
            "23:\tlearn: 0.1029724\ttotal: 819ms\tremaining: 716ms\n",
            "24:\tlearn: 0.0944310\ttotal: 852ms\tremaining: 681ms\n",
            "25:\tlearn: 0.0892144\ttotal: 891ms\tremaining: 651ms\n",
            "26:\tlearn: 0.0854233\ttotal: 924ms\tremaining: 616ms\n",
            "27:\tlearn: 0.0820043\ttotal: 959ms\tremaining: 582ms\n",
            "28:\tlearn: 0.0776079\ttotal: 994ms\tremaining: 548ms\n",
            "29:\tlearn: 0.0724360\ttotal: 1.03s\tremaining: 514ms\n",
            "30:\tlearn: 0.0696329\ttotal: 1.06s\tremaining: 481ms\n",
            "31:\tlearn: 0.0653901\ttotal: 1.1s\tremaining: 447ms\n",
            "32:\tlearn: 0.0613583\ttotal: 1.13s\tremaining: 412ms\n",
            "33:\tlearn: 0.0589195\ttotal: 1.16s\tremaining: 376ms\n",
            "34:\tlearn: 0.0562512\ttotal: 1.19s\tremaining: 341ms\n",
            "35:\tlearn: 0.0541128\ttotal: 1.23s\tremaining: 307ms\n",
            "36:\tlearn: 0.0510013\ttotal: 1.26s\tremaining: 273ms\n",
            "37:\tlearn: 0.0497078\ttotal: 1.28s\tremaining: 236ms\n",
            "38:\tlearn: 0.0480914\ttotal: 1.3s\tremaining: 200ms\n",
            "39:\tlearn: 0.0470583\ttotal: 1.33s\tremaining: 166ms\n",
            "40:\tlearn: 0.0442349\ttotal: 1.36s\tremaining: 133ms\n",
            "41:\tlearn: 0.0427363\ttotal: 1.4s\tremaining: 100ms\n",
            "42:\tlearn: 0.0410819\ttotal: 1.43s\tremaining: 66.7ms\n",
            "43:\tlearn: 0.0390777\ttotal: 1.46s\tremaining: 33.2ms\n",
            "44:\tlearn: 0.0378479\ttotal: 1.49s\tremaining: 0us\n",
            "0:\tlearn: 0.5651186\ttotal: 11.3ms\tremaining: 495ms\n",
            "1:\tlearn: 0.5104055\ttotal: 22.9ms\tremaining: 493ms\n",
            "2:\tlearn: 0.4647513\ttotal: 33.8ms\tremaining: 473ms\n",
            "3:\tlearn: 0.4226713\ttotal: 44.5ms\tremaining: 456ms\n",
            "4:\tlearn: 0.3895351\ttotal: 55.6ms\tremaining: 445ms\n",
            "5:\tlearn: 0.3636849\ttotal: 67.8ms\tremaining: 441ms\n",
            "6:\tlearn: 0.3462179\ttotal: 81.9ms\tremaining: 445ms\n",
            "7:\tlearn: 0.3287093\ttotal: 93.5ms\tremaining: 433ms\n",
            "8:\tlearn: 0.3093290\ttotal: 105ms\tremaining: 419ms\n",
            "9:\tlearn: 0.2883724\ttotal: 116ms\tremaining: 408ms\n",
            "10:\tlearn: 0.2644466\ttotal: 128ms\tremaining: 397ms\n",
            "11:\tlearn: 0.2510050\ttotal: 139ms\tremaining: 381ms\n",
            "12:\tlearn: 0.2364612\ttotal: 150ms\tremaining: 369ms\n",
            "13:\tlearn: 0.2149024\ttotal: 177ms\tremaining: 393ms\n",
            "14:\tlearn: 0.1998393\ttotal: 189ms\tremaining: 378ms\n",
            "15:\tlearn: 0.1843135\ttotal: 201ms\tremaining: 363ms\n",
            "16:\tlearn: 0.1727376\ttotal: 224ms\tremaining: 369ms\n",
            "17:\tlearn: 0.1592972\ttotal: 235ms\tremaining: 353ms\n",
            "18:\tlearn: 0.1490143\ttotal: 246ms\tremaining: 337ms\n",
            "19:\tlearn: 0.1360878\ttotal: 257ms\tremaining: 322ms\n",
            "20:\tlearn: 0.1289588\ttotal: 268ms\tremaining: 306ms\n",
            "21:\tlearn: 0.1225948\ttotal: 279ms\tremaining: 292ms\n",
            "22:\tlearn: 0.1129638\ttotal: 291ms\tremaining: 278ms\n",
            "23:\tlearn: 0.1058499\ttotal: 301ms\tremaining: 264ms\n",
            "24:\tlearn: 0.0986869\ttotal: 312ms\tremaining: 250ms\n",
            "25:\tlearn: 0.0950993\ttotal: 324ms\tremaining: 237ms\n",
            "26:\tlearn: 0.0911801\ttotal: 334ms\tremaining: 223ms\n",
            "27:\tlearn: 0.0834810\ttotal: 347ms\tremaining: 211ms\n",
            "28:\tlearn: 0.0793765\ttotal: 358ms\tremaining: 197ms\n",
            "29:\tlearn: 0.0741859\ttotal: 370ms\tremaining: 185ms\n",
            "30:\tlearn: 0.0705818\ttotal: 381ms\tremaining: 172ms\n",
            "31:\tlearn: 0.0657446\ttotal: 393ms\tremaining: 159ms\n",
            "32:\tlearn: 0.0617392\ttotal: 406ms\tremaining: 148ms\n",
            "33:\tlearn: 0.0591958\ttotal: 418ms\tremaining: 135ms\n",
            "34:\tlearn: 0.0557772\ttotal: 439ms\tremaining: 126ms\n",
            "35:\tlearn: 0.0537828\ttotal: 450ms\tremaining: 113ms\n",
            "36:\tlearn: 0.0507575\ttotal: 461ms\tremaining: 99.7ms\n",
            "37:\tlearn: 0.0486404\ttotal: 473ms\tremaining: 87.1ms\n",
            "38:\tlearn: 0.0472659\ttotal: 484ms\tremaining: 74.5ms\n",
            "39:\tlearn: 0.0446256\ttotal: 496ms\tremaining: 62ms\n",
            "40:\tlearn: 0.0430610\ttotal: 507ms\tremaining: 49.5ms\n",
            "41:\tlearn: 0.0420687\ttotal: 518ms\tremaining: 37ms\n",
            "42:\tlearn: 0.0403618\ttotal: 529ms\tremaining: 24.6ms\n",
            "43:\tlearn: 0.0387058\ttotal: 541ms\tremaining: 12.3ms\n",
            "44:\tlearn: 0.0360392\ttotal: 553ms\tremaining: 0us\n",
            "0:\tlearn: 0.5677301\ttotal: 12.5ms\tremaining: 550ms\n",
            "1:\tlearn: 0.5130984\ttotal: 24.6ms\tremaining: 528ms\n",
            "2:\tlearn: 0.4743874\ttotal: 35.2ms\tremaining: 493ms\n",
            "3:\tlearn: 0.4294421\ttotal: 45.5ms\tremaining: 466ms\n",
            "4:\tlearn: 0.3966504\ttotal: 56.7ms\tremaining: 454ms\n",
            "5:\tlearn: 0.3635117\ttotal: 67.6ms\tremaining: 439ms\n",
            "6:\tlearn: 0.3300793\ttotal: 79.3ms\tremaining: 430ms\n",
            "7:\tlearn: 0.3012070\ttotal: 91.5ms\tremaining: 423ms\n",
            "8:\tlearn: 0.2844065\ttotal: 104ms\tremaining: 416ms\n",
            "9:\tlearn: 0.2667203\ttotal: 116ms\tremaining: 405ms\n",
            "10:\tlearn: 0.2449447\ttotal: 127ms\tremaining: 392ms\n",
            "11:\tlearn: 0.2288479\ttotal: 138ms\tremaining: 380ms\n",
            "12:\tlearn: 0.2132040\ttotal: 149ms\tremaining: 366ms\n",
            "13:\tlearn: 0.1994096\ttotal: 160ms\tremaining: 354ms\n",
            "14:\tlearn: 0.1891397\ttotal: 171ms\tremaining: 342ms\n",
            "15:\tlearn: 0.1758019\ttotal: 182ms\tremaining: 329ms\n",
            "16:\tlearn: 0.1644020\ttotal: 192ms\tremaining: 317ms\n",
            "17:\tlearn: 0.1549012\ttotal: 206ms\tremaining: 309ms\n",
            "18:\tlearn: 0.1467150\ttotal: 224ms\tremaining: 306ms\n",
            "19:\tlearn: 0.1406441\ttotal: 234ms\tremaining: 293ms\n",
            "20:\tlearn: 0.1314519\ttotal: 245ms\tremaining: 279ms\n",
            "21:\tlearn: 0.1240984\ttotal: 255ms\tremaining: 267ms\n",
            "22:\tlearn: 0.1157123\ttotal: 267ms\tremaining: 255ms\n",
            "23:\tlearn: 0.1123257\ttotal: 278ms\tremaining: 243ms\n",
            "24:\tlearn: 0.1074031\ttotal: 292ms\tremaining: 234ms\n",
            "25:\tlearn: 0.1024716\ttotal: 303ms\tremaining: 221ms\n",
            "26:\tlearn: 0.0996896\ttotal: 314ms\tremaining: 209ms\n",
            "27:\tlearn: 0.0929983\ttotal: 325ms\tremaining: 197ms\n",
            "28:\tlearn: 0.0871988\ttotal: 338ms\tremaining: 187ms\n",
            "29:\tlearn: 0.0823018\ttotal: 349ms\tremaining: 175ms\n",
            "30:\tlearn: 0.0774724\ttotal: 360ms\tremaining: 163ms\n",
            "31:\tlearn: 0.0736844\ttotal: 371ms\tremaining: 151ms\n",
            "32:\tlearn: 0.0692116\ttotal: 383ms\tremaining: 139ms\n",
            "33:\tlearn: 0.0657505\ttotal: 396ms\tremaining: 128ms\n",
            "34:\tlearn: 0.0636237\ttotal: 407ms\tremaining: 116ms\n",
            "35:\tlearn: 0.0605739\ttotal: 420ms\tremaining: 105ms\n",
            "36:\tlearn: 0.0583313\ttotal: 435ms\tremaining: 94ms\n",
            "37:\tlearn: 0.0567611\ttotal: 446ms\tremaining: 82.1ms\n",
            "38:\tlearn: 0.0542652\ttotal: 457ms\tremaining: 70.3ms\n",
            "39:\tlearn: 0.0521317\ttotal: 468ms\tremaining: 58.5ms\n",
            "40:\tlearn: 0.0505415\ttotal: 478ms\tremaining: 46.6ms\n",
            "41:\tlearn: 0.0496380\ttotal: 488ms\tremaining: 34.9ms\n",
            "42:\tlearn: 0.0475519\ttotal: 503ms\tremaining: 23.4ms\n",
            "43:\tlearn: 0.0466298\ttotal: 526ms\tremaining: 11.9ms\n",
            "44:\tlearn: 0.0438936\ttotal: 540ms\tremaining: 0us\n",
            "0:\tlearn: 0.5574027\ttotal: 11.3ms\tremaining: 499ms\n",
            "1:\tlearn: 0.5169362\ttotal: 23.5ms\tremaining: 506ms\n",
            "2:\tlearn: 0.4789782\ttotal: 34.3ms\tremaining: 480ms\n",
            "3:\tlearn: 0.4381337\ttotal: 46ms\tremaining: 472ms\n",
            "4:\tlearn: 0.4146363\ttotal: 57ms\tremaining: 456ms\n",
            "5:\tlearn: 0.3893711\ttotal: 68.1ms\tremaining: 443ms\n",
            "6:\tlearn: 0.3685869\ttotal: 84.8ms\tremaining: 460ms\n",
            "7:\tlearn: 0.3406561\ttotal: 107ms\tremaining: 494ms\n",
            "8:\tlearn: 0.3162668\ttotal: 122ms\tremaining: 489ms\n",
            "9:\tlearn: 0.2976964\ttotal: 132ms\tremaining: 463ms\n",
            "10:\tlearn: 0.2772403\ttotal: 143ms\tremaining: 441ms\n",
            "11:\tlearn: 0.2488223\ttotal: 154ms\tremaining: 424ms\n",
            "12:\tlearn: 0.2315536\ttotal: 165ms\tremaining: 407ms\n",
            "13:\tlearn: 0.2229537\ttotal: 176ms\tremaining: 389ms\n",
            "14:\tlearn: 0.2080185\ttotal: 186ms\tremaining: 372ms\n",
            "15:\tlearn: 0.1944869\ttotal: 197ms\tremaining: 356ms\n",
            "16:\tlearn: 0.1803837\ttotal: 208ms\tremaining: 343ms\n",
            "17:\tlearn: 0.1698033\ttotal: 226ms\tremaining: 339ms\n",
            "18:\tlearn: 0.1535823\ttotal: 237ms\tremaining: 324ms\n",
            "19:\tlearn: 0.1469541\ttotal: 248ms\tremaining: 310ms\n",
            "20:\tlearn: 0.1373585\ttotal: 260ms\tremaining: 297ms\n",
            "21:\tlearn: 0.1293863\ttotal: 271ms\tremaining: 284ms\n",
            "22:\tlearn: 0.1211904\ttotal: 283ms\tremaining: 270ms\n",
            "23:\tlearn: 0.1111758\ttotal: 293ms\tremaining: 257ms\n",
            "24:\tlearn: 0.1038507\ttotal: 305ms\tremaining: 244ms\n",
            "25:\tlearn: 0.0950077\ttotal: 317ms\tremaining: 231ms\n",
            "26:\tlearn: 0.0915738\ttotal: 327ms\tremaining: 218ms\n",
            "27:\tlearn: 0.0852120\ttotal: 338ms\tremaining: 205ms\n",
            "28:\tlearn: 0.0811163\ttotal: 348ms\tremaining: 192ms\n",
            "29:\tlearn: 0.0769346\ttotal: 360ms\tremaining: 180ms\n",
            "30:\tlearn: 0.0750125\ttotal: 370ms\tremaining: 167ms\n",
            "31:\tlearn: 0.0726079\ttotal: 381ms\tremaining: 155ms\n",
            "32:\tlearn: 0.0684576\ttotal: 392ms\tremaining: 143ms\n",
            "33:\tlearn: 0.0654045\ttotal: 404ms\tremaining: 131ms\n",
            "34:\tlearn: 0.0621930\ttotal: 423ms\tremaining: 121ms\n",
            "35:\tlearn: 0.0600921\ttotal: 433ms\tremaining: 108ms\n",
            "36:\tlearn: 0.0587450\ttotal: 443ms\tremaining: 95.7ms\n",
            "37:\tlearn: 0.0564737\ttotal: 453ms\tremaining: 83.5ms\n",
            "38:\tlearn: 0.0548389\ttotal: 463ms\tremaining: 71.3ms\n",
            "39:\tlearn: 0.0520160\ttotal: 484ms\tremaining: 60.5ms\n",
            "40:\tlearn: 0.0500388\ttotal: 494ms\tremaining: 48.2ms\n",
            "41:\tlearn: 0.0462975\ttotal: 505ms\tremaining: 36.1ms\n",
            "42:\tlearn: 0.0446893\ttotal: 516ms\tremaining: 24ms\n",
            "43:\tlearn: 0.0432787\ttotal: 527ms\tremaining: 12ms\n",
            "44:\tlearn: 0.0421270\ttotal: 538ms\tremaining: 0us\n",
            "0:\tlearn: 0.5679677\ttotal: 12ms\tremaining: 526ms\n",
            "1:\tlearn: 0.5143898\ttotal: 23.7ms\tremaining: 510ms\n",
            "2:\tlearn: 0.4841138\ttotal: 34.8ms\tremaining: 487ms\n",
            "3:\tlearn: 0.4396464\ttotal: 46.7ms\tremaining: 479ms\n",
            "4:\tlearn: 0.3958447\ttotal: 58.7ms\tremaining: 469ms\n",
            "5:\tlearn: 0.3836704\ttotal: 71ms\tremaining: 461ms\n",
            "6:\tlearn: 0.3536842\ttotal: 83.6ms\tremaining: 454ms\n",
            "7:\tlearn: 0.3277092\ttotal: 96.6ms\tremaining: 447ms\n",
            "8:\tlearn: 0.2984528\ttotal: 111ms\tremaining: 442ms\n",
            "9:\tlearn: 0.2790530\ttotal: 123ms\tremaining: 431ms\n",
            "10:\tlearn: 0.2629196\ttotal: 134ms\tremaining: 415ms\n",
            "11:\tlearn: 0.2390870\ttotal: 146ms\tremaining: 400ms\n",
            "12:\tlearn: 0.2148163\ttotal: 157ms\tremaining: 386ms\n",
            "13:\tlearn: 0.2031407\ttotal: 167ms\tremaining: 371ms\n",
            "14:\tlearn: 0.1890267\ttotal: 179ms\tremaining: 358ms\n",
            "15:\tlearn: 0.1727713\ttotal: 190ms\tremaining: 345ms\n",
            "16:\tlearn: 0.1595016\ttotal: 202ms\tremaining: 332ms\n",
            "17:\tlearn: 0.1464020\ttotal: 223ms\tremaining: 335ms\n",
            "18:\tlearn: 0.1325665\ttotal: 239ms\tremaining: 328ms\n",
            "19:\tlearn: 0.1247789\ttotal: 258ms\tremaining: 322ms\n",
            "20:\tlearn: 0.1216095\ttotal: 269ms\tremaining: 307ms\n",
            "21:\tlearn: 0.1148899\ttotal: 280ms\tremaining: 293ms\n",
            "22:\tlearn: 0.1049241\ttotal: 292ms\tremaining: 280ms\n",
            "23:\tlearn: 0.0966876\ttotal: 304ms\tremaining: 266ms\n",
            "24:\tlearn: 0.0930823\ttotal: 315ms\tremaining: 252ms\n",
            "25:\tlearn: 0.0869638\ttotal: 327ms\tremaining: 239ms\n",
            "26:\tlearn: 0.0813233\ttotal: 338ms\tremaining: 225ms\n",
            "27:\tlearn: 0.0776994\ttotal: 349ms\tremaining: 212ms\n",
            "28:\tlearn: 0.0737502\ttotal: 360ms\tremaining: 199ms\n",
            "29:\tlearn: 0.0699670\ttotal: 372ms\tremaining: 186ms\n",
            "30:\tlearn: 0.0666256\ttotal: 384ms\tremaining: 173ms\n",
            "31:\tlearn: 0.0641108\ttotal: 395ms\tremaining: 160ms\n",
            "32:\tlearn: 0.0620861\ttotal: 405ms\tremaining: 147ms\n",
            "33:\tlearn: 0.0599684\ttotal: 416ms\tremaining: 135ms\n",
            "34:\tlearn: 0.0556624\ttotal: 436ms\tremaining: 125ms\n",
            "35:\tlearn: 0.0527036\ttotal: 447ms\tremaining: 112ms\n",
            "36:\tlearn: 0.0508170\ttotal: 458ms\tremaining: 99.1ms\n",
            "37:\tlearn: 0.0490438\ttotal: 469ms\tremaining: 86.3ms\n",
            "38:\tlearn: 0.0476369\ttotal: 480ms\tremaining: 73.8ms\n",
            "39:\tlearn: 0.0445524\ttotal: 491ms\tremaining: 61.3ms\n",
            "40:\tlearn: 0.0438665\ttotal: 502ms\tremaining: 48.9ms\n",
            "41:\tlearn: 0.0426406\ttotal: 513ms\tremaining: 36.6ms\n",
            "42:\tlearn: 0.0401700\ttotal: 525ms\tremaining: 24.4ms\n",
            "43:\tlearn: 0.0389668\ttotal: 539ms\tremaining: 12.2ms\n",
            "44:\tlearn: 0.0371457\ttotal: 551ms\tremaining: 0us\n",
            "0:\tlearn: 0.5801595\ttotal: 11.9ms\tremaining: 523ms\n",
            "1:\tlearn: 0.5251258\ttotal: 22.7ms\tremaining: 487ms\n",
            "2:\tlearn: 0.4747012\ttotal: 33.8ms\tremaining: 473ms\n",
            "3:\tlearn: 0.4470639\ttotal: 44.2ms\tremaining: 453ms\n",
            "4:\tlearn: 0.4159499\ttotal: 55.2ms\tremaining: 442ms\n",
            "5:\tlearn: 0.3880857\ttotal: 74.9ms\tremaining: 487ms\n",
            "6:\tlearn: 0.3656779\ttotal: 85.7ms\tremaining: 465ms\n",
            "7:\tlearn: 0.3376490\ttotal: 99.5ms\tremaining: 460ms\n",
            "8:\tlearn: 0.3172532\ttotal: 111ms\tremaining: 443ms\n",
            "9:\tlearn: 0.2967650\ttotal: 122ms\tremaining: 426ms\n",
            "10:\tlearn: 0.2820749\ttotal: 132ms\tremaining: 409ms\n",
            "11:\tlearn: 0.2661564\ttotal: 145ms\tremaining: 399ms\n",
            "12:\tlearn: 0.2526905\ttotal: 156ms\tremaining: 384ms\n",
            "13:\tlearn: 0.2308583\ttotal: 167ms\tremaining: 370ms\n",
            "14:\tlearn: 0.2145115\ttotal: 179ms\tremaining: 358ms\n",
            "15:\tlearn: 0.2030069\ttotal: 189ms\tremaining: 343ms\n",
            "16:\tlearn: 0.1883816\ttotal: 201ms\tremaining: 331ms\n",
            "17:\tlearn: 0.1704757\ttotal: 220ms\tremaining: 330ms\n",
            "18:\tlearn: 0.1590649\ttotal: 235ms\tremaining: 322ms\n",
            "19:\tlearn: 0.1468082\ttotal: 246ms\tremaining: 307ms\n",
            "20:\tlearn: 0.1365583\ttotal: 259ms\tremaining: 296ms\n",
            "21:\tlearn: 0.1262880\ttotal: 270ms\tremaining: 282ms\n",
            "22:\tlearn: 0.1192556\ttotal: 282ms\tremaining: 270ms\n",
            "23:\tlearn: 0.1108338\ttotal: 297ms\tremaining: 260ms\n",
            "24:\tlearn: 0.1063480\ttotal: 309ms\tremaining: 247ms\n",
            "25:\tlearn: 0.1021568\ttotal: 319ms\tremaining: 233ms\n",
            "26:\tlearn: 0.0944235\ttotal: 331ms\tremaining: 220ms\n",
            "27:\tlearn: 0.0886880\ttotal: 342ms\tremaining: 207ms\n",
            "28:\tlearn: 0.0842294\ttotal: 353ms\tremaining: 195ms\n",
            "29:\tlearn: 0.0800604\ttotal: 365ms\tremaining: 183ms\n",
            "30:\tlearn: 0.0757892\ttotal: 378ms\tremaining: 171ms\n",
            "31:\tlearn: 0.0706657\ttotal: 389ms\tremaining: 158ms\n",
            "32:\tlearn: 0.0678666\ttotal: 402ms\tremaining: 146ms\n",
            "33:\tlearn: 0.0645724\ttotal: 413ms\tremaining: 134ms\n",
            "34:\tlearn: 0.0612474\ttotal: 437ms\tremaining: 125ms\n",
            "35:\tlearn: 0.0582307\ttotal: 448ms\tremaining: 112ms\n",
            "36:\tlearn: 0.0544431\ttotal: 462ms\tremaining: 99.9ms\n",
            "37:\tlearn: 0.0522221\ttotal: 473ms\tremaining: 87.2ms\n",
            "38:\tlearn: 0.0502780\ttotal: 485ms\tremaining: 74.7ms\n",
            "39:\tlearn: 0.0470708\ttotal: 497ms\tremaining: 62.2ms\n",
            "40:\tlearn: 0.0450005\ttotal: 510ms\tremaining: 49.8ms\n",
            "41:\tlearn: 0.0422911\ttotal: 522ms\tremaining: 37.3ms\n",
            "42:\tlearn: 0.0401800\ttotal: 535ms\tremaining: 24.9ms\n",
            "43:\tlearn: 0.0380782\ttotal: 548ms\tremaining: 12.5ms\n",
            "44:\tlearn: 0.0374505\ttotal: 559ms\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "X = top_50.drop(['Target'], axis=1)\n",
        "y = top_50['Target']\n",
        "\n",
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 350, max_depth = 7),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 350, max_depth = 7),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(y, y_pred)\n",
        "  mcc = matthews_corrcoef(y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(y, y_pred)\n",
        "  f1 = f1_score(y, y_pred, average='micro')\n",
        "  precision_score = precision_score(y, y_pred, average='micro')\n",
        "  recall_score = recall_score(y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"Top50_Metics(Combined(DIP)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X,y)\n",
        "pd.DataFrame(prob).to_csv(\"Top20_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QrfgjvVl0gK2"
      },
      "source": [
        "**Analysis of Top-20 Features**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ciBuJ-l70lgb"
      },
      "outputs": [],
      "source": [
        "top_20 = df1[['PAAC13','PAAC6','PAAC2','PAAC15','PAAC11','PAAC1','PAAC3','PAAC7','PAAC20','PAAC14','PAAC4','PAAC16','PAAC19','PAAC12','PAAC17','PAAC8','PAAC21','PAAC10','CTDC37','CTDC9',\n",
        "              'Target']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "1O_5UG0s0ugL",
        "outputId": "74b49e03-806c-4bb6-d2af-82d46a52a259"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=7, n_estimato...  0.929734  0.861117   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.940819  0.882438   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.960844  0.921709   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.954228  0.909094   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.894332  0.788483   \n",
            "5  ExtraTreesClassifier(max_depth=7, n_estimators...  0.821652  0.650453   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.962274  0.924552   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.859095   0.929734  0.929734  0.929734  \n",
            "1  0.881389   0.940819  0.940819  0.940819  \n",
            "2  0.921594   0.960844  0.960844  0.960844  \n",
            "3  0.908281   0.954228  0.954228  0.954228  \n",
            "4  0.788458   0.894332  0.894332  0.894332  \n",
            "5  0.641399   0.821652  0.821652  0.821652  \n",
            "6  0.924462   0.962274  0.962274  0.962274  \n",
            "0:\tlearn: 0.5884382\ttotal: 7.89ms\tremaining: 347ms\n",
            "1:\tlearn: 0.5299300\ttotal: 14.7ms\tremaining: 316ms\n",
            "2:\tlearn: 0.4893402\ttotal: 22ms\tremaining: 309ms\n",
            "3:\tlearn: 0.4598979\ttotal: 29.6ms\tremaining: 303ms\n",
            "4:\tlearn: 0.4433978\ttotal: 36.3ms\tremaining: 290ms\n",
            "5:\tlearn: 0.4155502\ttotal: 43.4ms\tremaining: 282ms\n",
            "6:\tlearn: 0.3963826\ttotal: 50.1ms\tremaining: 272ms\n",
            "7:\tlearn: 0.3747170\ttotal: 57.6ms\tremaining: 267ms\n",
            "8:\tlearn: 0.3496505\ttotal: 64.5ms\tremaining: 258ms\n",
            "9:\tlearn: 0.3383223\ttotal: 71.3ms\tremaining: 250ms\n",
            "10:\tlearn: 0.3179911\ttotal: 79ms\tremaining: 244ms\n",
            "11:\tlearn: 0.3052080\ttotal: 86.1ms\tremaining: 237ms\n",
            "12:\tlearn: 0.2911185\ttotal: 93.6ms\tremaining: 230ms\n",
            "13:\tlearn: 0.2728720\ttotal: 101ms\tremaining: 224ms\n",
            "14:\tlearn: 0.2527263\ttotal: 108ms\tremaining: 216ms\n",
            "15:\tlearn: 0.2413093\ttotal: 115ms\tremaining: 209ms\n",
            "16:\tlearn: 0.2287492\ttotal: 122ms\tremaining: 201ms\n",
            "17:\tlearn: 0.2133881\ttotal: 129ms\tremaining: 194ms\n",
            "18:\tlearn: 0.2027493\ttotal: 136ms\tremaining: 186ms\n",
            "19:\tlearn: 0.1930579\ttotal: 143ms\tremaining: 179ms\n",
            "20:\tlearn: 0.1836858\ttotal: 151ms\tremaining: 172ms\n",
            "21:\tlearn: 0.1753989\ttotal: 159ms\tremaining: 166ms\n",
            "22:\tlearn: 0.1674880\ttotal: 166ms\tremaining: 158ms\n",
            "23:\tlearn: 0.1617584\ttotal: 173ms\tremaining: 151ms\n",
            "24:\tlearn: 0.1561004\ttotal: 179ms\tremaining: 144ms\n",
            "25:\tlearn: 0.1513311\ttotal: 186ms\tremaining: 136ms\n",
            "26:\tlearn: 0.1486756\ttotal: 194ms\tremaining: 129ms\n",
            "27:\tlearn: 0.1419726\ttotal: 203ms\tremaining: 123ms\n",
            "28:\tlearn: 0.1393663\ttotal: 213ms\tremaining: 118ms\n",
            "29:\tlearn: 0.1338279\ttotal: 221ms\tremaining: 110ms\n",
            "30:\tlearn: 0.1312426\ttotal: 227ms\tremaining: 103ms\n",
            "31:\tlearn: 0.1264454\ttotal: 235ms\tremaining: 95.6ms\n",
            "32:\tlearn: 0.1197883\ttotal: 244ms\tremaining: 88.8ms\n",
            "33:\tlearn: 0.1174212\ttotal: 252ms\tremaining: 81.5ms\n",
            "34:\tlearn: 0.1143856\ttotal: 259ms\tremaining: 73.9ms\n",
            "35:\tlearn: 0.1115818\ttotal: 266ms\tremaining: 66.4ms\n",
            "36:\tlearn: 0.1082004\ttotal: 273ms\tremaining: 59ms\n",
            "37:\tlearn: 0.1069290\ttotal: 280ms\tremaining: 51.5ms\n",
            "38:\tlearn: 0.1042469\ttotal: 287ms\tremaining: 44.1ms\n",
            "39:\tlearn: 0.1016389\ttotal: 294ms\tremaining: 36.8ms\n",
            "40:\tlearn: 0.0980008\ttotal: 302ms\tremaining: 29.4ms\n",
            "41:\tlearn: 0.0957104\ttotal: 309ms\tremaining: 22.1ms\n",
            "42:\tlearn: 0.0933300\ttotal: 316ms\tremaining: 14.7ms\n",
            "43:\tlearn: 0.0917589\ttotal: 323ms\tremaining: 7.34ms\n",
            "44:\tlearn: 0.0909089\ttotal: 330ms\tremaining: 0us\n",
            "0:\tlearn: 0.5808430\ttotal: 6.52ms\tremaining: 287ms\n",
            "1:\tlearn: 0.5273989\ttotal: 12.6ms\tremaining: 271ms\n",
            "2:\tlearn: 0.4794142\ttotal: 18.7ms\tremaining: 262ms\n",
            "3:\tlearn: 0.4475830\ttotal: 24.5ms\tremaining: 251ms\n",
            "4:\tlearn: 0.4221138\ttotal: 31.4ms\tremaining: 252ms\n",
            "5:\tlearn: 0.3846467\ttotal: 38.3ms\tremaining: 249ms\n",
            "6:\tlearn: 0.3720130\ttotal: 44.8ms\tremaining: 243ms\n",
            "7:\tlearn: 0.3594746\ttotal: 51.8ms\tremaining: 240ms\n",
            "8:\tlearn: 0.3431923\ttotal: 58.6ms\tremaining: 234ms\n",
            "9:\tlearn: 0.3266710\ttotal: 64.7ms\tremaining: 226ms\n",
            "10:\tlearn: 0.3016422\ttotal: 71.7ms\tremaining: 222ms\n",
            "11:\tlearn: 0.2859795\ttotal: 78.1ms\tremaining: 215ms\n",
            "12:\tlearn: 0.2700690\ttotal: 84.7ms\tremaining: 209ms\n",
            "13:\tlearn: 0.2551967\ttotal: 91ms\tremaining: 202ms\n",
            "14:\tlearn: 0.2393570\ttotal: 97.3ms\tremaining: 195ms\n",
            "15:\tlearn: 0.2269169\ttotal: 103ms\tremaining: 187ms\n",
            "16:\tlearn: 0.2147062\ttotal: 109ms\tremaining: 180ms\n",
            "17:\tlearn: 0.2070148\ttotal: 115ms\tremaining: 173ms\n",
            "18:\tlearn: 0.1944922\ttotal: 121ms\tremaining: 166ms\n",
            "19:\tlearn: 0.1845728\ttotal: 127ms\tremaining: 159ms\n",
            "20:\tlearn: 0.1786549\ttotal: 133ms\tremaining: 152ms\n",
            "21:\tlearn: 0.1715378\ttotal: 139ms\tremaining: 145ms\n",
            "22:\tlearn: 0.1647893\ttotal: 145ms\tremaining: 139ms\n",
            "23:\tlearn: 0.1618588\ttotal: 151ms\tremaining: 132ms\n",
            "24:\tlearn: 0.1540643\ttotal: 158ms\tremaining: 126ms\n",
            "25:\tlearn: 0.1501633\ttotal: 164ms\tremaining: 120ms\n",
            "26:\tlearn: 0.1464657\ttotal: 171ms\tremaining: 114ms\n",
            "27:\tlearn: 0.1417404\ttotal: 177ms\tremaining: 108ms\n",
            "28:\tlearn: 0.1342727\ttotal: 183ms\tremaining: 101ms\n",
            "29:\tlearn: 0.1300130\ttotal: 190ms\tremaining: 94.8ms\n",
            "30:\tlearn: 0.1242519\ttotal: 196ms\tremaining: 88.5ms\n",
            "31:\tlearn: 0.1205074\ttotal: 209ms\tremaining: 84.8ms\n",
            "32:\tlearn: 0.1145105\ttotal: 215ms\tremaining: 78.2ms\n",
            "33:\tlearn: 0.1095986\ttotal: 221ms\tremaining: 71.6ms\n",
            "34:\tlearn: 0.1067682\ttotal: 227ms\tremaining: 64.9ms\n",
            "35:\tlearn: 0.1052468\ttotal: 233ms\tremaining: 58.2ms\n",
            "36:\tlearn: 0.1030509\ttotal: 239ms\tremaining: 51.8ms\n",
            "37:\tlearn: 0.1010340\ttotal: 246ms\tremaining: 45.2ms\n",
            "38:\tlearn: 0.0998349\ttotal: 252ms\tremaining: 38.7ms\n",
            "39:\tlearn: 0.0982976\ttotal: 258ms\tremaining: 32.2ms\n",
            "40:\tlearn: 0.0965558\ttotal: 263ms\tremaining: 25.7ms\n",
            "41:\tlearn: 0.0952127\ttotal: 270ms\tremaining: 19.3ms\n",
            "42:\tlearn: 0.0941380\ttotal: 276ms\tremaining: 12.8ms\n",
            "43:\tlearn: 0.0932161\ttotal: 282ms\tremaining: 6.41ms\n",
            "44:\tlearn: 0.0915966\ttotal: 288ms\tremaining: 0us\n",
            "0:\tlearn: 0.5945563\ttotal: 6.1ms\tremaining: 269ms\n",
            "1:\tlearn: 0.5445677\ttotal: 12.5ms\tremaining: 269ms\n",
            "2:\tlearn: 0.5041070\ttotal: 18.3ms\tremaining: 256ms\n",
            "3:\tlearn: 0.4685815\ttotal: 24.7ms\tremaining: 253ms\n",
            "4:\tlearn: 0.4432100\ttotal: 30.9ms\tremaining: 248ms\n",
            "5:\tlearn: 0.4179938\ttotal: 36.9ms\tremaining: 240ms\n",
            "6:\tlearn: 0.3938174\ttotal: 46.5ms\tremaining: 253ms\n",
            "7:\tlearn: 0.3735630\ttotal: 52.7ms\tremaining: 244ms\n",
            "8:\tlearn: 0.3504662\ttotal: 58.9ms\tremaining: 235ms\n",
            "9:\tlearn: 0.3207134\ttotal: 65.1ms\tremaining: 228ms\n",
            "10:\tlearn: 0.3077901\ttotal: 71.4ms\tremaining: 221ms\n",
            "11:\tlearn: 0.2971947\ttotal: 77.3ms\tremaining: 213ms\n",
            "12:\tlearn: 0.2810596\ttotal: 83.3ms\tremaining: 205ms\n",
            "13:\tlearn: 0.2705303\ttotal: 89.5ms\tremaining: 198ms\n",
            "14:\tlearn: 0.2510113\ttotal: 95.7ms\tremaining: 191ms\n",
            "15:\tlearn: 0.2353054\ttotal: 102ms\tremaining: 184ms\n",
            "16:\tlearn: 0.2265645\ttotal: 108ms\tremaining: 178ms\n",
            "17:\tlearn: 0.2185045\ttotal: 114ms\tremaining: 171ms\n",
            "18:\tlearn: 0.2049814\ttotal: 121ms\tremaining: 166ms\n",
            "19:\tlearn: 0.1968124\ttotal: 128ms\tremaining: 160ms\n",
            "20:\tlearn: 0.1853093\ttotal: 134ms\tremaining: 153ms\n",
            "21:\tlearn: 0.1790424\ttotal: 140ms\tremaining: 146ms\n",
            "22:\tlearn: 0.1712515\ttotal: 147ms\tremaining: 140ms\n",
            "23:\tlearn: 0.1588641\ttotal: 153ms\tremaining: 134ms\n",
            "24:\tlearn: 0.1523764\ttotal: 159ms\tremaining: 127ms\n",
            "25:\tlearn: 0.1495548\ttotal: 165ms\tremaining: 121ms\n",
            "26:\tlearn: 0.1416479\ttotal: 171ms\tremaining: 114ms\n",
            "27:\tlearn: 0.1316462\ttotal: 177ms\tremaining: 108ms\n",
            "28:\tlearn: 0.1271369\ttotal: 184ms\tremaining: 102ms\n",
            "29:\tlearn: 0.1235637\ttotal: 190ms\tremaining: 94.9ms\n",
            "30:\tlearn: 0.1210044\ttotal: 197ms\tremaining: 88.8ms\n",
            "31:\tlearn: 0.1169029\ttotal: 203ms\tremaining: 82.6ms\n",
            "32:\tlearn: 0.1144783\ttotal: 209ms\tremaining: 76ms\n",
            "33:\tlearn: 0.1134931\ttotal: 216ms\tremaining: 69.8ms\n",
            "34:\tlearn: 0.1113811\ttotal: 222ms\tremaining: 63.4ms\n",
            "35:\tlearn: 0.1086512\ttotal: 228ms\tremaining: 57ms\n",
            "36:\tlearn: 0.1061607\ttotal: 235ms\tremaining: 50.7ms\n",
            "37:\tlearn: 0.1021710\ttotal: 244ms\tremaining: 45ms\n",
            "38:\tlearn: 0.0989516\ttotal: 255ms\tremaining: 39.2ms\n",
            "39:\tlearn: 0.0975386\ttotal: 261ms\tremaining: 32.7ms\n",
            "40:\tlearn: 0.0951065\ttotal: 269ms\tremaining: 26.2ms\n",
            "41:\tlearn: 0.0934150\ttotal: 275ms\tremaining: 19.7ms\n",
            "42:\tlearn: 0.0924320\ttotal: 281ms\tremaining: 13.1ms\n",
            "43:\tlearn: 0.0903386\ttotal: 287ms\tremaining: 6.52ms\n",
            "44:\tlearn: 0.0886512\ttotal: 293ms\tremaining: 0us\n",
            "0:\tlearn: 0.5854465\ttotal: 8.75ms\tremaining: 385ms\n",
            "1:\tlearn: 0.5352336\ttotal: 21.4ms\tremaining: 459ms\n",
            "2:\tlearn: 0.4750201\ttotal: 35.1ms\tremaining: 491ms\n",
            "3:\tlearn: 0.4550661\ttotal: 40.7ms\tremaining: 417ms\n",
            "4:\tlearn: 0.4227414\ttotal: 46.4ms\tremaining: 371ms\n",
            "5:\tlearn: 0.3977805\ttotal: 52.3ms\tremaining: 340ms\n",
            "6:\tlearn: 0.3698843\ttotal: 58ms\tremaining: 315ms\n",
            "7:\tlearn: 0.3427592\ttotal: 64ms\tremaining: 296ms\n",
            "8:\tlearn: 0.3199798\ttotal: 69.9ms\tremaining: 280ms\n",
            "9:\tlearn: 0.3030420\ttotal: 75.8ms\tremaining: 265ms\n",
            "10:\tlearn: 0.2878006\ttotal: 81.7ms\tremaining: 253ms\n",
            "11:\tlearn: 0.2746489\ttotal: 89.7ms\tremaining: 247ms\n",
            "12:\tlearn: 0.2580291\ttotal: 98.6ms\tremaining: 243ms\n",
            "13:\tlearn: 0.2417923\ttotal: 104ms\tremaining: 231ms\n",
            "14:\tlearn: 0.2352413\ttotal: 110ms\tremaining: 220ms\n",
            "15:\tlearn: 0.2186849\ttotal: 116ms\tremaining: 210ms\n",
            "16:\tlearn: 0.2122540\ttotal: 122ms\tremaining: 200ms\n",
            "17:\tlearn: 0.2037590\ttotal: 127ms\tremaining: 191ms\n",
            "18:\tlearn: 0.1943059\ttotal: 133ms\tremaining: 182ms\n",
            "19:\tlearn: 0.1866056\ttotal: 139ms\tremaining: 174ms\n",
            "20:\tlearn: 0.1763257\ttotal: 145ms\tremaining: 166ms\n",
            "21:\tlearn: 0.1696374\ttotal: 151ms\tremaining: 158ms\n",
            "22:\tlearn: 0.1601763\ttotal: 157ms\tremaining: 151ms\n",
            "23:\tlearn: 0.1541697\ttotal: 163ms\tremaining: 143ms\n",
            "24:\tlearn: 0.1481096\ttotal: 169ms\tremaining: 135ms\n",
            "25:\tlearn: 0.1450848\ttotal: 175ms\tremaining: 128ms\n",
            "26:\tlearn: 0.1391913\ttotal: 181ms\tremaining: 121ms\n",
            "27:\tlearn: 0.1331552\ttotal: 187ms\tremaining: 114ms\n",
            "28:\tlearn: 0.1271714\ttotal: 195ms\tremaining: 107ms\n",
            "29:\tlearn: 0.1224402\ttotal: 200ms\tremaining: 100ms\n",
            "30:\tlearn: 0.1184398\ttotal: 206ms\tremaining: 93.1ms\n",
            "31:\tlearn: 0.1159170\ttotal: 212ms\tremaining: 86.2ms\n",
            "32:\tlearn: 0.1129343\ttotal: 218ms\tremaining: 79.3ms\n",
            "33:\tlearn: 0.1090076\ttotal: 224ms\tremaining: 72.5ms\n",
            "34:\tlearn: 0.1066593\ttotal: 230ms\tremaining: 65.8ms\n",
            "35:\tlearn: 0.1030186\ttotal: 236ms\tremaining: 59ms\n",
            "36:\tlearn: 0.1014208\ttotal: 243ms\tremaining: 52.5ms\n",
            "37:\tlearn: 0.1001451\ttotal: 249ms\tremaining: 45.8ms\n",
            "38:\tlearn: 0.0985879\ttotal: 255ms\tremaining: 39.2ms\n",
            "39:\tlearn: 0.0969451\ttotal: 260ms\tremaining: 32.6ms\n",
            "40:\tlearn: 0.0957748\ttotal: 266ms\tremaining: 26ms\n",
            "41:\tlearn: 0.0949376\ttotal: 272ms\tremaining: 19.5ms\n",
            "42:\tlearn: 0.0930283\ttotal: 278ms\tremaining: 12.9ms\n",
            "43:\tlearn: 0.0914941\ttotal: 292ms\tremaining: 6.64ms\n",
            "44:\tlearn: 0.0898667\ttotal: 299ms\tremaining: 0us\n",
            "0:\tlearn: 0.5957872\ttotal: 5.86ms\tremaining: 258ms\n",
            "1:\tlearn: 0.5485530\ttotal: 12ms\tremaining: 259ms\n",
            "2:\tlearn: 0.4894730\ttotal: 17.8ms\tremaining: 250ms\n",
            "3:\tlearn: 0.4619587\ttotal: 23.7ms\tremaining: 243ms\n",
            "4:\tlearn: 0.4250104\ttotal: 29.6ms\tremaining: 237ms\n",
            "5:\tlearn: 0.3972845\ttotal: 35.3ms\tremaining: 230ms\n",
            "6:\tlearn: 0.3768357\ttotal: 41.4ms\tremaining: 225ms\n",
            "7:\tlearn: 0.3616455\ttotal: 48ms\tremaining: 222ms\n",
            "8:\tlearn: 0.3306166\ttotal: 54.9ms\tremaining: 220ms\n",
            "9:\tlearn: 0.3189160\ttotal: 61.2ms\tremaining: 214ms\n",
            "10:\tlearn: 0.3002331\ttotal: 67.1ms\tremaining: 208ms\n",
            "11:\tlearn: 0.2892988\ttotal: 73.3ms\tremaining: 202ms\n",
            "12:\tlearn: 0.2768069\ttotal: 79.1ms\tremaining: 195ms\n",
            "13:\tlearn: 0.2495879\ttotal: 85ms\tremaining: 188ms\n",
            "14:\tlearn: 0.2364244\ttotal: 91ms\tremaining: 182ms\n",
            "15:\tlearn: 0.2237904\ttotal: 96.9ms\tremaining: 176ms\n",
            "16:\tlearn: 0.2127769\ttotal: 103ms\tremaining: 170ms\n",
            "17:\tlearn: 0.2037585\ttotal: 110ms\tremaining: 165ms\n",
            "18:\tlearn: 0.1955307\ttotal: 116ms\tremaining: 159ms\n",
            "19:\tlearn: 0.1872101\ttotal: 122ms\tremaining: 153ms\n",
            "20:\tlearn: 0.1764788\ttotal: 131ms\tremaining: 150ms\n",
            "21:\tlearn: 0.1684724\ttotal: 142ms\tremaining: 148ms\n",
            "22:\tlearn: 0.1643082\ttotal: 147ms\tremaining: 141ms\n",
            "23:\tlearn: 0.1581717\ttotal: 153ms\tremaining: 134ms\n",
            "24:\tlearn: 0.1519217\ttotal: 159ms\tremaining: 127ms\n",
            "25:\tlearn: 0.1452006\ttotal: 165ms\tremaining: 120ms\n",
            "26:\tlearn: 0.1391408\ttotal: 171ms\tremaining: 114ms\n",
            "27:\tlearn: 0.1340415\ttotal: 176ms\tremaining: 107ms\n",
            "28:\tlearn: 0.1290526\ttotal: 182ms\tremaining: 100ms\n",
            "29:\tlearn: 0.1254009\ttotal: 188ms\tremaining: 93.9ms\n",
            "30:\tlearn: 0.1239889\ttotal: 194ms\tremaining: 87.5ms\n",
            "31:\tlearn: 0.1205452\ttotal: 200ms\tremaining: 81.1ms\n",
            "32:\tlearn: 0.1164682\ttotal: 206ms\tremaining: 74.9ms\n",
            "33:\tlearn: 0.1131516\ttotal: 212ms\tremaining: 68.5ms\n",
            "34:\tlearn: 0.1114233\ttotal: 218ms\tremaining: 62.3ms\n",
            "35:\tlearn: 0.1080552\ttotal: 224ms\tremaining: 55.9ms\n",
            "36:\tlearn: 0.1051668\ttotal: 230ms\tremaining: 49.7ms\n",
            "37:\tlearn: 0.1025945\ttotal: 236ms\tremaining: 43.5ms\n",
            "38:\tlearn: 0.1006493\ttotal: 242ms\tremaining: 37.3ms\n",
            "39:\tlearn: 0.0984210\ttotal: 248ms\tremaining: 31.1ms\n",
            "40:\tlearn: 0.0965893\ttotal: 254ms\tremaining: 24.8ms\n",
            "41:\tlearn: 0.0943854\ttotal: 261ms\tremaining: 18.6ms\n",
            "42:\tlearn: 0.0932193\ttotal: 267ms\tremaining: 12.4ms\n",
            "43:\tlearn: 0.0914593\ttotal: 274ms\tremaining: 6.22ms\n",
            "44:\tlearn: 0.0900580\ttotal: 279ms\tremaining: 0us\n",
            "0:\tlearn: 0.5928064\ttotal: 5.75ms\tremaining: 253ms\n",
            "1:\tlearn: 0.5493659\ttotal: 12.4ms\tremaining: 267ms\n",
            "2:\tlearn: 0.4977648\ttotal: 18.7ms\tremaining: 262ms\n",
            "3:\tlearn: 0.4609729\ttotal: 24.3ms\tremaining: 249ms\n",
            "4:\tlearn: 0.4397956\ttotal: 30.1ms\tremaining: 241ms\n",
            "5:\tlearn: 0.4140147\ttotal: 35.6ms\tremaining: 231ms\n",
            "6:\tlearn: 0.4010400\ttotal: 41.2ms\tremaining: 224ms\n",
            "7:\tlearn: 0.3833538\ttotal: 47.1ms\tremaining: 218ms\n",
            "8:\tlearn: 0.3546066\ttotal: 53.3ms\tremaining: 213ms\n",
            "9:\tlearn: 0.3251997\ttotal: 59.6ms\tremaining: 209ms\n",
            "10:\tlearn: 0.3094242\ttotal: 65.4ms\tremaining: 202ms\n",
            "11:\tlearn: 0.2903209\ttotal: 71.5ms\tremaining: 197ms\n",
            "12:\tlearn: 0.2670294\ttotal: 77.5ms\tremaining: 191ms\n",
            "13:\tlearn: 0.2494043\ttotal: 83.2ms\tremaining: 184ms\n",
            "14:\tlearn: 0.2387542\ttotal: 89.1ms\tremaining: 178ms\n",
            "15:\tlearn: 0.2230913\ttotal: 95ms\tremaining: 172ms\n",
            "16:\tlearn: 0.2159984\ttotal: 101ms\tremaining: 167ms\n",
            "17:\tlearn: 0.2007763\ttotal: 107ms\tremaining: 161ms\n",
            "18:\tlearn: 0.1928412\ttotal: 113ms\tremaining: 155ms\n",
            "19:\tlearn: 0.1842458\ttotal: 119ms\tremaining: 149ms\n",
            "20:\tlearn: 0.1767581\ttotal: 125ms\tremaining: 143ms\n",
            "21:\tlearn: 0.1658919\ttotal: 131ms\tremaining: 137ms\n",
            "22:\tlearn: 0.1592814\ttotal: 137ms\tremaining: 131ms\n",
            "23:\tlearn: 0.1546160\ttotal: 143ms\tremaining: 125ms\n",
            "24:\tlearn: 0.1452615\ttotal: 150ms\tremaining: 120ms\n",
            "25:\tlearn: 0.1412108\ttotal: 156ms\tremaining: 114ms\n",
            "26:\tlearn: 0.1369380\ttotal: 164ms\tremaining: 109ms\n",
            "27:\tlearn: 0.1324180\ttotal: 170ms\tremaining: 103ms\n",
            "28:\tlearn: 0.1245257\ttotal: 176ms\tremaining: 97.1ms\n",
            "29:\tlearn: 0.1202485\ttotal: 182ms\tremaining: 90.9ms\n",
            "30:\tlearn: 0.1190791\ttotal: 188ms\tremaining: 84.7ms\n",
            "31:\tlearn: 0.1132503\ttotal: 193ms\tremaining: 78.5ms\n",
            "32:\tlearn: 0.1106296\ttotal: 203ms\tremaining: 73.8ms\n",
            "33:\tlearn: 0.1084680\ttotal: 212ms\tremaining: 68.6ms\n",
            "34:\tlearn: 0.1042679\ttotal: 218ms\tremaining: 62.3ms\n",
            "35:\tlearn: 0.1021999\ttotal: 224ms\tremaining: 55.9ms\n",
            "36:\tlearn: 0.0990859\ttotal: 230ms\tremaining: 49.8ms\n",
            "37:\tlearn: 0.0978549\ttotal: 236ms\tremaining: 43.5ms\n",
            "38:\tlearn: 0.0963010\ttotal: 242ms\tremaining: 37.3ms\n",
            "39:\tlearn: 0.0946470\ttotal: 249ms\tremaining: 31.1ms\n",
            "40:\tlearn: 0.0938187\ttotal: 257ms\tremaining: 25.1ms\n",
            "41:\tlearn: 0.0919666\ttotal: 264ms\tremaining: 18.8ms\n",
            "42:\tlearn: 0.0912586\ttotal: 269ms\tremaining: 12.5ms\n",
            "43:\tlearn: 0.0893942\ttotal: 275ms\tremaining: 6.26ms\n",
            "44:\tlearn: 0.0879129\ttotal: 282ms\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "X = top_20.drop(['Target'], axis=1)\n",
        "y = top_20['Target']\n",
        "\n",
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 350, max_depth = 7),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 350, max_depth = 7),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(y, y_pred)\n",
        "  mcc = matthews_corrcoef(y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(y, y_pred)\n",
        "  f1 = f1_score(y, y_pred, average='micro')\n",
        "  precision_score = precision_score(y, y_pred, average='micro')\n",
        "  recall_score = recall_score(y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"Top20_Metics(Combined(DIP)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X,y)\n",
        "pd.DataFrame(prob).to_csv(\"Top20_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kaItkrSUoAI2"
      },
      "source": [
        "**ROC Curve**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4OrwqnbsoCtD"
      },
      "outputs": [],
      "source": [
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "for train_i, test_i in cv.split(X):\n",
        "    X_train, X_test = X.iloc[train_i], X.iloc[test_i]\n",
        "    y_train, y_test = Y.iloc[train_i], Y.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "d3VmM9QOoHYc"
      },
      "outputs": [],
      "source": [
        "rfc = RandomForestClassifier(n_estimators = 450, max_depth = 9)\n",
        "xgb = XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1)\n",
        "cat = CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77)\n",
        "lgb = LGBMClassifier(learning_rate = 0.09,max_depth = 5,random_state = 75)\n",
        "dt = DecisionTreeClassifier(max_depth = 9)\n",
        "etc = ExtraTreesClassifier(n_estimators = 400, max_depth = 9)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cl29IJQjoLPi",
        "outputId": "8b30caba-a29c-4f7f-e4e3-43956f8135c4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "0:\tlearn: 0.5213804\ttotal: 93.6ms\tremaining: 4.12s\n",
            "1:\tlearn: 0.4034981\ttotal: 131ms\tremaining: 2.82s\n",
            "2:\tlearn: 0.3098259\ttotal: 169ms\tremaining: 2.36s\n",
            "3:\tlearn: 0.2577333\ttotal: 206ms\tremaining: 2.11s\n",
            "4:\tlearn: 0.2097660\ttotal: 246ms\tremaining: 1.97s\n",
            "5:\tlearn: 0.1829294\ttotal: 279ms\tremaining: 1.81s\n",
            "6:\tlearn: 0.1641320\ttotal: 322ms\tremaining: 1.75s\n",
            "7:\tlearn: 0.1453772\ttotal: 357ms\tremaining: 1.65s\n",
            "8:\tlearn: 0.1296874\ttotal: 393ms\tremaining: 1.57s\n",
            "9:\tlearn: 0.1172534\ttotal: 428ms\tremaining: 1.5s\n",
            "10:\tlearn: 0.1078001\ttotal: 463ms\tremaining: 1.43s\n",
            "11:\tlearn: 0.0995410\ttotal: 498ms\tremaining: 1.37s\n",
            "12:\tlearn: 0.0924716\ttotal: 535ms\tremaining: 1.32s\n",
            "13:\tlearn: 0.0859159\ttotal: 569ms\tremaining: 1.26s\n",
            "14:\tlearn: 0.0750875\ttotal: 605ms\tremaining: 1.21s\n",
            "15:\tlearn: 0.0678312\ttotal: 640ms\tremaining: 1.16s\n",
            "16:\tlearn: 0.0615761\ttotal: 677ms\tremaining: 1.11s\n",
            "17:\tlearn: 0.0541275\ttotal: 714ms\tremaining: 1.07s\n",
            "18:\tlearn: 0.0491550\ttotal: 756ms\tremaining: 1.03s\n",
            "19:\tlearn: 0.0484312\ttotal: 788ms\tremaining: 985ms\n",
            "20:\tlearn: 0.0457016\ttotal: 829ms\tremaining: 948ms\n",
            "21:\tlearn: 0.0412125\ttotal: 870ms\tremaining: 909ms\n",
            "22:\tlearn: 0.0353332\ttotal: 906ms\tremaining: 867ms\n",
            "23:\tlearn: 0.0315063\ttotal: 941ms\tremaining: 823ms\n",
            "24:\tlearn: 0.0298703\ttotal: 979ms\tremaining: 783ms\n",
            "25:\tlearn: 0.0275679\ttotal: 1.01s\tremaining: 742ms\n",
            "26:\tlearn: 0.0255529\ttotal: 1.05s\tremaining: 701ms\n",
            "27:\tlearn: 0.0236381\ttotal: 1.09s\tremaining: 660ms\n",
            "28:\tlearn: 0.0218240\ttotal: 1.12s\tremaining: 619ms\n",
            "29:\tlearn: 0.0205913\ttotal: 1.16s\tremaining: 578ms\n",
            "30:\tlearn: 0.0194604\ttotal: 1.2s\tremaining: 540ms\n",
            "31:\tlearn: 0.0180647\ttotal: 1.23s\tremaining: 501ms\n",
            "32:\tlearn: 0.0173696\ttotal: 1.27s\tremaining: 461ms\n",
            "33:\tlearn: 0.0159480\ttotal: 1.3s\tremaining: 422ms\n",
            "34:\tlearn: 0.0150183\ttotal: 1.34s\tremaining: 383ms\n",
            "35:\tlearn: 0.0143944\ttotal: 1.38s\tremaining: 344ms\n",
            "36:\tlearn: 0.0139745\ttotal: 1.42s\tremaining: 306ms\n",
            "37:\tlearn: 0.0132747\ttotal: 1.46s\tremaining: 269ms\n",
            "38:\tlearn: 0.0129071\ttotal: 1.49s\tremaining: 230ms\n",
            "39:\tlearn: 0.0123574\ttotal: 1.53s\tremaining: 191ms\n",
            "40:\tlearn: 0.0113108\ttotal: 1.56s\tremaining: 153ms\n",
            "41:\tlearn: 0.0106443\ttotal: 1.6s\tremaining: 114ms\n",
            "42:\tlearn: 0.0099569\ttotal: 1.64s\tremaining: 76.2ms\n",
            "43:\tlearn: 0.0095402\ttotal: 1.67s\tremaining: 38ms\n",
            "44:\tlearn: 0.0091880\ttotal: 1.71s\tremaining: 0us\n",
            "0:\tlearn: 0.5213804\ttotal: 47.2ms\tremaining: 2.08s\n",
            "1:\tlearn: 0.4034981\ttotal: 85ms\tremaining: 1.83s\n",
            "2:\tlearn: 0.3098259\ttotal: 122ms\tremaining: 1.71s\n",
            "3:\tlearn: 0.2577333\ttotal: 161ms\tremaining: 1.65s\n",
            "4:\tlearn: 0.2097660\ttotal: 201ms\tremaining: 1.6s\n",
            "5:\tlearn: 0.1829294\ttotal: 236ms\tremaining: 1.53s\n",
            "6:\tlearn: 0.1641320\ttotal: 276ms\tremaining: 1.5s\n",
            "7:\tlearn: 0.1453772\ttotal: 312ms\tremaining: 1.44s\n",
            "8:\tlearn: 0.1296874\ttotal: 347ms\tremaining: 1.39s\n",
            "9:\tlearn: 0.1172534\ttotal: 383ms\tremaining: 1.34s\n",
            "10:\tlearn: 0.1078001\ttotal: 418ms\tremaining: 1.29s\n",
            "11:\tlearn: 0.0995410\ttotal: 453ms\tremaining: 1.25s\n",
            "12:\tlearn: 0.0924716\ttotal: 492ms\tremaining: 1.21s\n",
            "13:\tlearn: 0.0859159\ttotal: 525ms\tremaining: 1.16s\n",
            "14:\tlearn: 0.0750875\ttotal: 562ms\tremaining: 1.12s\n",
            "15:\tlearn: 0.0678312\ttotal: 597ms\tremaining: 1.08s\n",
            "16:\tlearn: 0.0615761\ttotal: 632ms\tremaining: 1.04s\n",
            "17:\tlearn: 0.0541275\ttotal: 667ms\tremaining: 1s\n",
            "18:\tlearn: 0.0491550\ttotal: 710ms\tremaining: 972ms\n",
            "19:\tlearn: 0.0484312\ttotal: 746ms\tremaining: 933ms\n",
            "20:\tlearn: 0.0457016\ttotal: 787ms\tremaining: 899ms\n",
            "21:\tlearn: 0.0412125\ttotal: 823ms\tremaining: 860ms\n",
            "22:\tlearn: 0.0353332\ttotal: 866ms\tremaining: 828ms\n",
            "23:\tlearn: 0.0315063\ttotal: 901ms\tremaining: 789ms\n",
            "24:\tlearn: 0.0298703\ttotal: 940ms\tremaining: 752ms\n",
            "25:\tlearn: 0.0275679\ttotal: 975ms\tremaining: 713ms\n",
            "26:\tlearn: 0.0255529\ttotal: 1.01s\tremaining: 673ms\n",
            "27:\tlearn: 0.0236381\ttotal: 1.04s\tremaining: 634ms\n",
            "28:\tlearn: 0.0218240\ttotal: 1.08s\tremaining: 596ms\n",
            "29:\tlearn: 0.0205913\ttotal: 1.11s\tremaining: 557ms\n",
            "30:\tlearn: 0.0194604\ttotal: 1.15s\tremaining: 521ms\n",
            "31:\tlearn: 0.0180647\ttotal: 1.19s\tremaining: 483ms\n",
            "32:\tlearn: 0.0173696\ttotal: 1.23s\tremaining: 445ms\n",
            "33:\tlearn: 0.0159480\ttotal: 1.27s\tremaining: 410ms\n",
            "34:\tlearn: 0.0150183\ttotal: 1.3s\tremaining: 373ms\n",
            "35:\tlearn: 0.0143944\ttotal: 1.34s\tremaining: 335ms\n",
            "36:\tlearn: 0.0139745\ttotal: 1.38s\tremaining: 298ms\n",
            "37:\tlearn: 0.0132747\ttotal: 1.41s\tremaining: 260ms\n",
            "38:\tlearn: 0.0129071\ttotal: 1.45s\tremaining: 222ms\n",
            "39:\tlearn: 0.0123574\ttotal: 1.48s\tremaining: 185ms\n",
            "40:\tlearn: 0.0113108\ttotal: 1.51s\tremaining: 148ms\n",
            "41:\tlearn: 0.0106443\ttotal: 1.55s\tremaining: 111ms\n",
            "42:\tlearn: 0.0099569\ttotal: 1.59s\tremaining: 73.8ms\n",
            "43:\tlearn: 0.0095402\ttotal: 1.62s\tremaining: 36.8ms\n",
            "44:\tlearn: 0.0091880\ttotal: 1.67s\tremaining: 0us\n",
            "0:\tlearn: 0.5202697\ttotal: 46.6ms\tremaining: 2.05s\n",
            "1:\tlearn: 0.4104343\ttotal: 82.3ms\tremaining: 1.77s\n",
            "2:\tlearn: 0.3300424\ttotal: 117ms\tremaining: 1.64s\n",
            "3:\tlearn: 0.2644495\ttotal: 152ms\tremaining: 1.56s\n",
            "4:\tlearn: 0.2216722\ttotal: 188ms\tremaining: 1.51s\n",
            "5:\tlearn: 0.1847102\ttotal: 226ms\tremaining: 1.47s\n",
            "6:\tlearn: 0.1567980\ttotal: 269ms\tremaining: 1.46s\n",
            "7:\tlearn: 0.1413648\ttotal: 304ms\tremaining: 1.4s\n",
            "8:\tlearn: 0.1225218\ttotal: 338ms\tremaining: 1.35s\n",
            "9:\tlearn: 0.1092179\ttotal: 372ms\tremaining: 1.3s\n",
            "10:\tlearn: 0.0960586\ttotal: 407ms\tremaining: 1.26s\n",
            "11:\tlearn: 0.0912113\ttotal: 440ms\tremaining: 1.21s\n",
            "12:\tlearn: 0.0824745\ttotal: 479ms\tremaining: 1.18s\n",
            "13:\tlearn: 0.0736310\ttotal: 513ms\tremaining: 1.14s\n",
            "14:\tlearn: 0.0687379\ttotal: 549ms\tremaining: 1.1s\n",
            "15:\tlearn: 0.0619986\ttotal: 584ms\tremaining: 1.06s\n",
            "16:\tlearn: 0.0574900\ttotal: 618ms\tremaining: 1.02s\n",
            "17:\tlearn: 0.0520830\ttotal: 652ms\tremaining: 977ms\n",
            "18:\tlearn: 0.0456098\ttotal: 690ms\tremaining: 945ms\n",
            "19:\tlearn: 0.0418919\ttotal: 724ms\tremaining: 905ms\n",
            "20:\tlearn: 0.0387632\ttotal: 758ms\tremaining: 866ms\n",
            "21:\tlearn: 0.0360389\ttotal: 794ms\tremaining: 830ms\n",
            "22:\tlearn: 0.0324799\ttotal: 834ms\tremaining: 798ms\n",
            "23:\tlearn: 0.0302173\ttotal: 868ms\tremaining: 759ms\n",
            "24:\tlearn: 0.0284271\ttotal: 912ms\tremaining: 729ms\n",
            "25:\tlearn: 0.0257648\ttotal: 960ms\tremaining: 701ms\n",
            "26:\tlearn: 0.0241887\ttotal: 993ms\tremaining: 662ms\n",
            "27:\tlearn: 0.0218175\ttotal: 1.03s\tremaining: 623ms\n",
            "28:\tlearn: 0.0210632\ttotal: 1.06s\tremaining: 585ms\n",
            "29:\tlearn: 0.0196512\ttotal: 1.09s\tremaining: 546ms\n",
            "30:\tlearn: 0.0188604\ttotal: 1.13s\tremaining: 511ms\n",
            "31:\tlearn: 0.0179519\ttotal: 1.17s\tremaining: 474ms\n",
            "32:\tlearn: 0.0169034\ttotal: 1.2s\tremaining: 436ms\n",
            "33:\tlearn: 0.0158925\ttotal: 1.23s\tremaining: 399ms\n",
            "34:\tlearn: 0.0152348\ttotal: 1.26s\tremaining: 362ms\n",
            "35:\tlearn: 0.0145216\ttotal: 1.3s\tremaining: 324ms\n",
            "36:\tlearn: 0.0133972\ttotal: 1.33s\tremaining: 288ms\n",
            "37:\tlearn: 0.0124862\ttotal: 1.37s\tremaining: 252ms\n",
            "38:\tlearn: 0.0116634\ttotal: 1.4s\tremaining: 216ms\n",
            "39:\tlearn: 0.0112115\ttotal: 1.44s\tremaining: 180ms\n",
            "40:\tlearn: 0.0103823\ttotal: 1.47s\tremaining: 144ms\n",
            "41:\tlearn: 0.0098196\ttotal: 1.51s\tremaining: 108ms\n",
            "42:\tlearn: 0.0095528\ttotal: 1.54s\tremaining: 71.8ms\n",
            "43:\tlearn: 0.0091826\ttotal: 1.58s\tremaining: 35.9ms\n",
            "44:\tlearn: 0.0087654\ttotal: 1.63s\tremaining: 0us\n",
            "0:\tlearn: 0.5256255\ttotal: 45.2ms\tremaining: 1.99s\n",
            "1:\tlearn: 0.4041451\ttotal: 82ms\tremaining: 1.76s\n",
            "2:\tlearn: 0.3184240\ttotal: 134ms\tremaining: 1.87s\n",
            "3:\tlearn: 0.2726029\ttotal: 172ms\tremaining: 1.76s\n",
            "4:\tlearn: 0.2353041\ttotal: 208ms\tremaining: 1.66s\n",
            "5:\tlearn: 0.2026376\ttotal: 243ms\tremaining: 1.58s\n",
            "6:\tlearn: 0.1857228\ttotal: 280ms\tremaining: 1.52s\n",
            "7:\tlearn: 0.1673280\ttotal: 313ms\tremaining: 1.45s\n",
            "8:\tlearn: 0.1547558\ttotal: 346ms\tremaining: 1.38s\n",
            "9:\tlearn: 0.1338291\ttotal: 379ms\tremaining: 1.32s\n",
            "10:\tlearn: 0.1243651\ttotal: 412ms\tremaining: 1.27s\n",
            "11:\tlearn: 0.1104574\ttotal: 447ms\tremaining: 1.23s\n",
            "12:\tlearn: 0.1010604\ttotal: 484ms\tremaining: 1.19s\n",
            "13:\tlearn: 0.0914150\ttotal: 520ms\tremaining: 1.15s\n",
            "14:\tlearn: 0.0831095\ttotal: 556ms\tremaining: 1.11s\n",
            "15:\tlearn: 0.0754611\ttotal: 589ms\tremaining: 1.07s\n",
            "16:\tlearn: 0.0670598\ttotal: 626ms\tremaining: 1.03s\n",
            "17:\tlearn: 0.0584777\ttotal: 661ms\tremaining: 992ms\n",
            "18:\tlearn: 0.0558194\ttotal: 698ms\tremaining: 955ms\n",
            "19:\tlearn: 0.0534376\ttotal: 732ms\tremaining: 915ms\n",
            "20:\tlearn: 0.0502154\ttotal: 765ms\tremaining: 874ms\n",
            "21:\tlearn: 0.0472179\ttotal: 798ms\tremaining: 834ms\n",
            "22:\tlearn: 0.0449208\ttotal: 832ms\tremaining: 795ms\n",
            "23:\tlearn: 0.0424095\ttotal: 865ms\tremaining: 757ms\n",
            "24:\tlearn: 0.0403515\ttotal: 909ms\tremaining: 728ms\n",
            "25:\tlearn: 0.0378019\ttotal: 962ms\tremaining: 703ms\n",
            "26:\tlearn: 0.0343778\ttotal: 998ms\tremaining: 665ms\n",
            "27:\tlearn: 0.0342475\ttotal: 1.03s\tremaining: 625ms\n",
            "28:\tlearn: 0.0324880\ttotal: 1.06s\tremaining: 587ms\n",
            "29:\tlearn: 0.0307811\ttotal: 1.1s\tremaining: 548ms\n",
            "30:\tlearn: 0.0289989\ttotal: 1.13s\tremaining: 512ms\n",
            "31:\tlearn: 0.0276041\ttotal: 1.17s\tremaining: 474ms\n",
            "32:\tlearn: 0.0262067\ttotal: 1.2s\tremaining: 437ms\n",
            "33:\tlearn: 0.0254510\ttotal: 1.23s\tremaining: 399ms\n",
            "34:\tlearn: 0.0238429\ttotal: 1.27s\tremaining: 362ms\n",
            "35:\tlearn: 0.0225337\ttotal: 1.3s\tremaining: 326ms\n",
            "36:\tlearn: 0.0210525\ttotal: 1.34s\tremaining: 290ms\n",
            "37:\tlearn: 0.0204620\ttotal: 1.37s\tremaining: 253ms\n",
            "38:\tlearn: 0.0186553\ttotal: 1.41s\tremaining: 217ms\n",
            "39:\tlearn: 0.0177597\ttotal: 1.44s\tremaining: 180ms\n",
            "40:\tlearn: 0.0161476\ttotal: 1.48s\tremaining: 144ms\n",
            "41:\tlearn: 0.0151093\ttotal: 1.51s\tremaining: 108ms\n",
            "42:\tlearn: 0.0141979\ttotal: 1.56s\tremaining: 72.8ms\n",
            "43:\tlearn: 0.0138652\ttotal: 1.59s\tremaining: 36.3ms\n",
            "44:\tlearn: 0.0131488\ttotal: 1.63s\tremaining: 0us\n",
            "0:\tlearn: 0.5290332\ttotal: 45.3ms\tremaining: 1.99s\n",
            "1:\tlearn: 0.4263470\ttotal: 94.6ms\tremaining: 2.03s\n",
            "2:\tlearn: 0.3572388\ttotal: 133ms\tremaining: 1.86s\n",
            "3:\tlearn: 0.2796517\ttotal: 170ms\tremaining: 1.74s\n",
            "4:\tlearn: 0.2233666\ttotal: 206ms\tremaining: 1.65s\n",
            "5:\tlearn: 0.1893316\ttotal: 241ms\tremaining: 1.57s\n",
            "6:\tlearn: 0.1680425\ttotal: 278ms\tremaining: 1.51s\n",
            "7:\tlearn: 0.1492037\ttotal: 314ms\tremaining: 1.45s\n",
            "8:\tlearn: 0.1338960\ttotal: 358ms\tremaining: 1.43s\n",
            "9:\tlearn: 0.1225351\ttotal: 392ms\tremaining: 1.37s\n",
            "10:\tlearn: 0.1125258\ttotal: 425ms\tremaining: 1.31s\n",
            "11:\tlearn: 0.1050623\ttotal: 458ms\tremaining: 1.26s\n",
            "12:\tlearn: 0.0967200\ttotal: 495ms\tremaining: 1.22s\n",
            "13:\tlearn: 0.0862189\ttotal: 529ms\tremaining: 1.17s\n",
            "14:\tlearn: 0.0742742\ttotal: 563ms\tremaining: 1.13s\n",
            "15:\tlearn: 0.0665756\ttotal: 598ms\tremaining: 1.08s\n",
            "16:\tlearn: 0.0606515\ttotal: 644ms\tremaining: 1.06s\n",
            "17:\tlearn: 0.0546582\ttotal: 677ms\tremaining: 1.01s\n",
            "18:\tlearn: 0.0493681\ttotal: 713ms\tremaining: 976ms\n",
            "19:\tlearn: 0.0442116\ttotal: 749ms\tremaining: 937ms\n",
            "20:\tlearn: 0.0423827\ttotal: 782ms\tremaining: 894ms\n",
            "21:\tlearn: 0.0386100\ttotal: 816ms\tremaining: 853ms\n",
            "22:\tlearn: 0.0358895\ttotal: 851ms\tremaining: 814ms\n",
            "23:\tlearn: 0.0325857\ttotal: 885ms\tremaining: 775ms\n",
            "24:\tlearn: 0.0297645\ttotal: 924ms\tremaining: 739ms\n",
            "25:\tlearn: 0.0274483\ttotal: 959ms\tremaining: 701ms\n",
            "26:\tlearn: 0.0258589\ttotal: 998ms\tremaining: 666ms\n",
            "27:\tlearn: 0.0247883\ttotal: 1.03s\tremaining: 628ms\n",
            "28:\tlearn: 0.0235035\ttotal: 1.07s\tremaining: 591ms\n",
            "29:\tlearn: 0.0224496\ttotal: 1.11s\tremaining: 556ms\n",
            "30:\tlearn: 0.0207513\ttotal: 1.15s\tremaining: 519ms\n",
            "31:\tlearn: 0.0196516\ttotal: 1.18s\tremaining: 481ms\n",
            "32:\tlearn: 0.0186640\ttotal: 1.22s\tremaining: 444ms\n",
            "33:\tlearn: 0.0167187\ttotal: 1.26s\tremaining: 406ms\n",
            "34:\tlearn: 0.0156164\ttotal: 1.29s\tremaining: 369ms\n",
            "35:\tlearn: 0.0143512\ttotal: 1.33s\tremaining: 333ms\n",
            "36:\tlearn: 0.0135548\ttotal: 1.37s\tremaining: 296ms\n",
            "37:\tlearn: 0.0125148\ttotal: 1.41s\tremaining: 259ms\n",
            "38:\tlearn: 0.0117591\ttotal: 1.44s\tremaining: 221ms\n",
            "39:\tlearn: 0.0112060\ttotal: 1.47s\tremaining: 184ms\n",
            "40:\tlearn: 0.0105070\ttotal: 1.5s\tremaining: 147ms\n",
            "41:\tlearn: 0.0100546\ttotal: 1.54s\tremaining: 110ms\n",
            "42:\tlearn: 0.0091153\ttotal: 1.58s\tremaining: 73.6ms\n",
            "43:\tlearn: 0.0086200\ttotal: 1.61s\tremaining: 36.7ms\n",
            "44:\tlearn: 0.0081517\ttotal: 1.65s\tremaining: 0us\n",
            "0:\tlearn: 0.5292388\ttotal: 48ms\tremaining: 2.11s\n",
            "1:\tlearn: 0.4239472\ttotal: 90ms\tremaining: 1.94s\n",
            "2:\tlearn: 0.3511912\ttotal: 125ms\tremaining: 1.75s\n",
            "3:\tlearn: 0.2787354\ttotal: 160ms\tremaining: 1.64s\n",
            "4:\tlearn: 0.2375104\ttotal: 208ms\tremaining: 1.66s\n",
            "5:\tlearn: 0.2013737\ttotal: 243ms\tremaining: 1.58s\n",
            "6:\tlearn: 0.1783174\ttotal: 281ms\tremaining: 1.52s\n",
            "7:\tlearn: 0.1575180\ttotal: 324ms\tremaining: 1.5s\n",
            "8:\tlearn: 0.1466905\ttotal: 357ms\tremaining: 1.43s\n",
            "9:\tlearn: 0.1281646\ttotal: 391ms\tremaining: 1.37s\n",
            "10:\tlearn: 0.1163499\ttotal: 424ms\tremaining: 1.31s\n",
            "11:\tlearn: 0.1052467\ttotal: 461ms\tremaining: 1.27s\n",
            "12:\tlearn: 0.0968474\ttotal: 500ms\tremaining: 1.23s\n",
            "13:\tlearn: 0.0905864\ttotal: 535ms\tremaining: 1.18s\n",
            "14:\tlearn: 0.0830151\ttotal: 567ms\tremaining: 1.13s\n",
            "15:\tlearn: 0.0751332\ttotal: 600ms\tremaining: 1.09s\n",
            "16:\tlearn: 0.0669524\ttotal: 635ms\tremaining: 1.04s\n",
            "17:\tlearn: 0.0615914\ttotal: 670ms\tremaining: 1s\n",
            "18:\tlearn: 0.0545630\ttotal: 711ms\tremaining: 973ms\n",
            "19:\tlearn: 0.0520876\ttotal: 744ms\tremaining: 930ms\n",
            "20:\tlearn: 0.0482563\ttotal: 778ms\tremaining: 889ms\n",
            "21:\tlearn: 0.0478094\ttotal: 812ms\tremaining: 849ms\n",
            "22:\tlearn: 0.0448925\ttotal: 846ms\tremaining: 810ms\n",
            "23:\tlearn: 0.0398078\ttotal: 882ms\tremaining: 772ms\n",
            "24:\tlearn: 0.0362222\ttotal: 919ms\tremaining: 735ms\n",
            "25:\tlearn: 0.0321599\ttotal: 954ms\tremaining: 697ms\n",
            "26:\tlearn: 0.0302986\ttotal: 988ms\tremaining: 659ms\n",
            "27:\tlearn: 0.0279348\ttotal: 1.02s\tremaining: 621ms\n",
            "28:\tlearn: 0.0263362\ttotal: 1.06s\tremaining: 583ms\n",
            "29:\tlearn: 0.0245513\ttotal: 1.1s\tremaining: 549ms\n",
            "30:\tlearn: 0.0238469\ttotal: 1.15s\tremaining: 519ms\n",
            "31:\tlearn: 0.0223759\ttotal: 1.19s\tremaining: 482ms\n",
            "32:\tlearn: 0.0209339\ttotal: 1.23s\tremaining: 446ms\n",
            "33:\tlearn: 0.0198688\ttotal: 1.26s\tremaining: 408ms\n",
            "34:\tlearn: 0.0188911\ttotal: 1.29s\tremaining: 369ms\n",
            "35:\tlearn: 0.0176854\ttotal: 1.33s\tremaining: 332ms\n",
            "36:\tlearn: 0.0165129\ttotal: 1.36s\tremaining: 295ms\n",
            "37:\tlearn: 0.0156755\ttotal: 1.4s\tremaining: 258ms\n",
            "38:\tlearn: 0.0156157\ttotal: 1.43s\tremaining: 220ms\n",
            "39:\tlearn: 0.0148344\ttotal: 1.47s\tremaining: 183ms\n",
            "40:\tlearn: 0.0139868\ttotal: 1.5s\tremaining: 146ms\n",
            "41:\tlearn: 0.0139395\ttotal: 1.53s\tremaining: 109ms\n",
            "42:\tlearn: 0.0132348\ttotal: 1.57s\tremaining: 73.2ms\n",
            "43:\tlearn: 0.0125677\ttotal: 1.61s\tremaining: 36.6ms\n",
            "44:\tlearn: 0.0115542\ttotal: 1.65s\tremaining: 0us\n",
            "0:\tlearn: 0.5063029\ttotal: 82.3ms\tremaining: 3.62s\n",
            "1:\tlearn: 0.4007540\ttotal: 138ms\tremaining: 2.96s\n",
            "2:\tlearn: 0.3194982\ttotal: 207ms\tremaining: 2.9s\n",
            "3:\tlearn: 0.2694322\ttotal: 288ms\tremaining: 2.95s\n",
            "4:\tlearn: 0.2284715\ttotal: 358ms\tremaining: 2.86s\n",
            "5:\tlearn: 0.1996922\ttotal: 424ms\tremaining: 2.76s\n",
            "6:\tlearn: 0.1695306\ttotal: 498ms\tremaining: 2.7s\n",
            "7:\tlearn: 0.1465390\ttotal: 571ms\tremaining: 2.64s\n",
            "8:\tlearn: 0.1369655\ttotal: 642ms\tremaining: 2.57s\n",
            "9:\tlearn: 0.1199460\ttotal: 717ms\tremaining: 2.51s\n",
            "10:\tlearn: 0.1090896\ttotal: 782ms\tremaining: 2.42s\n",
            "11:\tlearn: 0.0885664\ttotal: 845ms\tremaining: 2.32s\n",
            "12:\tlearn: 0.0822524\ttotal: 914ms\tremaining: 2.25s\n",
            "13:\tlearn: 0.0750876\ttotal: 990ms\tremaining: 2.19s\n",
            "14:\tlearn: 0.0683469\ttotal: 1.06s\tremaining: 2.12s\n",
            "15:\tlearn: 0.0615078\ttotal: 1.13s\tremaining: 2.05s\n",
            "16:\tlearn: 0.0582006\ttotal: 1.2s\tremaining: 1.98s\n",
            "17:\tlearn: 0.0574016\ttotal: 1.27s\tremaining: 1.9s\n",
            "18:\tlearn: 0.0537106\ttotal: 1.34s\tremaining: 1.84s\n",
            "19:\tlearn: 0.0509093\ttotal: 1.41s\tremaining: 1.77s\n",
            "20:\tlearn: 0.0469575\ttotal: 1.48s\tremaining: 1.69s\n",
            "21:\tlearn: 0.0434598\ttotal: 1.55s\tremaining: 1.62s\n",
            "22:\tlearn: 0.0406429\ttotal: 1.63s\tremaining: 1.56s\n",
            "23:\tlearn: 0.0367393\ttotal: 1.7s\tremaining: 1.49s\n",
            "24:\tlearn: 0.0349057\ttotal: 1.77s\tremaining: 1.42s\n",
            "25:\tlearn: 0.0332616\ttotal: 1.84s\tremaining: 1.35s\n",
            "26:\tlearn: 0.0302712\ttotal: 1.91s\tremaining: 1.27s\n",
            "27:\tlearn: 0.0281562\ttotal: 1.98s\tremaining: 1.2s\n",
            "28:\tlearn: 0.0257263\ttotal: 2.06s\tremaining: 1.13s\n",
            "29:\tlearn: 0.0236700\ttotal: 2.12s\tremaining: 1.06s\n",
            "30:\tlearn: 0.0226150\ttotal: 2.19s\tremaining: 990ms\n",
            "31:\tlearn: 0.0212593\ttotal: 2.26s\tremaining: 919ms\n",
            "32:\tlearn: 0.0201635\ttotal: 2.33s\tremaining: 848ms\n",
            "33:\tlearn: 0.0193477\ttotal: 2.4s\tremaining: 776ms\n",
            "34:\tlearn: 0.0184389\ttotal: 2.48s\tremaining: 708ms\n",
            "35:\tlearn: 0.0174219\ttotal: 2.55s\tremaining: 638ms\n",
            "36:\tlearn: 0.0167745\ttotal: 2.62s\tremaining: 566ms\n",
            "37:\tlearn: 0.0153975\ttotal: 2.69s\tremaining: 495ms\n",
            "38:\tlearn: 0.0147466\ttotal: 2.76s\tremaining: 425ms\n",
            "39:\tlearn: 0.0140923\ttotal: 2.83s\tremaining: 354ms\n",
            "40:\tlearn: 0.0135310\ttotal: 2.9s\tremaining: 283ms\n",
            "41:\tlearn: 0.0126941\ttotal: 2.95s\tremaining: 211ms\n",
            "42:\tlearn: 0.0121899\ttotal: 3.01s\tremaining: 140ms\n",
            "43:\tlearn: 0.0116651\ttotal: 3.08s\tremaining: 70.1ms\n",
            "44:\tlearn: 0.0115752\ttotal: 3.14s\tremaining: 0us\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "StackingClassifier(estimators=[('RF',\n",
              "                                RandomForestClassifier(max_depth=9,\n",
              "                                                       n_estimators=450)),\n",
              "                               ('XGB',\n",
              "                                XGBClassifier(base_score=0.1,\n",
              "                                              eval_metric='mlogloss',\n",
              "                                              max_depth=5, n_estimators=250,\n",
              "                                              use_label_encoder=False)),\n",
              "                               ('Cat',\n",
              "                                <catboost.core.CatBoostClassifier object at 0x7f2b28d11280>),\n",
              "                               ('LGBM',\n",
              "                                LGBMClassifier(learning_rate=0.09, max_depth=5,\n",
              "                                               random_state=75)),\n",
              "                               ('DT', DecisionTreeClassifier(max_depth=9)),\n",
              "                               ('ETC',\n",
              "                                ExtraTreesClassifier(max_depth=9,\n",
              "                                                     n_estimators=450))],\n",
              "                   final_estimator=ExtraTreesClassifier(max_depth=9,\n",
              "                                                        n_estimators=450))"
            ]
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "rfc.fit(X_train, y_train)\n",
        "xgb.fit(X_train, y_train)\n",
        "cat.fit(X_train, y_train)\n",
        "lgb.fit(X_train, y_train)\n",
        "dt.fit(X_train, y_train)\n",
        "etc.fit(X_train, y_train)\n",
        "Stacking.fit(X_train, y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5pP06UWwoOn1"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import auc, roc_curve"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 155
        },
        "id": "IRD6cfHAoTOO",
        "outputId": "ef8e2b1d-0671-405e-b693-9767a23c30b2"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 216x144 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure(figsize=(3,2))\n",
        "plt.rcParams.update({'font.family':'serif'})\n",
        "\n",
        "plt.title('K', weight='bold',  fontsize=15, y = 0.87, x=-0.23)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "pred = dt.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"STACKPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=6)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=6)\n",
        "plt.legend(loc = 'lower right', fontsize=6)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.savefig('ROC(K).png', dpi=800)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dDPgcu0DiW-Q"
      },
      "source": [
        "# **Martine Data**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ccVFylomiZ8H"
      },
      "outputs": [],
      "source": [
        "columns = df2.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X = df2[columns]\n",
        "Y = df2[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2Vigl4qYib_n"
      },
      "outputs": [],
      "source": [
        "total = []\n",
        "total = pd.DataFrame(total)\n",
        "total = df2.drop(['Target'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "plXUzVl7idxP",
        "outputId": "4f168cd9-f679-4373-bba1-2b4e146d53ef"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=7, n_estimato...  0.994166  0.988351   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.996568  0.993136   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.996225  0.992452   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.995882  0.991763   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.986960  0.973921   \n",
            "5  ExtraTreesClassifier(max_depth=7, n_estimators...  0.992107  0.984267   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.997255  0.994510   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.988332   0.994166  0.994166  0.994166  \n",
            "1  0.993136   0.996568  0.996568  0.996568  \n",
            "2  0.992450   0.996225  0.996225  0.996225  \n",
            "3  0.991763   0.995882  0.995882  0.995882  \n",
            "4  0.973917   0.986960  0.986960  0.986960  \n",
            "5  0.984214   0.992107  0.992107  0.992107  \n",
            "6  0.994509   0.997255  0.997255  0.997255  \n",
            "0:\tlearn: 0.4186076\ttotal: 83.5ms\tremaining: 3.67s\n",
            "1:\tlearn: 0.3117468\ttotal: 110ms\tremaining: 2.37s\n",
            "2:\tlearn: 0.2382466\ttotal: 139ms\tremaining: 1.94s\n",
            "3:\tlearn: 0.1706303\ttotal: 165ms\tremaining: 1.69s\n",
            "4:\tlearn: 0.1257588\ttotal: 190ms\tremaining: 1.52s\n",
            "5:\tlearn: 0.0973057\ttotal: 215ms\tremaining: 1.4s\n",
            "6:\tlearn: 0.0761894\ttotal: 240ms\tremaining: 1.3s\n",
            "7:\tlearn: 0.0654914\ttotal: 265ms\tremaining: 1.22s\n",
            "8:\tlearn: 0.0569359\ttotal: 295ms\tremaining: 1.18s\n",
            "9:\tlearn: 0.0508109\ttotal: 320ms\tremaining: 1.12s\n",
            "10:\tlearn: 0.0437310\ttotal: 346ms\tremaining: 1.07s\n",
            "11:\tlearn: 0.0369837\ttotal: 372ms\tremaining: 1.02s\n",
            "12:\tlearn: 0.0331283\ttotal: 398ms\tremaining: 981ms\n",
            "13:\tlearn: 0.0302370\ttotal: 423ms\tremaining: 938ms\n",
            "14:\tlearn: 0.0264017\ttotal: 452ms\tremaining: 903ms\n",
            "15:\tlearn: 0.0226143\ttotal: 478ms\tremaining: 866ms\n",
            "16:\tlearn: 0.0191563\ttotal: 507ms\tremaining: 836ms\n",
            "17:\tlearn: 0.0170046\ttotal: 534ms\tremaining: 801ms\n",
            "18:\tlearn: 0.0160241\ttotal: 559ms\tremaining: 765ms\n",
            "19:\tlearn: 0.0129222\ttotal: 585ms\tremaining: 731ms\n",
            "20:\tlearn: 0.0120389\ttotal: 611ms\tremaining: 698ms\n",
            "21:\tlearn: 0.0108379\ttotal: 636ms\tremaining: 665ms\n",
            "22:\tlearn: 0.0083426\ttotal: 663ms\tremaining: 634ms\n",
            "23:\tlearn: 0.0071162\ttotal: 688ms\tremaining: 602ms\n",
            "24:\tlearn: 0.0067642\ttotal: 717ms\tremaining: 574ms\n",
            "25:\tlearn: 0.0058439\ttotal: 745ms\tremaining: 544ms\n",
            "26:\tlearn: 0.0053642\ttotal: 778ms\tremaining: 518ms\n",
            "27:\tlearn: 0.0051334\ttotal: 802ms\tremaining: 487ms\n",
            "28:\tlearn: 0.0045658\ttotal: 827ms\tremaining: 456ms\n",
            "29:\tlearn: 0.0043612\ttotal: 852ms\tremaining: 426ms\n",
            "30:\tlearn: 0.0039270\ttotal: 877ms\tremaining: 396ms\n",
            "31:\tlearn: 0.0037777\ttotal: 903ms\tremaining: 367ms\n",
            "32:\tlearn: 0.0035765\ttotal: 932ms\tremaining: 339ms\n",
            "33:\tlearn: 0.0031724\ttotal: 972ms\tremaining: 314ms\n",
            "34:\tlearn: 0.0029146\ttotal: 997ms\tremaining: 285ms\n",
            "35:\tlearn: 0.0027420\ttotal: 1.02s\tremaining: 255ms\n",
            "36:\tlearn: 0.0025903\ttotal: 1.05s\tremaining: 226ms\n",
            "37:\tlearn: 0.0023916\ttotal: 1.07s\tremaining: 197ms\n",
            "38:\tlearn: 0.0023008\ttotal: 1.09s\tremaining: 168ms\n",
            "39:\tlearn: 0.0020758\ttotal: 1.12s\tremaining: 140ms\n",
            "40:\tlearn: 0.0020758\ttotal: 1.15s\tremaining: 112ms\n",
            "41:\tlearn: 0.0020757\ttotal: 1.18s\tremaining: 84ms\n",
            "42:\tlearn: 0.0020756\ttotal: 1.2s\tremaining: 55.9ms\n",
            "43:\tlearn: 0.0018835\ttotal: 1.23s\tremaining: 28ms\n",
            "44:\tlearn: 0.0018835\ttotal: 1.26s\tremaining: 0us\n",
            "0:\tlearn: 0.4255864\ttotal: 36.8ms\tremaining: 1.62s\n",
            "1:\tlearn: 0.2972571\ttotal: 64ms\tremaining: 1.38s\n",
            "2:\tlearn: 0.2139324\ttotal: 89.7ms\tremaining: 1.25s\n",
            "3:\tlearn: 0.1568814\ttotal: 115ms\tremaining: 1.18s\n",
            "4:\tlearn: 0.1330194\ttotal: 141ms\tremaining: 1.13s\n",
            "5:\tlearn: 0.1117835\ttotal: 165ms\tremaining: 1.07s\n",
            "6:\tlearn: 0.0917885\ttotal: 190ms\tremaining: 1.03s\n",
            "7:\tlearn: 0.0748029\ttotal: 219ms\tremaining: 1.01s\n",
            "8:\tlearn: 0.0676524\ttotal: 249ms\tremaining: 996ms\n",
            "9:\tlearn: 0.0608852\ttotal: 273ms\tremaining: 956ms\n",
            "10:\tlearn: 0.0502955\ttotal: 298ms\tremaining: 922ms\n",
            "11:\tlearn: 0.0417227\ttotal: 324ms\tremaining: 890ms\n",
            "12:\tlearn: 0.0354742\ttotal: 348ms\tremaining: 858ms\n",
            "13:\tlearn: 0.0272268\ttotal: 374ms\tremaining: 827ms\n",
            "14:\tlearn: 0.0267420\ttotal: 398ms\tremaining: 795ms\n",
            "15:\tlearn: 0.0232571\ttotal: 422ms\tremaining: 765ms\n",
            "16:\tlearn: 0.0208308\ttotal: 447ms\tremaining: 737ms\n",
            "17:\tlearn: 0.0194020\ttotal: 477ms\tremaining: 715ms\n",
            "18:\tlearn: 0.0175252\ttotal: 502ms\tremaining: 687ms\n",
            "19:\tlearn: 0.0170885\ttotal: 528ms\tremaining: 660ms\n",
            "20:\tlearn: 0.0154156\ttotal: 554ms\tremaining: 633ms\n",
            "21:\tlearn: 0.0125631\ttotal: 580ms\tremaining: 606ms\n",
            "22:\tlearn: 0.0114131\ttotal: 605ms\tremaining: 579ms\n",
            "23:\tlearn: 0.0106180\ttotal: 630ms\tremaining: 551ms\n",
            "24:\tlearn: 0.0092057\ttotal: 674ms\tremaining: 539ms\n",
            "25:\tlearn: 0.0087543\ttotal: 699ms\tremaining: 511ms\n",
            "26:\tlearn: 0.0075844\ttotal: 725ms\tremaining: 484ms\n",
            "27:\tlearn: 0.0075365\ttotal: 752ms\tremaining: 457ms\n",
            "28:\tlearn: 0.0065595\ttotal: 780ms\tremaining: 430ms\n",
            "29:\tlearn: 0.0056229\ttotal: 806ms\tremaining: 403ms\n",
            "30:\tlearn: 0.0056222\ttotal: 830ms\tremaining: 375ms\n",
            "31:\tlearn: 0.0047562\ttotal: 863ms\tremaining: 351ms\n",
            "32:\tlearn: 0.0045547\ttotal: 892ms\tremaining: 324ms\n",
            "33:\tlearn: 0.0043380\ttotal: 916ms\tremaining: 296ms\n",
            "34:\tlearn: 0.0041613\ttotal: 940ms\tremaining: 269ms\n",
            "35:\tlearn: 0.0037596\ttotal: 965ms\tremaining: 241ms\n",
            "36:\tlearn: 0.0035107\ttotal: 989ms\tremaining: 214ms\n",
            "37:\tlearn: 0.0033804\ttotal: 1.01s\tremaining: 187ms\n",
            "38:\tlearn: 0.0029931\ttotal: 1.04s\tremaining: 160ms\n",
            "39:\tlearn: 0.0028664\ttotal: 1.07s\tremaining: 133ms\n",
            "40:\tlearn: 0.0027320\ttotal: 1.09s\tremaining: 107ms\n",
            "41:\tlearn: 0.0025737\ttotal: 1.12s\tremaining: 79.9ms\n",
            "42:\tlearn: 0.0025736\ttotal: 1.14s\tremaining: 53.1ms\n",
            "43:\tlearn: 0.0024295\ttotal: 1.17s\tremaining: 26.5ms\n",
            "44:\tlearn: 0.0022457\ttotal: 1.19s\tremaining: 0us\n",
            "0:\tlearn: 0.4540836\ttotal: 32.9ms\tremaining: 1.45s\n",
            "1:\tlearn: 0.2738477\ttotal: 57.6ms\tremaining: 1.24s\n",
            "2:\tlearn: 0.1847307\ttotal: 82.1ms\tremaining: 1.15s\n",
            "3:\tlearn: 0.1350109\ttotal: 106ms\tremaining: 1.08s\n",
            "4:\tlearn: 0.1043384\ttotal: 130ms\tremaining: 1.04s\n",
            "5:\tlearn: 0.0859929\ttotal: 154ms\tremaining: 1s\n",
            "6:\tlearn: 0.0737314\ttotal: 179ms\tremaining: 972ms\n",
            "7:\tlearn: 0.0687662\ttotal: 203ms\tremaining: 937ms\n",
            "8:\tlearn: 0.0542465\ttotal: 227ms\tremaining: 909ms\n",
            "9:\tlearn: 0.0483145\ttotal: 257ms\tremaining: 898ms\n",
            "10:\tlearn: 0.0405133\ttotal: 281ms\tremaining: 868ms\n",
            "11:\tlearn: 0.0347981\ttotal: 305ms\tremaining: 840ms\n",
            "12:\tlearn: 0.0334893\ttotal: 329ms\tremaining: 811ms\n",
            "13:\tlearn: 0.0290279\ttotal: 367ms\tremaining: 814ms\n",
            "14:\tlearn: 0.0253305\ttotal: 392ms\tremaining: 784ms\n",
            "15:\tlearn: 0.0227776\ttotal: 417ms\tremaining: 756ms\n",
            "16:\tlearn: 0.0204437\ttotal: 442ms\tremaining: 728ms\n",
            "17:\tlearn: 0.0176403\ttotal: 472ms\tremaining: 708ms\n",
            "18:\tlearn: 0.0172195\ttotal: 497ms\tremaining: 680ms\n",
            "19:\tlearn: 0.0140618\ttotal: 530ms\tremaining: 662ms\n",
            "20:\tlearn: 0.0120057\ttotal: 555ms\tremaining: 635ms\n",
            "21:\tlearn: 0.0117745\ttotal: 580ms\tremaining: 607ms\n",
            "22:\tlearn: 0.0103705\ttotal: 605ms\tremaining: 579ms\n",
            "23:\tlearn: 0.0096277\ttotal: 633ms\tremaining: 554ms\n",
            "24:\tlearn: 0.0082632\ttotal: 660ms\tremaining: 528ms\n",
            "25:\tlearn: 0.0073519\ttotal: 691ms\tremaining: 505ms\n",
            "26:\tlearn: 0.0062563\ttotal: 720ms\tremaining: 480ms\n",
            "27:\tlearn: 0.0061665\ttotal: 745ms\tremaining: 453ms\n",
            "28:\tlearn: 0.0061657\ttotal: 769ms\tremaining: 424ms\n",
            "29:\tlearn: 0.0061295\ttotal: 794ms\tremaining: 397ms\n",
            "30:\tlearn: 0.0053698\ttotal: 819ms\tremaining: 370ms\n",
            "31:\tlearn: 0.0051057\ttotal: 844ms\tremaining: 343ms\n",
            "32:\tlearn: 0.0046363\ttotal: 872ms\tremaining: 317ms\n",
            "33:\tlearn: 0.0041625\ttotal: 902ms\tremaining: 292ms\n",
            "34:\tlearn: 0.0036331\ttotal: 927ms\tremaining: 265ms\n",
            "35:\tlearn: 0.0036331\ttotal: 952ms\tremaining: 238ms\n",
            "36:\tlearn: 0.0032030\ttotal: 978ms\tremaining: 211ms\n",
            "37:\tlearn: 0.0029293\ttotal: 1s\tremaining: 185ms\n",
            "38:\tlearn: 0.0027525\ttotal: 1.03s\tremaining: 158ms\n",
            "39:\tlearn: 0.0026636\ttotal: 1.05s\tremaining: 132ms\n",
            "40:\tlearn: 0.0025619\ttotal: 1.08s\tremaining: 105ms\n",
            "41:\tlearn: 0.0023762\ttotal: 1.1s\tremaining: 78.7ms\n",
            "42:\tlearn: 0.0021339\ttotal: 1.13s\tremaining: 52.4ms\n",
            "43:\tlearn: 0.0021339\ttotal: 1.15s\tremaining: 26.2ms\n",
            "44:\tlearn: 0.0021337\ttotal: 1.19s\tremaining: 0us\n",
            "0:\tlearn: 0.3791835\ttotal: 39.1ms\tremaining: 1.72s\n",
            "1:\tlearn: 0.2566071\ttotal: 78.2ms\tremaining: 1.68s\n",
            "2:\tlearn: 0.1887474\ttotal: 104ms\tremaining: 1.45s\n",
            "3:\tlearn: 0.1559069\ttotal: 129ms\tremaining: 1.33s\n",
            "4:\tlearn: 0.1152279\ttotal: 155ms\tremaining: 1.24s\n",
            "5:\tlearn: 0.0857454\ttotal: 179ms\tremaining: 1.16s\n",
            "6:\tlearn: 0.0713643\ttotal: 205ms\tremaining: 1.11s\n",
            "7:\tlearn: 0.0656172\ttotal: 229ms\tremaining: 1.06s\n",
            "8:\tlearn: 0.0598856\ttotal: 260ms\tremaining: 1.04s\n",
            "9:\tlearn: 0.0557534\ttotal: 284ms\tremaining: 994ms\n",
            "10:\tlearn: 0.0447953\ttotal: 309ms\tremaining: 955ms\n",
            "11:\tlearn: 0.0436993\ttotal: 341ms\tremaining: 938ms\n",
            "12:\tlearn: 0.0361765\ttotal: 365ms\tremaining: 898ms\n",
            "13:\tlearn: 0.0297276\ttotal: 390ms\tremaining: 863ms\n",
            "14:\tlearn: 0.0229044\ttotal: 419ms\tremaining: 837ms\n",
            "15:\tlearn: 0.0199039\ttotal: 443ms\tremaining: 803ms\n",
            "16:\tlearn: 0.0194691\ttotal: 471ms\tremaining: 776ms\n",
            "17:\tlearn: 0.0168272\ttotal: 495ms\tremaining: 743ms\n",
            "18:\tlearn: 0.0141440\ttotal: 519ms\tremaining: 711ms\n",
            "19:\tlearn: 0.0125191\ttotal: 543ms\tremaining: 679ms\n",
            "20:\tlearn: 0.0111982\ttotal: 570ms\tremaining: 651ms\n",
            "21:\tlearn: 0.0097803\ttotal: 594ms\tremaining: 621ms\n",
            "22:\tlearn: 0.0095229\ttotal: 618ms\tremaining: 591ms\n",
            "23:\tlearn: 0.0074662\ttotal: 643ms\tremaining: 562ms\n",
            "24:\tlearn: 0.0070344\ttotal: 667ms\tremaining: 534ms\n",
            "25:\tlearn: 0.0063321\ttotal: 697ms\tremaining: 509ms\n",
            "26:\tlearn: 0.0054352\ttotal: 720ms\tremaining: 480ms\n",
            "27:\tlearn: 0.0053767\ttotal: 744ms\tremaining: 451ms\n",
            "28:\tlearn: 0.0051281\ttotal: 768ms\tremaining: 423ms\n",
            "29:\tlearn: 0.0045724\ttotal: 792ms\tremaining: 396ms\n",
            "30:\tlearn: 0.0042284\ttotal: 815ms\tremaining: 368ms\n",
            "31:\tlearn: 0.0040261\ttotal: 839ms\tremaining: 341ms\n",
            "32:\tlearn: 0.0038234\ttotal: 869ms\tremaining: 316ms\n",
            "33:\tlearn: 0.0035046\ttotal: 893ms\tremaining: 289ms\n",
            "34:\tlearn: 0.0032832\ttotal: 918ms\tremaining: 262ms\n",
            "35:\tlearn: 0.0032832\ttotal: 941ms\tremaining: 235ms\n",
            "36:\tlearn: 0.0032641\ttotal: 965ms\tremaining: 209ms\n",
            "37:\tlearn: 0.0032639\ttotal: 989ms\tremaining: 182ms\n",
            "38:\tlearn: 0.0031925\ttotal: 1.01s\tremaining: 156ms\n",
            "39:\tlearn: 0.0031924\ttotal: 1.03s\tremaining: 129ms\n",
            "40:\tlearn: 0.0031924\ttotal: 1.06s\tremaining: 104ms\n",
            "41:\tlearn: 0.0031924\ttotal: 1.1s\tremaining: 78.8ms\n",
            "42:\tlearn: 0.0031924\ttotal: 1.13s\tremaining: 52.5ms\n",
            "43:\tlearn: 0.0031924\ttotal: 1.15s\tremaining: 26.2ms\n",
            "44:\tlearn: 0.0031922\ttotal: 1.18s\tremaining: 0us\n",
            "0:\tlearn: 0.3873428\ttotal: 38.8ms\tremaining: 1.71s\n",
            "1:\tlearn: 0.2775412\ttotal: 65.4ms\tremaining: 1.41s\n",
            "2:\tlearn: 0.1941813\ttotal: 91.3ms\tremaining: 1.28s\n",
            "3:\tlearn: 0.1498526\ttotal: 120ms\tremaining: 1.23s\n",
            "4:\tlearn: 0.1113672\ttotal: 146ms\tremaining: 1.16s\n",
            "5:\tlearn: 0.0783121\ttotal: 172ms\tremaining: 1.12s\n",
            "6:\tlearn: 0.0643357\ttotal: 197ms\tremaining: 1.07s\n",
            "7:\tlearn: 0.0559336\ttotal: 223ms\tremaining: 1.03s\n",
            "8:\tlearn: 0.0503441\ttotal: 255ms\tremaining: 1.02s\n",
            "9:\tlearn: 0.0423564\ttotal: 282ms\tremaining: 987ms\n",
            "10:\tlearn: 0.0363173\ttotal: 308ms\tremaining: 951ms\n",
            "11:\tlearn: 0.0353940\ttotal: 332ms\tremaining: 914ms\n",
            "12:\tlearn: 0.0290435\ttotal: 358ms\tremaining: 882ms\n",
            "13:\tlearn: 0.0270713\ttotal: 384ms\tremaining: 849ms\n",
            "14:\tlearn: 0.0219550\ttotal: 410ms\tremaining: 820ms\n",
            "15:\tlearn: 0.0205598\ttotal: 435ms\tremaining: 788ms\n",
            "16:\tlearn: 0.0189220\ttotal: 464ms\tremaining: 764ms\n",
            "17:\tlearn: 0.0168104\ttotal: 490ms\tremaining: 735ms\n",
            "18:\tlearn: 0.0149219\ttotal: 515ms\tremaining: 705ms\n",
            "19:\tlearn: 0.0122711\ttotal: 542ms\tremaining: 677ms\n",
            "20:\tlearn: 0.0110489\ttotal: 567ms\tremaining: 648ms\n",
            "21:\tlearn: 0.0098460\ttotal: 593ms\tremaining: 620ms\n",
            "22:\tlearn: 0.0086133\ttotal: 626ms\tremaining: 599ms\n",
            "23:\tlearn: 0.0078945\ttotal: 653ms\tremaining: 571ms\n",
            "24:\tlearn: 0.0071168\ttotal: 683ms\tremaining: 546ms\n",
            "25:\tlearn: 0.0063292\ttotal: 709ms\tremaining: 518ms\n",
            "26:\tlearn: 0.0056577\ttotal: 733ms\tremaining: 489ms\n",
            "27:\tlearn: 0.0051109\ttotal: 759ms\tremaining: 461ms\n",
            "28:\tlearn: 0.0042151\ttotal: 792ms\tremaining: 437ms\n",
            "29:\tlearn: 0.0039608\ttotal: 829ms\tremaining: 414ms\n",
            "30:\tlearn: 0.0039608\ttotal: 853ms\tremaining: 385ms\n",
            "31:\tlearn: 0.0035300\ttotal: 878ms\tremaining: 357ms\n",
            "32:\tlearn: 0.0033515\ttotal: 906ms\tremaining: 330ms\n",
            "33:\tlearn: 0.0032045\ttotal: 930ms\tremaining: 301ms\n",
            "34:\tlearn: 0.0028577\ttotal: 954ms\tremaining: 273ms\n",
            "35:\tlearn: 0.0024938\ttotal: 979ms\tremaining: 245ms\n",
            "36:\tlearn: 0.0024938\ttotal: 1s\tremaining: 217ms\n",
            "37:\tlearn: 0.0024938\ttotal: 1.03s\tremaining: 191ms\n",
            "38:\tlearn: 0.0024937\ttotal: 1.06s\tremaining: 163ms\n",
            "39:\tlearn: 0.0024937\ttotal: 1.09s\tremaining: 136ms\n",
            "40:\tlearn: 0.0024937\ttotal: 1.12s\tremaining: 109ms\n",
            "41:\tlearn: 0.0024936\ttotal: 1.14s\tremaining: 81.5ms\n",
            "42:\tlearn: 0.0024936\ttotal: 1.16s\tremaining: 54.1ms\n",
            "43:\tlearn: 0.0024935\ttotal: 1.19s\tremaining: 27ms\n",
            "44:\tlearn: 0.0024935\ttotal: 1.21s\tremaining: 0us\n",
            "0:\tlearn: 0.4271473\ttotal: 32.4ms\tremaining: 1.43s\n",
            "1:\tlearn: 0.3063200\ttotal: 56.8ms\tremaining: 1.22s\n",
            "2:\tlearn: 0.2059763\ttotal: 81.9ms\tremaining: 1.15s\n",
            "3:\tlearn: 0.1639207\ttotal: 107ms\tremaining: 1.09s\n",
            "4:\tlearn: 0.1169804\ttotal: 131ms\tremaining: 1.05s\n",
            "5:\tlearn: 0.0945631\ttotal: 157ms\tremaining: 1.02s\n",
            "6:\tlearn: 0.0795073\ttotal: 183ms\tremaining: 992ms\n",
            "7:\tlearn: 0.0688922\ttotal: 208ms\tremaining: 961ms\n",
            "8:\tlearn: 0.0593423\ttotal: 234ms\tremaining: 936ms\n",
            "9:\tlearn: 0.0502390\ttotal: 261ms\tremaining: 913ms\n",
            "10:\tlearn: 0.0482165\ttotal: 286ms\tremaining: 883ms\n",
            "11:\tlearn: 0.0397224\ttotal: 316ms\tremaining: 870ms\n",
            "12:\tlearn: 0.0388663\ttotal: 340ms\tremaining: 836ms\n",
            "13:\tlearn: 0.0311310\ttotal: 372ms\tremaining: 823ms\n",
            "14:\tlearn: 0.0292062\ttotal: 405ms\tremaining: 809ms\n",
            "15:\tlearn: 0.0245565\ttotal: 455ms\tremaining: 825ms\n",
            "16:\tlearn: 0.0215411\ttotal: 501ms\tremaining: 825ms\n",
            "17:\tlearn: 0.0199272\ttotal: 554ms\tremaining: 832ms\n",
            "18:\tlearn: 0.0196349\ttotal: 592ms\tremaining: 810ms\n",
            "19:\tlearn: 0.0168198\ttotal: 640ms\tremaining: 800ms\n",
            "20:\tlearn: 0.0165917\ttotal: 690ms\tremaining: 788ms\n",
            "21:\tlearn: 0.0140625\ttotal: 740ms\tremaining: 774ms\n",
            "22:\tlearn: 0.0119033\ttotal: 797ms\tremaining: 762ms\n",
            "23:\tlearn: 0.0105978\ttotal: 855ms\tremaining: 748ms\n",
            "24:\tlearn: 0.0103874\ttotal: 914ms\tremaining: 731ms\n",
            "25:\tlearn: 0.0092302\ttotal: 971ms\tremaining: 710ms\n",
            "26:\tlearn: 0.0086191\ttotal: 1.03s\tremaining: 685ms\n",
            "27:\tlearn: 0.0078162\ttotal: 1.07s\tremaining: 652ms\n",
            "28:\tlearn: 0.0071819\ttotal: 1.13s\tremaining: 626ms\n",
            "29:\tlearn: 0.0066067\ttotal: 1.19s\tremaining: 596ms\n",
            "30:\tlearn: 0.0061212\ttotal: 1.25s\tremaining: 563ms\n",
            "31:\tlearn: 0.0055498\ttotal: 1.3s\tremaining: 530ms\n",
            "32:\tlearn: 0.0053420\ttotal: 1.36s\tremaining: 495ms\n",
            "33:\tlearn: 0.0048665\ttotal: 1.42s\tremaining: 459ms\n",
            "34:\tlearn: 0.0043729\ttotal: 1.47s\tremaining: 421ms\n",
            "35:\tlearn: 0.0040025\ttotal: 1.53s\tremaining: 384ms\n",
            "36:\tlearn: 0.0037227\ttotal: 1.6s\tremaining: 346ms\n",
            "37:\tlearn: 0.0033948\ttotal: 1.66s\tremaining: 305ms\n",
            "38:\tlearn: 0.0030433\ttotal: 1.7s\tremaining: 261ms\n",
            "39:\tlearn: 0.0029278\ttotal: 1.75s\tremaining: 219ms\n",
            "40:\tlearn: 0.0027888\ttotal: 1.8s\tremaining: 175ms\n",
            "41:\tlearn: 0.0025590\ttotal: 1.85s\tremaining: 132ms\n",
            "42:\tlearn: 0.0025589\ttotal: 1.9s\tremaining: 88.4ms\n",
            "43:\tlearn: 0.0023914\ttotal: 1.96s\tremaining: 44.5ms\n",
            "44:\tlearn: 0.0023914\ttotal: 2.02s\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 350, max_depth = 7),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 350, max_depth = 7),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, Y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(Y, y_pred)\n",
        "  mcc = matthews_corrcoef(Y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(Y, y_pred)\n",
        "  f1 = f1_score(Y, y_pred, average='micro')\n",
        "  precision_score = precision_score(Y, y_pred, average='micro')\n",
        "  recall_score = recall_score(Y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"total_Metics(Combined(Martine)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X, Y)\n",
        "pd.DataFrame(prob).to_csv(\"total_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "cFd4DfGS1H4g"
      },
      "outputs": [],
      "source": [
        "importances = mutual_info_classif(X,Y)\n",
        "feature_importances = pd.Series(importances, total.columns[0:len(total.columns)])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "YUtwA_6q1S6G",
        "outputId": "5b3b0623-566e-4bf8-e07a-3918f3a6b003"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fe4e03a46d0>"
            ]
          },
          "execution_count": 12,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x2160 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure(figsize=(8,30))\n",
        "feature_importances.nlargest(100).plot(kind='barh', color='Teal')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CafQ3Wt12yFn"
      },
      "source": [
        "**Analysis of Top-100 Features**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "HHVVOge-22nI"
      },
      "outputs": [],
      "source": [
        "top_100 = df2[['CTDC30','CTDC35','CTDC24','CTDC36','CTDC6','CTDC38','CTDC27','CTDC3','CTDC28','CTDC37','CTDC1','CTDC17','PAAC16','PAAC1','PAAC11','PAAC3','CTDC16','CTDC22',\n",
        "               'PAAC21','PAAC7','PAAC17','CTDC34','PAAC12','CTDC19','WToV289','PAAC22','PAAC14','PAAC4','CTDC8','PAAC20','WToV451','WToV72','WToV79','CTDC29','CTDC20','PAAC19',\n",
        "               'WToV58','WToV453','WToV241','PAAC8','WToV309','WToV482','PAAC13','WToV292','WToV163','WToV53','CTDC31','WToV358','WToV183','WToV455','PAAC10','WToV259','WToV353','WToV393',\n",
        "               'WToV215','WToV99','WToV351','WToV271','PAAC2','WToV374','WToV463','WToV488','WToV422','PAAC6','WToV88','WToV347','WToV307','WToV168','WToV329','WToV423','WToV15','WToV21','WToV352',\n",
        "               'WToV336','WToV63','WToV18','WToV219','WToV190','WToV258','WToV162','WToV379','WToV325','WToV462','WToV388','WToV385','WToV468','WToV94','PAAC15','WToV199','PAAC9','PAAC5',\n",
        "               'DPC189','DPC190','DPC196','DPC10','PAAC18','DPC310','FText148','FText485','DPC350','Target']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gUcnlnGG7pxA",
        "outputId": "6afa08b6-7e2f-4dae-f679-1c3caa81ccc5"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=7, n_estimato...  0.988675  0.977350   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.994509  0.989018   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.994852  0.989705   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.996911  0.993828   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.975292  0.950725   \n",
            "5  ExtraTreesClassifier(max_depth=7, n_estimators...  0.991764  0.983527   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.995539  0.991079   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.977349   0.988675  0.988675  0.988675  \n",
            "1  0.989018   0.994509  0.994509  0.994509  \n",
            "2  0.989704   0.994852  0.994852  0.994852  \n",
            "3  0.993822   0.996911  0.996911  0.996911  \n",
            "4  0.950574   0.975292  0.975292  0.975292  \n",
            "5  0.983527   0.991764  0.991764  0.991764  \n",
            "6  0.991077   0.995539  0.995539  0.995539  \n",
            "0:\tlearn: 0.4883404\ttotal: 22.1ms\tremaining: 974ms\n",
            "1:\tlearn: 0.3262337\ttotal: 37.5ms\tremaining: 806ms\n",
            "2:\tlearn: 0.2588366\ttotal: 53.5ms\tremaining: 749ms\n",
            "3:\tlearn: 0.2119750\ttotal: 69.6ms\tremaining: 714ms\n",
            "4:\tlearn: 0.1804566\ttotal: 88.8ms\tremaining: 710ms\n",
            "5:\tlearn: 0.1483234\ttotal: 114ms\tremaining: 742ms\n",
            "6:\tlearn: 0.1350132\ttotal: 130ms\tremaining: 705ms\n",
            "7:\tlearn: 0.1138924\ttotal: 145ms\tremaining: 673ms\n",
            "8:\tlearn: 0.1027469\ttotal: 161ms\tremaining: 644ms\n",
            "9:\tlearn: 0.0926453\ttotal: 176ms\tremaining: 617ms\n",
            "10:\tlearn: 0.0807842\ttotal: 192ms\tremaining: 594ms\n",
            "11:\tlearn: 0.0710860\ttotal: 207ms\tremaining: 570ms\n",
            "12:\tlearn: 0.0593215\ttotal: 229ms\tremaining: 565ms\n",
            "13:\tlearn: 0.0551195\ttotal: 245ms\tremaining: 542ms\n",
            "14:\tlearn: 0.0489607\ttotal: 261ms\tremaining: 521ms\n",
            "15:\tlearn: 0.0384573\ttotal: 276ms\tremaining: 500ms\n",
            "16:\tlearn: 0.0340727\ttotal: 292ms\tremaining: 482ms\n",
            "17:\tlearn: 0.0320767\ttotal: 308ms\tremaining: 462ms\n",
            "18:\tlearn: 0.0286257\ttotal: 323ms\tremaining: 442ms\n",
            "19:\tlearn: 0.0274194\ttotal: 338ms\tremaining: 423ms\n",
            "20:\tlearn: 0.0257676\ttotal: 353ms\tremaining: 403ms\n",
            "21:\tlearn: 0.0225310\ttotal: 368ms\tremaining: 385ms\n",
            "22:\tlearn: 0.0216168\ttotal: 383ms\tremaining: 367ms\n",
            "23:\tlearn: 0.0192552\ttotal: 398ms\tremaining: 348ms\n",
            "24:\tlearn: 0.0173747\ttotal: 413ms\tremaining: 330ms\n",
            "25:\tlearn: 0.0165674\ttotal: 429ms\tremaining: 313ms\n",
            "26:\tlearn: 0.0133330\ttotal: 449ms\tremaining: 299ms\n",
            "27:\tlearn: 0.0122582\ttotal: 464ms\tremaining: 282ms\n",
            "28:\tlearn: 0.0111981\ttotal: 479ms\tremaining: 264ms\n",
            "29:\tlearn: 0.0105354\ttotal: 495ms\tremaining: 247ms\n",
            "30:\tlearn: 0.0097668\ttotal: 511ms\tremaining: 231ms\n",
            "31:\tlearn: 0.0087993\ttotal: 527ms\tremaining: 214ms\n",
            "32:\tlearn: 0.0080609\ttotal: 543ms\tremaining: 197ms\n",
            "33:\tlearn: 0.0074594\ttotal: 558ms\tremaining: 181ms\n",
            "34:\tlearn: 0.0071314\ttotal: 575ms\tremaining: 164ms\n",
            "35:\tlearn: 0.0064664\ttotal: 591ms\tremaining: 148ms\n",
            "36:\tlearn: 0.0062831\ttotal: 605ms\tremaining: 131ms\n",
            "37:\tlearn: 0.0056011\ttotal: 621ms\tremaining: 114ms\n",
            "38:\tlearn: 0.0052050\ttotal: 644ms\tremaining: 99.1ms\n",
            "39:\tlearn: 0.0049773\ttotal: 660ms\tremaining: 82.5ms\n",
            "40:\tlearn: 0.0046666\ttotal: 675ms\tremaining: 65.9ms\n",
            "41:\tlearn: 0.0044993\ttotal: 691ms\tremaining: 49.3ms\n",
            "42:\tlearn: 0.0042880\ttotal: 707ms\tremaining: 32.9ms\n",
            "43:\tlearn: 0.0039103\ttotal: 724ms\tremaining: 16.4ms\n",
            "44:\tlearn: 0.0039103\ttotal: 741ms\tremaining: 0us\n",
            "0:\tlearn: 0.4865246\ttotal: 20.7ms\tremaining: 911ms\n",
            "1:\tlearn: 0.3348808\ttotal: 35.3ms\tremaining: 759ms\n",
            "2:\tlearn: 0.2719630\ttotal: 50.1ms\tremaining: 701ms\n",
            "3:\tlearn: 0.2258648\ttotal: 65.6ms\tremaining: 672ms\n",
            "4:\tlearn: 0.1936910\ttotal: 81.8ms\tremaining: 655ms\n",
            "5:\tlearn: 0.1675158\ttotal: 99.3ms\tremaining: 646ms\n",
            "6:\tlearn: 0.1475521\ttotal: 115ms\tremaining: 623ms\n",
            "7:\tlearn: 0.1251820\ttotal: 132ms\tremaining: 608ms\n",
            "8:\tlearn: 0.0925127\ttotal: 148ms\tremaining: 592ms\n",
            "9:\tlearn: 0.0833584\ttotal: 167ms\tremaining: 583ms\n",
            "10:\tlearn: 0.0765463\ttotal: 183ms\tremaining: 565ms\n",
            "11:\tlearn: 0.0646723\ttotal: 201ms\tremaining: 553ms\n",
            "12:\tlearn: 0.0583547\ttotal: 219ms\tremaining: 539ms\n",
            "13:\tlearn: 0.0530361\ttotal: 256ms\tremaining: 566ms\n",
            "14:\tlearn: 0.0517959\ttotal: 272ms\tremaining: 545ms\n",
            "15:\tlearn: 0.0408838\ttotal: 289ms\tremaining: 523ms\n",
            "16:\tlearn: 0.0348681\ttotal: 304ms\tremaining: 501ms\n",
            "17:\tlearn: 0.0330079\ttotal: 318ms\tremaining: 478ms\n",
            "18:\tlearn: 0.0276917\ttotal: 334ms\tremaining: 457ms\n",
            "19:\tlearn: 0.0257295\ttotal: 364ms\tremaining: 455ms\n",
            "20:\tlearn: 0.0238112\ttotal: 382ms\tremaining: 437ms\n",
            "21:\tlearn: 0.0228222\ttotal: 396ms\tremaining: 414ms\n",
            "22:\tlearn: 0.0217463\ttotal: 411ms\tremaining: 393ms\n",
            "23:\tlearn: 0.0196869\ttotal: 432ms\tremaining: 378ms\n",
            "24:\tlearn: 0.0191190\ttotal: 447ms\tremaining: 357ms\n",
            "25:\tlearn: 0.0174864\ttotal: 461ms\tremaining: 337ms\n",
            "26:\tlearn: 0.0149992\ttotal: 479ms\tremaining: 320ms\n",
            "27:\tlearn: 0.0134453\ttotal: 494ms\tremaining: 300ms\n",
            "28:\tlearn: 0.0132087\ttotal: 510ms\tremaining: 281ms\n",
            "29:\tlearn: 0.0127373\ttotal: 525ms\tremaining: 263ms\n",
            "30:\tlearn: 0.0116653\ttotal: 542ms\tremaining: 245ms\n",
            "31:\tlearn: 0.0111542\ttotal: 558ms\tremaining: 227ms\n",
            "32:\tlearn: 0.0108395\ttotal: 572ms\tremaining: 208ms\n",
            "33:\tlearn: 0.0094943\ttotal: 588ms\tremaining: 190ms\n",
            "34:\tlearn: 0.0085604\ttotal: 603ms\tremaining: 172ms\n",
            "35:\tlearn: 0.0080848\ttotal: 617ms\tremaining: 154ms\n",
            "36:\tlearn: 0.0076200\ttotal: 638ms\tremaining: 138ms\n",
            "37:\tlearn: 0.0074366\ttotal: 653ms\tremaining: 120ms\n",
            "38:\tlearn: 0.0064874\ttotal: 668ms\tremaining: 103ms\n",
            "39:\tlearn: 0.0062072\ttotal: 683ms\tremaining: 85.3ms\n",
            "40:\tlearn: 0.0060355\ttotal: 697ms\tremaining: 68ms\n",
            "41:\tlearn: 0.0057794\ttotal: 714ms\tremaining: 51ms\n",
            "42:\tlearn: 0.0051189\ttotal: 728ms\tremaining: 33.9ms\n",
            "43:\tlearn: 0.0050462\ttotal: 744ms\tremaining: 16.9ms\n",
            "44:\tlearn: 0.0049488\ttotal: 760ms\tremaining: 0us\n",
            "0:\tlearn: 0.4776916\ttotal: 17.7ms\tremaining: 778ms\n",
            "1:\tlearn: 0.3474879\ttotal: 32.8ms\tremaining: 704ms\n",
            "2:\tlearn: 0.2736775\ttotal: 47.5ms\tremaining: 665ms\n",
            "3:\tlearn: 0.2076540\ttotal: 62.3ms\tremaining: 638ms\n",
            "4:\tlearn: 0.1625580\ttotal: 77.2ms\tremaining: 618ms\n",
            "5:\tlearn: 0.1377430\ttotal: 91.7ms\tremaining: 596ms\n",
            "6:\tlearn: 0.1111910\ttotal: 107ms\tremaining: 583ms\n",
            "7:\tlearn: 0.0980068\ttotal: 122ms\tremaining: 565ms\n",
            "8:\tlearn: 0.0759265\ttotal: 137ms\tremaining: 548ms\n",
            "9:\tlearn: 0.0681400\ttotal: 152ms\tremaining: 531ms\n",
            "10:\tlearn: 0.0637341\ttotal: 166ms\tremaining: 513ms\n",
            "11:\tlearn: 0.0543756\ttotal: 181ms\tremaining: 497ms\n",
            "12:\tlearn: 0.0468603\ttotal: 195ms\tremaining: 480ms\n",
            "13:\tlearn: 0.0408510\ttotal: 210ms\tremaining: 464ms\n",
            "14:\tlearn: 0.0369085\ttotal: 231ms\tremaining: 461ms\n",
            "15:\tlearn: 0.0347545\ttotal: 246ms\tremaining: 447ms\n",
            "16:\tlearn: 0.0327140\ttotal: 261ms\tremaining: 430ms\n",
            "17:\tlearn: 0.0259169\ttotal: 278ms\tremaining: 417ms\n",
            "18:\tlearn: 0.0240713\ttotal: 296ms\tremaining: 406ms\n",
            "19:\tlearn: 0.0207808\ttotal: 313ms\tremaining: 392ms\n",
            "20:\tlearn: 0.0181422\ttotal: 330ms\tremaining: 377ms\n",
            "21:\tlearn: 0.0172886\ttotal: 346ms\tremaining: 361ms\n",
            "22:\tlearn: 0.0146857\ttotal: 362ms\tremaining: 347ms\n",
            "23:\tlearn: 0.0140888\ttotal: 378ms\tremaining: 330ms\n",
            "24:\tlearn: 0.0124195\ttotal: 394ms\tremaining: 315ms\n",
            "25:\tlearn: 0.0111380\ttotal: 410ms\tremaining: 300ms\n",
            "26:\tlearn: 0.0107289\ttotal: 426ms\tremaining: 284ms\n",
            "27:\tlearn: 0.0097076\ttotal: 449ms\tremaining: 273ms\n",
            "28:\tlearn: 0.0092024\ttotal: 464ms\tremaining: 256ms\n",
            "29:\tlearn: 0.0088299\ttotal: 478ms\tremaining: 239ms\n",
            "30:\tlearn: 0.0079662\ttotal: 493ms\tremaining: 223ms\n",
            "31:\tlearn: 0.0077131\ttotal: 517ms\tremaining: 210ms\n",
            "32:\tlearn: 0.0069138\ttotal: 536ms\tremaining: 195ms\n",
            "33:\tlearn: 0.0063526\ttotal: 551ms\tremaining: 178ms\n",
            "34:\tlearn: 0.0060836\ttotal: 565ms\tremaining: 161ms\n",
            "35:\tlearn: 0.0057798\ttotal: 579ms\tremaining: 145ms\n",
            "36:\tlearn: 0.0054215\ttotal: 594ms\tremaining: 129ms\n",
            "37:\tlearn: 0.0050134\ttotal: 612ms\tremaining: 113ms\n",
            "38:\tlearn: 0.0048020\ttotal: 627ms\tremaining: 96.4ms\n",
            "39:\tlearn: 0.0046947\ttotal: 642ms\tremaining: 80.2ms\n",
            "40:\tlearn: 0.0044845\ttotal: 664ms\tremaining: 64.8ms\n",
            "41:\tlearn: 0.0042424\ttotal: 680ms\tremaining: 48.6ms\n",
            "42:\tlearn: 0.0040223\ttotal: 695ms\tremaining: 32.3ms\n",
            "43:\tlearn: 0.0040223\ttotal: 710ms\tremaining: 16.1ms\n",
            "44:\tlearn: 0.0038743\ttotal: 724ms\tremaining: 0us\n",
            "0:\tlearn: 0.5098632\ttotal: 15ms\tremaining: 661ms\n",
            "1:\tlearn: 0.3524717\ttotal: 29.8ms\tremaining: 640ms\n",
            "2:\tlearn: 0.2940866\ttotal: 44.6ms\tremaining: 624ms\n",
            "3:\tlearn: 0.2031429\ttotal: 61ms\tremaining: 625ms\n",
            "4:\tlearn: 0.1568100\ttotal: 83.8ms\tremaining: 671ms\n",
            "5:\tlearn: 0.1280314\ttotal: 99.2ms\tremaining: 645ms\n",
            "6:\tlearn: 0.1095191\ttotal: 115ms\tremaining: 622ms\n",
            "7:\tlearn: 0.0989230\ttotal: 130ms\tremaining: 601ms\n",
            "8:\tlearn: 0.0931607\ttotal: 145ms\tremaining: 580ms\n",
            "9:\tlearn: 0.0840603\ttotal: 160ms\tremaining: 559ms\n",
            "10:\tlearn: 0.0689269\ttotal: 175ms\tremaining: 541ms\n",
            "11:\tlearn: 0.0631819\ttotal: 190ms\tremaining: 522ms\n",
            "12:\tlearn: 0.0557563\ttotal: 205ms\tremaining: 504ms\n",
            "13:\tlearn: 0.0537216\ttotal: 220ms\tremaining: 487ms\n",
            "14:\tlearn: 0.0448268\ttotal: 235ms\tremaining: 470ms\n",
            "15:\tlearn: 0.0397734\ttotal: 250ms\tremaining: 454ms\n",
            "16:\tlearn: 0.0354070\ttotal: 265ms\tremaining: 437ms\n",
            "17:\tlearn: 0.0301329\ttotal: 280ms\tremaining: 420ms\n",
            "18:\tlearn: 0.0288826\ttotal: 302ms\tremaining: 413ms\n",
            "19:\tlearn: 0.0244950\ttotal: 317ms\tremaining: 396ms\n",
            "20:\tlearn: 0.0209283\ttotal: 332ms\tremaining: 380ms\n",
            "21:\tlearn: 0.0178497\ttotal: 347ms\tremaining: 363ms\n",
            "22:\tlearn: 0.0161200\ttotal: 362ms\tremaining: 346ms\n",
            "23:\tlearn: 0.0154390\ttotal: 378ms\tremaining: 331ms\n",
            "24:\tlearn: 0.0140958\ttotal: 395ms\tremaining: 316ms\n",
            "25:\tlearn: 0.0131892\ttotal: 413ms\tremaining: 302ms\n",
            "26:\tlearn: 0.0122217\ttotal: 428ms\tremaining: 285ms\n",
            "27:\tlearn: 0.0117458\ttotal: 445ms\tremaining: 270ms\n",
            "28:\tlearn: 0.0110842\ttotal: 461ms\tremaining: 254ms\n",
            "29:\tlearn: 0.0106146\ttotal: 479ms\tremaining: 239ms\n",
            "30:\tlearn: 0.0100623\ttotal: 495ms\tremaining: 223ms\n",
            "31:\tlearn: 0.0097466\ttotal: 519ms\tremaining: 211ms\n",
            "32:\tlearn: 0.0091020\ttotal: 537ms\tremaining: 195ms\n",
            "33:\tlearn: 0.0081890\ttotal: 553ms\tremaining: 179ms\n",
            "34:\tlearn: 0.0070607\ttotal: 568ms\tremaining: 162ms\n",
            "35:\tlearn: 0.0061672\ttotal: 584ms\tremaining: 146ms\n",
            "36:\tlearn: 0.0059226\ttotal: 600ms\tremaining: 130ms\n",
            "37:\tlearn: 0.0057627\ttotal: 615ms\tremaining: 113ms\n",
            "38:\tlearn: 0.0053772\ttotal: 631ms\tremaining: 97.1ms\n",
            "39:\tlearn: 0.0049012\ttotal: 646ms\tremaining: 80.8ms\n",
            "40:\tlearn: 0.0049011\ttotal: 661ms\tremaining: 64.5ms\n",
            "41:\tlearn: 0.0047485\ttotal: 676ms\tremaining: 48.3ms\n",
            "42:\tlearn: 0.0046359\ttotal: 691ms\tremaining: 32.1ms\n",
            "43:\tlearn: 0.0046359\ttotal: 709ms\tremaining: 16.1ms\n",
            "44:\tlearn: 0.0044560\ttotal: 746ms\tremaining: 0us\n",
            "0:\tlearn: 0.5081876\ttotal: 16.9ms\tremaining: 746ms\n",
            "1:\tlearn: 0.3317619\ttotal: 33.5ms\tremaining: 720ms\n",
            "2:\tlearn: 0.2682492\ttotal: 48.4ms\tremaining: 678ms\n",
            "3:\tlearn: 0.2279127\ttotal: 63.1ms\tremaining: 647ms\n",
            "4:\tlearn: 0.1781062\ttotal: 78ms\tremaining: 624ms\n",
            "5:\tlearn: 0.1558133\ttotal: 92ms\tremaining: 598ms\n",
            "6:\tlearn: 0.1354966\ttotal: 107ms\tremaining: 582ms\n",
            "7:\tlearn: 0.1191904\ttotal: 127ms\tremaining: 585ms\n",
            "8:\tlearn: 0.1016551\ttotal: 143ms\tremaining: 573ms\n",
            "9:\tlearn: 0.0854866\ttotal: 158ms\tremaining: 552ms\n",
            "10:\tlearn: 0.0771431\ttotal: 173ms\tremaining: 534ms\n",
            "11:\tlearn: 0.0638186\ttotal: 188ms\tremaining: 516ms\n",
            "12:\tlearn: 0.0528173\ttotal: 204ms\tremaining: 503ms\n",
            "13:\tlearn: 0.0472417\ttotal: 219ms\tremaining: 484ms\n",
            "14:\tlearn: 0.0416545\ttotal: 234ms\tremaining: 467ms\n",
            "15:\tlearn: 0.0363467\ttotal: 249ms\tremaining: 451ms\n",
            "16:\tlearn: 0.0333687\ttotal: 263ms\tremaining: 434ms\n",
            "17:\tlearn: 0.0268698\ttotal: 278ms\tremaining: 417ms\n",
            "18:\tlearn: 0.0241624\ttotal: 292ms\tremaining: 400ms\n",
            "19:\tlearn: 0.0213596\ttotal: 307ms\tremaining: 384ms\n",
            "20:\tlearn: 0.0202381\ttotal: 321ms\tremaining: 367ms\n",
            "21:\tlearn: 0.0199466\ttotal: 343ms\tremaining: 358ms\n",
            "22:\tlearn: 0.0178704\ttotal: 358ms\tremaining: 342ms\n",
            "23:\tlearn: 0.0173760\ttotal: 373ms\tremaining: 326ms\n",
            "24:\tlearn: 0.0149604\ttotal: 387ms\tremaining: 310ms\n",
            "25:\tlearn: 0.0130901\ttotal: 402ms\tremaining: 294ms\n",
            "26:\tlearn: 0.0121187\ttotal: 417ms\tremaining: 278ms\n",
            "27:\tlearn: 0.0112120\ttotal: 431ms\tremaining: 262ms\n",
            "28:\tlearn: 0.0105498\ttotal: 446ms\tremaining: 246ms\n",
            "29:\tlearn: 0.0098785\ttotal: 461ms\tremaining: 230ms\n",
            "30:\tlearn: 0.0091710\ttotal: 475ms\tremaining: 215ms\n",
            "31:\tlearn: 0.0081508\ttotal: 490ms\tremaining: 199ms\n",
            "32:\tlearn: 0.0076061\ttotal: 504ms\tremaining: 183ms\n",
            "33:\tlearn: 0.0072677\ttotal: 519ms\tremaining: 168ms\n",
            "34:\tlearn: 0.0067696\ttotal: 534ms\tremaining: 153ms\n",
            "35:\tlearn: 0.0065778\ttotal: 557ms\tremaining: 139ms\n",
            "36:\tlearn: 0.0056018\ttotal: 573ms\tremaining: 124ms\n",
            "37:\tlearn: 0.0053681\ttotal: 588ms\tremaining: 108ms\n",
            "38:\tlearn: 0.0049413\ttotal: 604ms\tremaining: 93ms\n",
            "39:\tlearn: 0.0045746\ttotal: 620ms\tremaining: 77.5ms\n",
            "40:\tlearn: 0.0042274\ttotal: 636ms\tremaining: 62ms\n",
            "41:\tlearn: 0.0039395\ttotal: 651ms\tremaining: 46.5ms\n",
            "42:\tlearn: 0.0037619\ttotal: 668ms\tremaining: 31.1ms\n",
            "43:\tlearn: 0.0036562\ttotal: 684ms\tremaining: 15.5ms\n",
            "44:\tlearn: 0.0036561\ttotal: 699ms\tremaining: 0us\n",
            "0:\tlearn: 0.5108227\ttotal: 15ms\tremaining: 659ms\n",
            "1:\tlearn: 0.3713245\ttotal: 30.1ms\tremaining: 647ms\n",
            "2:\tlearn: 0.2891586\ttotal: 45.4ms\tremaining: 635ms\n",
            "3:\tlearn: 0.2368615\ttotal: 60.8ms\tremaining: 624ms\n",
            "4:\tlearn: 0.1824607\ttotal: 75.8ms\tremaining: 607ms\n",
            "5:\tlearn: 0.1502185\ttotal: 90.4ms\tremaining: 587ms\n",
            "6:\tlearn: 0.1214348\ttotal: 105ms\tremaining: 571ms\n",
            "7:\tlearn: 0.1091437\ttotal: 134ms\tremaining: 620ms\n",
            "8:\tlearn: 0.0957664\ttotal: 149ms\tremaining: 596ms\n",
            "9:\tlearn: 0.0852040\ttotal: 167ms\tremaining: 585ms\n",
            "10:\tlearn: 0.0801964\ttotal: 182ms\tremaining: 562ms\n",
            "11:\tlearn: 0.0728291\ttotal: 197ms\tremaining: 541ms\n",
            "12:\tlearn: 0.0655804\ttotal: 211ms\tremaining: 519ms\n",
            "13:\tlearn: 0.0548192\ttotal: 234ms\tremaining: 518ms\n",
            "14:\tlearn: 0.0494599\ttotal: 250ms\tremaining: 501ms\n",
            "15:\tlearn: 0.0417464\ttotal: 265ms\tremaining: 481ms\n",
            "16:\tlearn: 0.0342868\ttotal: 280ms\tremaining: 462ms\n",
            "17:\tlearn: 0.0306928\ttotal: 295ms\tremaining: 443ms\n",
            "18:\tlearn: 0.0287169\ttotal: 310ms\tremaining: 424ms\n",
            "19:\tlearn: 0.0254622\ttotal: 325ms\tremaining: 407ms\n",
            "20:\tlearn: 0.0225512\ttotal: 340ms\tremaining: 389ms\n",
            "21:\tlearn: 0.0203764\ttotal: 355ms\tremaining: 371ms\n",
            "22:\tlearn: 0.0185511\ttotal: 370ms\tremaining: 354ms\n",
            "23:\tlearn: 0.0161041\ttotal: 385ms\tremaining: 337ms\n",
            "24:\tlearn: 0.0155586\ttotal: 401ms\tremaining: 321ms\n",
            "25:\tlearn: 0.0134864\ttotal: 417ms\tremaining: 305ms\n",
            "26:\tlearn: 0.0133241\ttotal: 431ms\tremaining: 287ms\n",
            "27:\tlearn: 0.0114169\ttotal: 454ms\tremaining: 276ms\n",
            "28:\tlearn: 0.0100763\ttotal: 470ms\tremaining: 259ms\n",
            "29:\tlearn: 0.0092534\ttotal: 484ms\tremaining: 242ms\n",
            "30:\tlearn: 0.0090264\ttotal: 499ms\tremaining: 225ms\n",
            "31:\tlearn: 0.0080769\ttotal: 514ms\tremaining: 209ms\n",
            "32:\tlearn: 0.0079546\ttotal: 538ms\tremaining: 195ms\n",
            "33:\tlearn: 0.0074525\ttotal: 552ms\tremaining: 179ms\n",
            "34:\tlearn: 0.0068885\ttotal: 567ms\tremaining: 162ms\n",
            "35:\tlearn: 0.0062797\ttotal: 582ms\tremaining: 145ms\n",
            "36:\tlearn: 0.0060061\ttotal: 597ms\tremaining: 129ms\n",
            "37:\tlearn: 0.0057984\ttotal: 612ms\tremaining: 113ms\n",
            "38:\tlearn: 0.0057239\ttotal: 626ms\tremaining: 96.3ms\n",
            "39:\tlearn: 0.0053566\ttotal: 641ms\tremaining: 80.1ms\n",
            "40:\tlearn: 0.0049498\ttotal: 661ms\tremaining: 64.5ms\n",
            "41:\tlearn: 0.0046132\ttotal: 676ms\tremaining: 48.3ms\n",
            "42:\tlearn: 0.0046128\ttotal: 690ms\tremaining: 32.1ms\n",
            "43:\tlearn: 0.0043659\ttotal: 705ms\tremaining: 16ms\n",
            "44:\tlearn: 0.0042173\ttotal: 720ms\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "X = top_100.drop(['Target'], axis=1)\n",
        "y = top_100['Target']\n",
        "\n",
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 350, max_depth = 7),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 350, max_depth = 7),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(y, y_pred)\n",
        "  mcc = matthews_corrcoef(y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(y, y_pred)\n",
        "  f1 = f1_score(y, y_pred, average='micro')\n",
        "  precision_score = precision_score(y, y_pred, average='micro')\n",
        "  recall_score = recall_score(y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"Top100_Metics(Combined(Martine)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X,y)\n",
        "pd.DataFrame(prob).to_csv(\"Top20_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rXegA5od60o0"
      },
      "source": [
        "**Analysis of Top-50 Features**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "viecEy2P65lx"
      },
      "outputs": [],
      "source": [
        "top_50 = df2[['CTDC30','CTDC35','CTDC24','CTDC36','CTDC6','CTDC38','CTDC27','CTDC3','CTDC28','CTDC37','CTDC1','CTDC17','PAAC16','PAAC1','PAAC11','PAAC3','CTDC16','CTDC22',\n",
        "               'PAAC21','PAAC7','PAAC17','CTDC34','PAAC12','CTDC19','WToV289','PAAC22','PAAC14','PAAC4','CTDC8','PAAC20','WToV451','WToV72','WToV79','CTDC29','CTDC20','PAAC19',\n",
        "               'WToV58','WToV453','WToV241','PAAC8','WToV309','WToV482','PAAC13','WToV292','WToV163','WToV53','CTDC31','WToV358','WToV183','WToV455','Target']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h2MGikZ57FV4",
        "outputId": "265c32fc-4174-45c6-84f4-60e6e8a0a459"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=7, n_estimato...  0.985587  0.971215   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.994852  0.989707   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.993823  0.987646   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.995196  0.990394   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.955388  0.912180   \n",
            "5  ExtraTreesClassifier(max_depth=7, n_estimators...  0.960192  0.921671   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.994166  0.988333   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.971170   0.985587  0.985587  0.985587  \n",
            "1  0.989704   0.994852  0.994852  0.994852  \n",
            "2  0.987645   0.993823  0.993823  0.993823  \n",
            "3  0.990390   0.995196  0.995196  0.995196  \n",
            "4  0.910733   0.955388  0.955388  0.955388  \n",
            "5  0.920348   0.960192  0.960192  0.960192  \n",
            "6  0.988331   0.994166  0.994166  0.994166  \n",
            "0:\tlearn: 0.4875060\ttotal: 15.6ms\tremaining: 685ms\n",
            "1:\tlearn: 0.3453794\ttotal: 25.2ms\tremaining: 542ms\n",
            "2:\tlearn: 0.2662076\ttotal: 36.9ms\tremaining: 516ms\n",
            "3:\tlearn: 0.2167338\ttotal: 46.5ms\tremaining: 477ms\n",
            "4:\tlearn: 0.1737700\ttotal: 64.1ms\tremaining: 512ms\n",
            "5:\tlearn: 0.1461593\ttotal: 83.2ms\tremaining: 541ms\n",
            "6:\tlearn: 0.1203307\ttotal: 105ms\tremaining: 573ms\n",
            "7:\tlearn: 0.1019431\ttotal: 126ms\tremaining: 581ms\n",
            "8:\tlearn: 0.0932147\ttotal: 147ms\tremaining: 587ms\n",
            "9:\tlearn: 0.0754032\ttotal: 165ms\tremaining: 578ms\n",
            "10:\tlearn: 0.0675787\ttotal: 184ms\tremaining: 569ms\n",
            "11:\tlearn: 0.0622367\ttotal: 215ms\tremaining: 592ms\n",
            "12:\tlearn: 0.0539130\ttotal: 244ms\tremaining: 600ms\n",
            "13:\tlearn: 0.0432091\ttotal: 264ms\tremaining: 585ms\n",
            "14:\tlearn: 0.0391088\ttotal: 287ms\tremaining: 573ms\n",
            "15:\tlearn: 0.0340150\ttotal: 314ms\tremaining: 570ms\n",
            "16:\tlearn: 0.0313031\ttotal: 337ms\tremaining: 555ms\n",
            "17:\tlearn: 0.0258686\ttotal: 357ms\tremaining: 535ms\n",
            "18:\tlearn: 0.0235394\ttotal: 378ms\tremaining: 517ms\n",
            "19:\tlearn: 0.0221240\ttotal: 417ms\tremaining: 521ms\n",
            "20:\tlearn: 0.0206030\ttotal: 437ms\tremaining: 500ms\n",
            "21:\tlearn: 0.0184422\ttotal: 469ms\tremaining: 490ms\n",
            "22:\tlearn: 0.0172547\ttotal: 491ms\tremaining: 469ms\n",
            "23:\tlearn: 0.0154057\ttotal: 511ms\tremaining: 447ms\n",
            "24:\tlearn: 0.0134171\ttotal: 535ms\tremaining: 428ms\n",
            "25:\tlearn: 0.0123042\ttotal: 556ms\tremaining: 406ms\n",
            "26:\tlearn: 0.0111909\ttotal: 581ms\tremaining: 387ms\n",
            "27:\tlearn: 0.0104773\ttotal: 601ms\tremaining: 365ms\n",
            "28:\tlearn: 0.0098669\ttotal: 629ms\tremaining: 347ms\n",
            "29:\tlearn: 0.0093546\ttotal: 647ms\tremaining: 323ms\n",
            "30:\tlearn: 0.0092691\ttotal: 681ms\tremaining: 308ms\n",
            "31:\tlearn: 0.0089383\ttotal: 705ms\tremaining: 287ms\n",
            "32:\tlearn: 0.0085157\ttotal: 725ms\tremaining: 264ms\n",
            "33:\tlearn: 0.0077122\ttotal: 738ms\tremaining: 239ms\n",
            "34:\tlearn: 0.0070805\ttotal: 753ms\tremaining: 215ms\n",
            "35:\tlearn: 0.0065517\ttotal: 763ms\tremaining: 191ms\n",
            "36:\tlearn: 0.0059345\ttotal: 779ms\tremaining: 168ms\n",
            "37:\tlearn: 0.0058124\ttotal: 800ms\tremaining: 147ms\n",
            "38:\tlearn: 0.0055435\ttotal: 830ms\tremaining: 128ms\n",
            "39:\tlearn: 0.0051188\ttotal: 851ms\tremaining: 106ms\n",
            "40:\tlearn: 0.0047294\ttotal: 872ms\tremaining: 85.1ms\n",
            "41:\tlearn: 0.0041707\ttotal: 892ms\tremaining: 63.7ms\n",
            "42:\tlearn: 0.0039740\ttotal: 918ms\tremaining: 42.7ms\n",
            "43:\tlearn: 0.0037531\ttotal: 938ms\tremaining: 21.3ms\n",
            "44:\tlearn: 0.0035686\ttotal: 959ms\tremaining: 0us\n",
            "0:\tlearn: 0.4914054\ttotal: 7.98ms\tremaining: 351ms\n",
            "1:\tlearn: 0.3764827\ttotal: 16.4ms\tremaining: 354ms\n",
            "2:\tlearn: 0.3074178\ttotal: 24.5ms\tremaining: 343ms\n",
            "3:\tlearn: 0.2454179\ttotal: 32.9ms\tremaining: 338ms\n",
            "4:\tlearn: 0.2055279\ttotal: 41.2ms\tremaining: 329ms\n",
            "5:\tlearn: 0.1601951\ttotal: 49.3ms\tremaining: 320ms\n",
            "6:\tlearn: 0.1477121\ttotal: 56.8ms\tremaining: 309ms\n",
            "7:\tlearn: 0.1154601\ttotal: 64.8ms\tremaining: 300ms\n",
            "8:\tlearn: 0.0989119\ttotal: 72.7ms\tremaining: 291ms\n",
            "9:\tlearn: 0.0865656\ttotal: 80.8ms\tremaining: 283ms\n",
            "10:\tlearn: 0.0770603\ttotal: 88.6ms\tremaining: 274ms\n",
            "11:\tlearn: 0.0753259\ttotal: 96.5ms\tremaining: 265ms\n",
            "12:\tlearn: 0.0608965\ttotal: 105ms\tremaining: 258ms\n",
            "13:\tlearn: 0.0484022\ttotal: 113ms\tremaining: 250ms\n",
            "14:\tlearn: 0.0457673\ttotal: 121ms\tremaining: 242ms\n",
            "15:\tlearn: 0.0422793\ttotal: 131ms\tremaining: 237ms\n",
            "16:\tlearn: 0.0384535\ttotal: 139ms\tremaining: 228ms\n",
            "17:\tlearn: 0.0357802\ttotal: 146ms\tremaining: 220ms\n",
            "18:\tlearn: 0.0329707\ttotal: 154ms\tremaining: 211ms\n",
            "19:\tlearn: 0.0300831\ttotal: 162ms\tremaining: 203ms\n",
            "20:\tlearn: 0.0268664\ttotal: 173ms\tremaining: 198ms\n",
            "21:\tlearn: 0.0228068\ttotal: 181ms\tremaining: 190ms\n",
            "22:\tlearn: 0.0211112\ttotal: 189ms\tremaining: 181ms\n",
            "23:\tlearn: 0.0174973\ttotal: 198ms\tremaining: 173ms\n",
            "24:\tlearn: 0.0159393\ttotal: 213ms\tremaining: 170ms\n",
            "25:\tlearn: 0.0150994\ttotal: 221ms\tremaining: 162ms\n",
            "26:\tlearn: 0.0148915\ttotal: 232ms\tremaining: 154ms\n",
            "27:\tlearn: 0.0138501\ttotal: 240ms\tremaining: 146ms\n",
            "28:\tlearn: 0.0118920\ttotal: 248ms\tremaining: 137ms\n",
            "29:\tlearn: 0.0115681\ttotal: 257ms\tremaining: 129ms\n",
            "30:\tlearn: 0.0113342\ttotal: 265ms\tremaining: 120ms\n",
            "31:\tlearn: 0.0107854\ttotal: 273ms\tremaining: 111ms\n",
            "32:\tlearn: 0.0092947\ttotal: 281ms\tremaining: 102ms\n",
            "33:\tlearn: 0.0083856\ttotal: 289ms\tremaining: 93.4ms\n",
            "34:\tlearn: 0.0082577\ttotal: 297ms\tremaining: 84.7ms\n",
            "35:\tlearn: 0.0076417\ttotal: 305ms\tremaining: 76.1ms\n",
            "36:\tlearn: 0.0073925\ttotal: 312ms\tremaining: 67.5ms\n",
            "37:\tlearn: 0.0067848\ttotal: 320ms\tremaining: 58.9ms\n",
            "38:\tlearn: 0.0063089\ttotal: 328ms\tremaining: 50.4ms\n",
            "39:\tlearn: 0.0062488\ttotal: 335ms\tremaining: 41.9ms\n",
            "40:\tlearn: 0.0062245\ttotal: 343ms\tremaining: 33.5ms\n",
            "41:\tlearn: 0.0055640\ttotal: 351ms\tremaining: 25.1ms\n",
            "42:\tlearn: 0.0052248\ttotal: 358ms\tremaining: 16.7ms\n",
            "43:\tlearn: 0.0047644\ttotal: 366ms\tremaining: 8.32ms\n",
            "44:\tlearn: 0.0046635\ttotal: 374ms\tremaining: 0us\n",
            "0:\tlearn: 0.4984868\ttotal: 8.25ms\tremaining: 363ms\n",
            "1:\tlearn: 0.3558251\ttotal: 15.4ms\tremaining: 330ms\n",
            "2:\tlearn: 0.2731512\ttotal: 22.9ms\tremaining: 320ms\n",
            "3:\tlearn: 0.2224398\ttotal: 30.4ms\tremaining: 312ms\n",
            "4:\tlearn: 0.1875996\ttotal: 38.1ms\tremaining: 305ms\n",
            "5:\tlearn: 0.1386032\ttotal: 46ms\tremaining: 299ms\n",
            "6:\tlearn: 0.1224176\ttotal: 53.6ms\tremaining: 291ms\n",
            "7:\tlearn: 0.1026271\ttotal: 61.4ms\tremaining: 284ms\n",
            "8:\tlearn: 0.0964158\ttotal: 69.1ms\tremaining: 276ms\n",
            "9:\tlearn: 0.0837618\ttotal: 76.8ms\tremaining: 269ms\n",
            "10:\tlearn: 0.0745049\ttotal: 84.7ms\tremaining: 262ms\n",
            "11:\tlearn: 0.0610689\ttotal: 92.8ms\tremaining: 255ms\n",
            "12:\tlearn: 0.0491778\ttotal: 101ms\tremaining: 249ms\n",
            "13:\tlearn: 0.0436072\ttotal: 109ms\tremaining: 240ms\n",
            "14:\tlearn: 0.0369319\ttotal: 116ms\tremaining: 232ms\n",
            "15:\tlearn: 0.0331476\ttotal: 124ms\tremaining: 224ms\n",
            "16:\tlearn: 0.0300073\ttotal: 132ms\tremaining: 217ms\n",
            "17:\tlearn: 0.0282047\ttotal: 139ms\tremaining: 209ms\n",
            "18:\tlearn: 0.0246151\ttotal: 147ms\tremaining: 201ms\n",
            "19:\tlearn: 0.0227571\ttotal: 155ms\tremaining: 194ms\n",
            "20:\tlearn: 0.0189656\ttotal: 164ms\tremaining: 188ms\n",
            "21:\tlearn: 0.0175239\ttotal: 175ms\tremaining: 183ms\n",
            "22:\tlearn: 0.0146188\ttotal: 186ms\tremaining: 178ms\n",
            "23:\tlearn: 0.0137633\ttotal: 194ms\tremaining: 170ms\n",
            "24:\tlearn: 0.0125415\ttotal: 203ms\tremaining: 163ms\n",
            "25:\tlearn: 0.0113212\ttotal: 217ms\tremaining: 158ms\n",
            "26:\tlearn: 0.0107253\ttotal: 224ms\tremaining: 149ms\n",
            "27:\tlearn: 0.0096412\ttotal: 239ms\tremaining: 145ms\n",
            "28:\tlearn: 0.0088093\ttotal: 253ms\tremaining: 139ms\n",
            "29:\tlearn: 0.0083243\ttotal: 263ms\tremaining: 132ms\n",
            "30:\tlearn: 0.0080002\ttotal: 275ms\tremaining: 124ms\n",
            "31:\tlearn: 0.0070771\ttotal: 294ms\tremaining: 119ms\n",
            "32:\tlearn: 0.0064764\ttotal: 312ms\tremaining: 114ms\n",
            "33:\tlearn: 0.0059509\ttotal: 327ms\tremaining: 106ms\n",
            "34:\tlearn: 0.0056660\ttotal: 353ms\tremaining: 101ms\n",
            "35:\tlearn: 0.0051202\ttotal: 376ms\tremaining: 94ms\n",
            "36:\tlearn: 0.0048641\ttotal: 396ms\tremaining: 85.7ms\n",
            "37:\tlearn: 0.0045413\ttotal: 430ms\tremaining: 79.1ms\n",
            "38:\tlearn: 0.0043877\ttotal: 452ms\tremaining: 69.6ms\n",
            "39:\tlearn: 0.0042397\ttotal: 475ms\tremaining: 59.3ms\n",
            "40:\tlearn: 0.0039069\ttotal: 497ms\tremaining: 48.5ms\n",
            "41:\tlearn: 0.0039067\ttotal: 520ms\tremaining: 37.1ms\n",
            "42:\tlearn: 0.0037662\ttotal: 532ms\tremaining: 24.7ms\n",
            "43:\tlearn: 0.0036327\ttotal: 543ms\tremaining: 12.3ms\n",
            "44:\tlearn: 0.0034361\ttotal: 554ms\tremaining: 0us\n",
            "0:\tlearn: 0.4899794\ttotal: 22.6ms\tremaining: 993ms\n",
            "1:\tlearn: 0.3317434\ttotal: 46.5ms\tremaining: 1s\n",
            "2:\tlearn: 0.2727959\ttotal: 60ms\tremaining: 841ms\n",
            "3:\tlearn: 0.2256251\ttotal: 73.8ms\tremaining: 757ms\n",
            "4:\tlearn: 0.1775911\ttotal: 85.3ms\tremaining: 682ms\n",
            "5:\tlearn: 0.1416406\ttotal: 107ms\tremaining: 696ms\n",
            "6:\tlearn: 0.1304099\ttotal: 127ms\tremaining: 692ms\n",
            "7:\tlearn: 0.1187362\ttotal: 139ms\tremaining: 643ms\n",
            "8:\tlearn: 0.1077862\ttotal: 150ms\tremaining: 599ms\n",
            "9:\tlearn: 0.0859290\ttotal: 159ms\tremaining: 557ms\n",
            "10:\tlearn: 0.0749683\ttotal: 170ms\tremaining: 525ms\n",
            "11:\tlearn: 0.0628955\ttotal: 179ms\tremaining: 492ms\n",
            "12:\tlearn: 0.0507758\ttotal: 190ms\tremaining: 469ms\n",
            "13:\tlearn: 0.0483454\ttotal: 211ms\tremaining: 468ms\n",
            "14:\tlearn: 0.0435170\ttotal: 233ms\tremaining: 466ms\n",
            "15:\tlearn: 0.0395851\ttotal: 252ms\tremaining: 456ms\n",
            "16:\tlearn: 0.0363052\ttotal: 262ms\tremaining: 431ms\n",
            "17:\tlearn: 0.0329170\ttotal: 271ms\tremaining: 406ms\n",
            "18:\tlearn: 0.0298480\ttotal: 280ms\tremaining: 383ms\n",
            "19:\tlearn: 0.0282916\ttotal: 290ms\tremaining: 362ms\n",
            "20:\tlearn: 0.0223857\ttotal: 301ms\tremaining: 344ms\n",
            "21:\tlearn: 0.0197333\ttotal: 311ms\tremaining: 326ms\n",
            "22:\tlearn: 0.0169889\ttotal: 321ms\tremaining: 307ms\n",
            "23:\tlearn: 0.0161339\ttotal: 332ms\tremaining: 290ms\n",
            "24:\tlearn: 0.0144633\ttotal: 352ms\tremaining: 281ms\n",
            "25:\tlearn: 0.0135840\ttotal: 375ms\tremaining: 274ms\n",
            "26:\tlearn: 0.0110921\ttotal: 395ms\tremaining: 264ms\n",
            "27:\tlearn: 0.0102748\ttotal: 416ms\tremaining: 252ms\n",
            "28:\tlearn: 0.0095521\ttotal: 442ms\tremaining: 244ms\n",
            "29:\tlearn: 0.0091543\ttotal: 461ms\tremaining: 231ms\n",
            "30:\tlearn: 0.0087108\ttotal: 478ms\tremaining: 216ms\n",
            "31:\tlearn: 0.0086541\ttotal: 488ms\tremaining: 198ms\n",
            "32:\tlearn: 0.0079673\ttotal: 499ms\tremaining: 181ms\n",
            "33:\tlearn: 0.0073392\ttotal: 508ms\tremaining: 164ms\n",
            "34:\tlearn: 0.0067684\ttotal: 522ms\tremaining: 149ms\n",
            "35:\tlearn: 0.0063980\ttotal: 542ms\tremaining: 136ms\n",
            "36:\tlearn: 0.0055435\ttotal: 577ms\tremaining: 125ms\n",
            "37:\tlearn: 0.0054149\ttotal: 598ms\tremaining: 110ms\n",
            "38:\tlearn: 0.0050818\ttotal: 627ms\tremaining: 96.5ms\n",
            "39:\tlearn: 0.0048378\ttotal: 660ms\tremaining: 82.5ms\n",
            "40:\tlearn: 0.0043914\ttotal: 683ms\tremaining: 66.6ms\n",
            "41:\tlearn: 0.0041588\ttotal: 703ms\tremaining: 50.2ms\n",
            "42:\tlearn: 0.0038660\ttotal: 723ms\tremaining: 33.6ms\n",
            "43:\tlearn: 0.0037535\ttotal: 742ms\tremaining: 16.9ms\n",
            "44:\tlearn: 0.0037533\ttotal: 768ms\tremaining: 0us\n",
            "0:\tlearn: 0.4894903\ttotal: 22.6ms\tremaining: 992ms\n",
            "1:\tlearn: 0.3814953\ttotal: 45.3ms\tremaining: 974ms\n",
            "2:\tlearn: 0.3029431\ttotal: 60.1ms\tremaining: 841ms\n",
            "3:\tlearn: 0.2379556\ttotal: 71.9ms\tremaining: 737ms\n",
            "4:\tlearn: 0.2013893\ttotal: 91.4ms\tremaining: 731ms\n",
            "5:\tlearn: 0.1685203\ttotal: 112ms\tremaining: 730ms\n",
            "6:\tlearn: 0.1423555\ttotal: 134ms\tremaining: 729ms\n",
            "7:\tlearn: 0.1119650\ttotal: 159ms\tremaining: 737ms\n",
            "8:\tlearn: 0.1018509\ttotal: 182ms\tremaining: 727ms\n",
            "9:\tlearn: 0.0849289\ttotal: 203ms\tremaining: 710ms\n",
            "10:\tlearn: 0.0747780\ttotal: 228ms\tremaining: 706ms\n",
            "11:\tlearn: 0.0591091\ttotal: 255ms\tremaining: 703ms\n",
            "12:\tlearn: 0.0534698\ttotal: 276ms\tremaining: 679ms\n",
            "13:\tlearn: 0.0483756\ttotal: 296ms\tremaining: 655ms\n",
            "14:\tlearn: 0.0400244\ttotal: 315ms\tremaining: 630ms\n",
            "15:\tlearn: 0.0367507\ttotal: 336ms\tremaining: 608ms\n",
            "16:\tlearn: 0.0343889\ttotal: 356ms\tremaining: 587ms\n",
            "17:\tlearn: 0.0275120\ttotal: 376ms\tremaining: 565ms\n",
            "18:\tlearn: 0.0243772\ttotal: 398ms\tremaining: 544ms\n",
            "19:\tlearn: 0.0220213\ttotal: 419ms\tremaining: 523ms\n",
            "20:\tlearn: 0.0203797\ttotal: 444ms\tremaining: 508ms\n",
            "21:\tlearn: 0.0171238\ttotal: 466ms\tremaining: 487ms\n",
            "22:\tlearn: 0.0170036\ttotal: 489ms\tremaining: 468ms\n",
            "23:\tlearn: 0.0163630\ttotal: 509ms\tremaining: 446ms\n",
            "24:\tlearn: 0.0140729\ttotal: 535ms\tremaining: 428ms\n",
            "25:\tlearn: 0.0122530\ttotal: 549ms\tremaining: 401ms\n",
            "26:\tlearn: 0.0113498\ttotal: 563ms\tremaining: 375ms\n",
            "27:\tlearn: 0.0107708\ttotal: 579ms\tremaining: 352ms\n",
            "28:\tlearn: 0.0099235\ttotal: 593ms\tremaining: 327ms\n",
            "29:\tlearn: 0.0095951\ttotal: 614ms\tremaining: 307ms\n",
            "30:\tlearn: 0.0084946\ttotal: 634ms\tremaining: 286ms\n",
            "31:\tlearn: 0.0081035\ttotal: 651ms\tremaining: 265ms\n",
            "32:\tlearn: 0.0074233\ttotal: 670ms\tremaining: 244ms\n",
            "33:\tlearn: 0.0070591\ttotal: 686ms\tremaining: 222ms\n",
            "34:\tlearn: 0.0064643\ttotal: 701ms\tremaining: 200ms\n",
            "35:\tlearn: 0.0063266\ttotal: 722ms\tremaining: 181ms\n",
            "36:\tlearn: 0.0059060\ttotal: 744ms\tremaining: 161ms\n",
            "37:\tlearn: 0.0055703\ttotal: 761ms\tremaining: 140ms\n",
            "38:\tlearn: 0.0049085\ttotal: 780ms\tremaining: 120ms\n",
            "39:\tlearn: 0.0049084\ttotal: 807ms\tremaining: 101ms\n",
            "40:\tlearn: 0.0045504\ttotal: 829ms\tremaining: 80.8ms\n",
            "41:\tlearn: 0.0041611\ttotal: 848ms\tremaining: 60.6ms\n",
            "42:\tlearn: 0.0038215\ttotal: 875ms\tremaining: 40.7ms\n",
            "43:\tlearn: 0.0038210\ttotal: 896ms\tremaining: 20.4ms\n",
            "44:\tlearn: 0.0036678\ttotal: 917ms\tremaining: 0us\n",
            "0:\tlearn: 0.5103823\ttotal: 23.9ms\tremaining: 1.05s\n",
            "1:\tlearn: 0.4207729\ttotal: 39.3ms\tremaining: 844ms\n",
            "2:\tlearn: 0.3536136\ttotal: 60.3ms\tremaining: 844ms\n",
            "3:\tlearn: 0.2778549\ttotal: 87.7ms\tremaining: 899ms\n",
            "4:\tlearn: 0.2388946\ttotal: 115ms\tremaining: 924ms\n",
            "5:\tlearn: 0.2107705\ttotal: 133ms\tremaining: 867ms\n",
            "6:\tlearn: 0.1789971\ttotal: 154ms\tremaining: 834ms\n",
            "7:\tlearn: 0.1569837\ttotal: 176ms\tremaining: 815ms\n",
            "8:\tlearn: 0.1302627\ttotal: 197ms\tremaining: 786ms\n",
            "9:\tlearn: 0.1109837\ttotal: 225ms\tremaining: 787ms\n",
            "10:\tlearn: 0.0992492\ttotal: 246ms\tremaining: 759ms\n",
            "11:\tlearn: 0.0775898\ttotal: 266ms\tremaining: 731ms\n",
            "12:\tlearn: 0.0664194\ttotal: 287ms\tremaining: 705ms\n",
            "13:\tlearn: 0.0549204\ttotal: 306ms\tremaining: 678ms\n",
            "14:\tlearn: 0.0417885\ttotal: 324ms\tremaining: 649ms\n",
            "15:\tlearn: 0.0388712\ttotal: 338ms\tremaining: 613ms\n",
            "16:\tlearn: 0.0344588\ttotal: 361ms\tremaining: 595ms\n",
            "17:\tlearn: 0.0293311\ttotal: 384ms\tremaining: 576ms\n",
            "18:\tlearn: 0.0274579\ttotal: 404ms\tremaining: 553ms\n",
            "19:\tlearn: 0.0247312\ttotal: 425ms\tremaining: 531ms\n",
            "20:\tlearn: 0.0226368\ttotal: 447ms\tremaining: 511ms\n",
            "21:\tlearn: 0.0189845\ttotal: 467ms\tremaining: 489ms\n",
            "22:\tlearn: 0.0168017\ttotal: 488ms\tremaining: 466ms\n",
            "23:\tlearn: 0.0139373\ttotal: 508ms\tremaining: 445ms\n",
            "24:\tlearn: 0.0131837\ttotal: 529ms\tremaining: 423ms\n",
            "25:\tlearn: 0.0118679\ttotal: 549ms\tremaining: 401ms\n",
            "26:\tlearn: 0.0116403\ttotal: 562ms\tremaining: 375ms\n",
            "27:\tlearn: 0.0115960\ttotal: 573ms\tremaining: 348ms\n",
            "28:\tlearn: 0.0102952\ttotal: 582ms\tremaining: 321ms\n",
            "29:\tlearn: 0.0091021\ttotal: 593ms\tremaining: 296ms\n",
            "30:\tlearn: 0.0075322\ttotal: 605ms\tremaining: 273ms\n",
            "31:\tlearn: 0.0071490\ttotal: 615ms\tremaining: 250ms\n",
            "32:\tlearn: 0.0069001\ttotal: 630ms\tremaining: 229ms\n",
            "33:\tlearn: 0.0064194\ttotal: 641ms\tremaining: 207ms\n",
            "34:\tlearn: 0.0060087\ttotal: 667ms\tremaining: 191ms\n",
            "35:\tlearn: 0.0055007\ttotal: 689ms\tremaining: 172ms\n",
            "36:\tlearn: 0.0048822\ttotal: 710ms\tremaining: 153ms\n",
            "37:\tlearn: 0.0045488\ttotal: 732ms\tremaining: 135ms\n",
            "38:\tlearn: 0.0042242\ttotal: 752ms\tremaining: 116ms\n",
            "39:\tlearn: 0.0039274\ttotal: 778ms\tremaining: 97.3ms\n",
            "40:\tlearn: 0.0039273\ttotal: 799ms\tremaining: 78ms\n",
            "41:\tlearn: 0.0039273\ttotal: 831ms\tremaining: 59.3ms\n",
            "42:\tlearn: 0.0039273\ttotal: 859ms\tremaining: 40ms\n",
            "43:\tlearn: 0.0039273\ttotal: 879ms\tremaining: 20ms\n",
            "44:\tlearn: 0.0039273\ttotal: 900ms\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "X = top_50.drop(['Target'], axis=1)\n",
        "y = top_50['Target']\n",
        "\n",
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 350, max_depth = 7),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 350, max_depth = 7),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(y, y_pred)\n",
        "  mcc = matthews_corrcoef(y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(y, y_pred)\n",
        "  f1 = f1_score(y, y_pred, average='micro')\n",
        "  precision_score = precision_score(y, y_pred, average='micro')\n",
        "  recall_score = recall_score(y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"Top50_Metics(Combined(Martine)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X,y)\n",
        "pd.DataFrame(prob).to_csv(\"Top20_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wRXl92r-7JSr"
      },
      "source": [
        "**Analysis of Top-20 Features**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j-2mIh6Z7NhY"
      },
      "outputs": [],
      "source": [
        "top_20 = df2[['CTDC30','CTDC35','CTDC24','CTDC36','CTDC6','CTDC38','CTDC27','CTDC3','CTDC28','CTDC37','CTDC1','CTDC17','PAAC16','PAAC1','PAAC11','PAAC3','CTDC16','CTDC22',\n",
        "               'PAAC21','PAAC7','Target']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VDTdN9zO7bUT",
        "outputId": "3def59cb-0768-455e-9efd-ddeed0dacb69"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "                                          Classifier  Accuracy       mcc  \\\n",
            "0  RandomForestClassifier(max_depth=7, n_estimato...  0.964653  0.930206   \n",
            "1  XGBClassifier(base_score=0.1, eval_metric='mlo...  0.993480  0.986959   \n",
            "2  <catboost.core.CatBoostClassifier object at 0x...  0.996225  0.992450   \n",
            "3       LGBMClassifier(max_depth=5, random_state=50)  0.995196  0.990391   \n",
            "4                DecisionTreeClassifier(max_depth=9)  0.942347  0.886045   \n",
            "5  ExtraTreesClassifier(max_depth=7, n_estimators...  0.930336  0.864860   \n",
            "6  StackingClassifier(estimators=[('RF',\\n       ...  0.994509  0.989019   \n",
            "\n",
            "      Kappa  precision    recall        f1  \n",
            "0  0.929279   0.964653  0.964653  0.964653  \n",
            "1  0.986959   0.993480  0.993480  0.993480  \n",
            "2  0.992450   0.996225  0.996225  0.996225  \n",
            "3  0.990391   0.995196  0.995196  0.995196  \n",
            "4  0.884639   0.942347  0.942347  0.942347  \n",
            "5  0.860560   0.930336  0.930336  0.930336  \n",
            "6  0.989018   0.994509  0.994509  0.994509  \n",
            "0:\tlearn: 0.5026241\ttotal: 4.17ms\tremaining: 183ms\n",
            "1:\tlearn: 0.3809315\ttotal: 8.23ms\tremaining: 177ms\n",
            "2:\tlearn: 0.3096321\ttotal: 12ms\tremaining: 169ms\n",
            "3:\tlearn: 0.2507631\ttotal: 16ms\tremaining: 164ms\n",
            "4:\tlearn: 0.2187916\ttotal: 20.6ms\tremaining: 165ms\n",
            "5:\tlearn: 0.1961127\ttotal: 25ms\tremaining: 162ms\n",
            "6:\tlearn: 0.1650133\ttotal: 31.1ms\tremaining: 169ms\n",
            "7:\tlearn: 0.1352206\ttotal: 35ms\tremaining: 162ms\n",
            "8:\tlearn: 0.1123019\ttotal: 38.6ms\tremaining: 155ms\n",
            "9:\tlearn: 0.1028439\ttotal: 42.2ms\tremaining: 148ms\n",
            "10:\tlearn: 0.0817741\ttotal: 46ms\tremaining: 142ms\n",
            "11:\tlearn: 0.0699344\ttotal: 50.2ms\tremaining: 138ms\n",
            "12:\tlearn: 0.0616777\ttotal: 54.4ms\tremaining: 134ms\n",
            "13:\tlearn: 0.0555335\ttotal: 58.9ms\tremaining: 130ms\n",
            "14:\tlearn: 0.0490353\ttotal: 62.8ms\tremaining: 126ms\n",
            "15:\tlearn: 0.0448788\ttotal: 66.9ms\tremaining: 121ms\n",
            "16:\tlearn: 0.0363208\ttotal: 72.1ms\tremaining: 119ms\n",
            "17:\tlearn: 0.0341078\ttotal: 76.5ms\tremaining: 115ms\n",
            "18:\tlearn: 0.0303667\ttotal: 80.7ms\tremaining: 110ms\n",
            "19:\tlearn: 0.0273127\ttotal: 84.8ms\tremaining: 106ms\n",
            "20:\tlearn: 0.0247907\ttotal: 88.9ms\tremaining: 102ms\n",
            "21:\tlearn: 0.0224530\ttotal: 93.1ms\tremaining: 97.3ms\n",
            "22:\tlearn: 0.0206014\ttotal: 97.8ms\tremaining: 93.5ms\n",
            "23:\tlearn: 0.0196958\ttotal: 102ms\tremaining: 89.3ms\n",
            "24:\tlearn: 0.0179634\ttotal: 106ms\tremaining: 85ms\n",
            "25:\tlearn: 0.0168334\ttotal: 110ms\tremaining: 80.5ms\n",
            "26:\tlearn: 0.0160894\ttotal: 114ms\tremaining: 76.2ms\n",
            "27:\tlearn: 0.0148574\ttotal: 118ms\tremaining: 71.9ms\n",
            "28:\tlearn: 0.0131783\ttotal: 122ms\tremaining: 67.5ms\n",
            "29:\tlearn: 0.0123661\ttotal: 126ms\tremaining: 63.2ms\n",
            "30:\tlearn: 0.0104705\ttotal: 133ms\tremaining: 60.1ms\n",
            "31:\tlearn: 0.0097079\ttotal: 143ms\tremaining: 58.1ms\n",
            "32:\tlearn: 0.0088133\ttotal: 148ms\tremaining: 53.7ms\n",
            "33:\tlearn: 0.0080683\ttotal: 153ms\tremaining: 49.6ms\n",
            "34:\tlearn: 0.0074433\ttotal: 157ms\tremaining: 44.9ms\n",
            "35:\tlearn: 0.0069860\ttotal: 161ms\tremaining: 40.4ms\n",
            "36:\tlearn: 0.0068153\ttotal: 166ms\tremaining: 35.8ms\n",
            "37:\tlearn: 0.0065017\ttotal: 170ms\tremaining: 31.2ms\n",
            "38:\tlearn: 0.0059791\ttotal: 174ms\tremaining: 26.7ms\n",
            "39:\tlearn: 0.0056719\ttotal: 178ms\tremaining: 22.2ms\n",
            "40:\tlearn: 0.0055091\ttotal: 181ms\tremaining: 17.7ms\n",
            "41:\tlearn: 0.0049014\ttotal: 185ms\tremaining: 13.2ms\n",
            "42:\tlearn: 0.0048569\ttotal: 190ms\tremaining: 8.81ms\n",
            "43:\tlearn: 0.0048237\ttotal: 201ms\tremaining: 4.56ms\n",
            "44:\tlearn: 0.0045528\ttotal: 205ms\tremaining: 0us\n",
            "0:\tlearn: 0.4557483\ttotal: 4.27ms\tremaining: 188ms\n",
            "1:\tlearn: 0.3873842\ttotal: 8.73ms\tremaining: 188ms\n",
            "2:\tlearn: 0.3100451\ttotal: 14.5ms\tremaining: 202ms\n",
            "3:\tlearn: 0.2416868\ttotal: 19.3ms\tremaining: 198ms\n",
            "4:\tlearn: 0.2084683\ttotal: 22.9ms\tremaining: 184ms\n",
            "5:\tlearn: 0.1882598\ttotal: 27.6ms\tremaining: 180ms\n",
            "6:\tlearn: 0.1661700\ttotal: 31.9ms\tremaining: 173ms\n",
            "7:\tlearn: 0.1420348\ttotal: 37ms\tremaining: 171ms\n",
            "8:\tlearn: 0.1308014\ttotal: 41.7ms\tremaining: 167ms\n",
            "9:\tlearn: 0.1117771\ttotal: 45.8ms\tremaining: 160ms\n",
            "10:\tlearn: 0.0934936\ttotal: 50.4ms\tremaining: 156ms\n",
            "11:\tlearn: 0.0794560\ttotal: 55.2ms\tremaining: 152ms\n",
            "12:\tlearn: 0.0732783\ttotal: 60.4ms\tremaining: 149ms\n",
            "13:\tlearn: 0.0638423\ttotal: 66.2ms\tremaining: 147ms\n",
            "14:\tlearn: 0.0531874\ttotal: 71.5ms\tremaining: 143ms\n",
            "15:\tlearn: 0.0479016\ttotal: 77.7ms\tremaining: 141ms\n",
            "16:\tlearn: 0.0422577\ttotal: 87.7ms\tremaining: 144ms\n",
            "17:\tlearn: 0.0361385\ttotal: 99ms\tremaining: 149ms\n",
            "18:\tlearn: 0.0343980\ttotal: 109ms\tremaining: 150ms\n",
            "19:\tlearn: 0.0293603\ttotal: 120ms\tremaining: 150ms\n",
            "20:\tlearn: 0.0274076\ttotal: 131ms\tremaining: 150ms\n",
            "21:\tlearn: 0.0259961\ttotal: 141ms\tremaining: 147ms\n",
            "22:\tlearn: 0.0230595\ttotal: 151ms\tremaining: 145ms\n",
            "23:\tlearn: 0.0204275\ttotal: 162ms\tremaining: 142ms\n",
            "24:\tlearn: 0.0186611\ttotal: 173ms\tremaining: 139ms\n",
            "25:\tlearn: 0.0158028\ttotal: 187ms\tremaining: 136ms\n",
            "26:\tlearn: 0.0148345\ttotal: 197ms\tremaining: 132ms\n",
            "27:\tlearn: 0.0131814\ttotal: 208ms\tremaining: 126ms\n",
            "28:\tlearn: 0.0122998\ttotal: 219ms\tremaining: 121ms\n",
            "29:\tlearn: 0.0117837\ttotal: 230ms\tremaining: 115ms\n",
            "30:\tlearn: 0.0114114\ttotal: 242ms\tremaining: 109ms\n",
            "31:\tlearn: 0.0107613\ttotal: 254ms\tremaining: 103ms\n",
            "32:\tlearn: 0.0102283\ttotal: 262ms\tremaining: 95.2ms\n",
            "33:\tlearn: 0.0099408\ttotal: 274ms\tremaining: 88.7ms\n",
            "34:\tlearn: 0.0097666\ttotal: 285ms\tremaining: 81.5ms\n",
            "35:\tlearn: 0.0093784\ttotal: 296ms\tremaining: 74ms\n",
            "36:\tlearn: 0.0085456\ttotal: 307ms\tremaining: 66.4ms\n",
            "37:\tlearn: 0.0084233\ttotal: 319ms\tremaining: 58.7ms\n",
            "38:\tlearn: 0.0080614\ttotal: 330ms\tremaining: 50.7ms\n",
            "39:\tlearn: 0.0077403\ttotal: 340ms\tremaining: 42.6ms\n",
            "40:\tlearn: 0.0075997\ttotal: 352ms\tremaining: 34.3ms\n",
            "41:\tlearn: 0.0071115\ttotal: 360ms\tremaining: 25.7ms\n",
            "42:\tlearn: 0.0068008\ttotal: 378ms\tremaining: 17.6ms\n",
            "43:\tlearn: 0.0065362\ttotal: 389ms\tremaining: 8.85ms\n",
            "44:\tlearn: 0.0064204\ttotal: 401ms\tremaining: 0us\n",
            "0:\tlearn: 0.4989844\ttotal: 9.69ms\tremaining: 426ms\n",
            "1:\tlearn: 0.4114887\ttotal: 14.8ms\tremaining: 319ms\n",
            "2:\tlearn: 0.3409458\ttotal: 18.3ms\tremaining: 257ms\n",
            "3:\tlearn: 0.2885352\ttotal: 22.9ms\tremaining: 235ms\n",
            "4:\tlearn: 0.2257843\ttotal: 27.4ms\tremaining: 219ms\n",
            "5:\tlearn: 0.2020926\ttotal: 32.5ms\tremaining: 211ms\n",
            "6:\tlearn: 0.1705135\ttotal: 37.2ms\tremaining: 202ms\n",
            "7:\tlearn: 0.1517829\ttotal: 40.8ms\tremaining: 189ms\n",
            "8:\tlearn: 0.1420763\ttotal: 45.6ms\tremaining: 182ms\n",
            "9:\tlearn: 0.1247592\ttotal: 50.6ms\tremaining: 177ms\n",
            "10:\tlearn: 0.1116518\ttotal: 54.7ms\tremaining: 169ms\n",
            "11:\tlearn: 0.1001276\ttotal: 59.6ms\tremaining: 164ms\n",
            "12:\tlearn: 0.0869766\ttotal: 64ms\tremaining: 158ms\n",
            "13:\tlearn: 0.0798118\ttotal: 68.6ms\tremaining: 152ms\n",
            "14:\tlearn: 0.0691371\ttotal: 73.2ms\tremaining: 146ms\n",
            "15:\tlearn: 0.0606149\ttotal: 77.8ms\tremaining: 141ms\n",
            "16:\tlearn: 0.0504660\ttotal: 83.2ms\tremaining: 137ms\n",
            "17:\tlearn: 0.0441822\ttotal: 88.4ms\tremaining: 133ms\n",
            "18:\tlearn: 0.0375042\ttotal: 94.2ms\tremaining: 129ms\n",
            "19:\tlearn: 0.0342984\ttotal: 98.2ms\tremaining: 123ms\n",
            "20:\tlearn: 0.0332535\ttotal: 103ms\tremaining: 118ms\n",
            "21:\tlearn: 0.0285850\ttotal: 108ms\tremaining: 113ms\n",
            "22:\tlearn: 0.0263855\ttotal: 113ms\tremaining: 108ms\n",
            "23:\tlearn: 0.0248643\ttotal: 117ms\tremaining: 102ms\n",
            "24:\tlearn: 0.0223862\ttotal: 121ms\tremaining: 97ms\n",
            "25:\tlearn: 0.0203216\ttotal: 126ms\tremaining: 91.9ms\n",
            "26:\tlearn: 0.0193659\ttotal: 130ms\tremaining: 86.9ms\n",
            "27:\tlearn: 0.0181262\ttotal: 136ms\tremaining: 82.3ms\n",
            "28:\tlearn: 0.0172124\ttotal: 140ms\tremaining: 77.5ms\n",
            "29:\tlearn: 0.0157834\ttotal: 146ms\tremaining: 72.8ms\n",
            "30:\tlearn: 0.0142553\ttotal: 150ms\tremaining: 67.9ms\n",
            "31:\tlearn: 0.0135573\ttotal: 156ms\tremaining: 63.3ms\n",
            "32:\tlearn: 0.0122981\ttotal: 167ms\tremaining: 60.8ms\n",
            "33:\tlearn: 0.0121310\ttotal: 175ms\tremaining: 56.5ms\n",
            "34:\tlearn: 0.0118016\ttotal: 185ms\tremaining: 52.8ms\n",
            "35:\tlearn: 0.0102487\ttotal: 196ms\tremaining: 49ms\n",
            "36:\tlearn: 0.0098421\ttotal: 207ms\tremaining: 44.8ms\n",
            "37:\tlearn: 0.0084926\ttotal: 222ms\tremaining: 40.8ms\n",
            "38:\tlearn: 0.0084924\ttotal: 233ms\tremaining: 35.8ms\n",
            "39:\tlearn: 0.0084478\ttotal: 247ms\tremaining: 30.8ms\n",
            "40:\tlearn: 0.0078419\ttotal: 258ms\tremaining: 25.1ms\n",
            "41:\tlearn: 0.0075322\ttotal: 269ms\tremaining: 19.2ms\n",
            "42:\tlearn: 0.0069818\ttotal: 278ms\tremaining: 12.9ms\n",
            "43:\tlearn: 0.0063190\ttotal: 286ms\tremaining: 6.5ms\n",
            "44:\tlearn: 0.0063182\ttotal: 301ms\tremaining: 0us\n",
            "0:\tlearn: 0.5110922\ttotal: 3.98ms\tremaining: 175ms\n",
            "1:\tlearn: 0.3896576\ttotal: 7.78ms\tremaining: 167ms\n",
            "2:\tlearn: 0.3163761\ttotal: 15.9ms\tremaining: 223ms\n",
            "3:\tlearn: 0.2666605\ttotal: 23ms\tremaining: 236ms\n",
            "4:\tlearn: 0.2264932\ttotal: 34.4ms\tremaining: 275ms\n",
            "5:\tlearn: 0.1950247\ttotal: 45.1ms\tremaining: 293ms\n",
            "6:\tlearn: 0.1822397\ttotal: 56.7ms\tremaining: 308ms\n",
            "7:\tlearn: 0.1431262\ttotal: 69.1ms\tremaining: 320ms\n",
            "8:\tlearn: 0.1318230\ttotal: 79.1ms\tremaining: 316ms\n",
            "9:\tlearn: 0.1122065\ttotal: 85.1ms\tremaining: 298ms\n",
            "10:\tlearn: 0.1026853\ttotal: 102ms\tremaining: 314ms\n",
            "11:\tlearn: 0.0884589\ttotal: 113ms\tremaining: 311ms\n",
            "12:\tlearn: 0.0801575\ttotal: 124ms\tremaining: 306ms\n",
            "13:\tlearn: 0.0718109\ttotal: 140ms\tremaining: 310ms\n",
            "14:\tlearn: 0.0610858\ttotal: 146ms\tremaining: 293ms\n",
            "15:\tlearn: 0.0536110\ttotal: 154ms\tremaining: 279ms\n",
            "16:\tlearn: 0.0470129\ttotal: 164ms\tremaining: 270ms\n",
            "17:\tlearn: 0.0388757\ttotal: 178ms\tremaining: 268ms\n",
            "18:\tlearn: 0.0356240\ttotal: 190ms\tremaining: 260ms\n",
            "19:\tlearn: 0.0336522\ttotal: 197ms\tremaining: 246ms\n",
            "20:\tlearn: 0.0309441\ttotal: 210ms\tremaining: 240ms\n",
            "21:\tlearn: 0.0286327\ttotal: 224ms\tremaining: 234ms\n",
            "22:\tlearn: 0.0272100\ttotal: 235ms\tremaining: 225ms\n",
            "23:\tlearn: 0.0252149\ttotal: 246ms\tremaining: 215ms\n",
            "24:\tlearn: 0.0237709\ttotal: 257ms\tremaining: 206ms\n",
            "25:\tlearn: 0.0214455\ttotal: 268ms\tremaining: 196ms\n",
            "26:\tlearn: 0.0204684\ttotal: 279ms\tremaining: 186ms\n",
            "27:\tlearn: 0.0196838\ttotal: 290ms\tremaining: 176ms\n",
            "28:\tlearn: 0.0179329\ttotal: 302ms\tremaining: 166ms\n",
            "29:\tlearn: 0.0160209\ttotal: 316ms\tremaining: 158ms\n",
            "30:\tlearn: 0.0153329\ttotal: 326ms\tremaining: 147ms\n",
            "31:\tlearn: 0.0142447\ttotal: 337ms\tremaining: 137ms\n",
            "32:\tlearn: 0.0134426\ttotal: 347ms\tremaining: 126ms\n",
            "33:\tlearn: 0.0128579\ttotal: 358ms\tremaining: 116ms\n",
            "34:\tlearn: 0.0118116\ttotal: 362ms\tremaining: 103ms\n",
            "35:\tlearn: 0.0106976\ttotal: 367ms\tremaining: 91.8ms\n",
            "36:\tlearn: 0.0097257\ttotal: 372ms\tremaining: 80.5ms\n",
            "37:\tlearn: 0.0093583\ttotal: 377ms\tremaining: 69.4ms\n",
            "38:\tlearn: 0.0088887\ttotal: 380ms\tremaining: 58.5ms\n",
            "39:\tlearn: 0.0084899\ttotal: 385ms\tremaining: 48.1ms\n",
            "40:\tlearn: 0.0080515\ttotal: 391ms\tremaining: 38.1ms\n",
            "41:\tlearn: 0.0078454\ttotal: 401ms\tremaining: 28.7ms\n",
            "42:\tlearn: 0.0076557\ttotal: 412ms\tremaining: 19.2ms\n",
            "43:\tlearn: 0.0074037\ttotal: 424ms\tremaining: 9.63ms\n",
            "44:\tlearn: 0.0068743\ttotal: 435ms\tremaining: 0us\n",
            "0:\tlearn: 0.5101307\ttotal: 10.2ms\tremaining: 450ms\n",
            "1:\tlearn: 0.4119704\ttotal: 20.6ms\tremaining: 443ms\n",
            "2:\tlearn: 0.3496639\ttotal: 31.6ms\tremaining: 442ms\n",
            "3:\tlearn: 0.2918857\ttotal: 41.7ms\tremaining: 427ms\n",
            "4:\tlearn: 0.2290828\ttotal: 55ms\tremaining: 440ms\n",
            "5:\tlearn: 0.1888959\ttotal: 66.3ms\tremaining: 431ms\n",
            "6:\tlearn: 0.1707874\ttotal: 76.3ms\tremaining: 414ms\n",
            "7:\tlearn: 0.1464246\ttotal: 83.8ms\tremaining: 387ms\n",
            "8:\tlearn: 0.1306522\ttotal: 97.4ms\tremaining: 390ms\n",
            "9:\tlearn: 0.1125173\ttotal: 109ms\tremaining: 382ms\n",
            "10:\tlearn: 0.0944597\ttotal: 120ms\tremaining: 372ms\n",
            "11:\tlearn: 0.0863305\ttotal: 132ms\tremaining: 362ms\n",
            "12:\tlearn: 0.0718648\ttotal: 143ms\tremaining: 351ms\n",
            "13:\tlearn: 0.0578593\ttotal: 157ms\tremaining: 348ms\n",
            "14:\tlearn: 0.0546752\ttotal: 170ms\tremaining: 340ms\n",
            "15:\tlearn: 0.0451797\ttotal: 187ms\tremaining: 339ms\n",
            "16:\tlearn: 0.0405355\ttotal: 206ms\tremaining: 340ms\n",
            "17:\tlearn: 0.0387469\ttotal: 212ms\tremaining: 318ms\n",
            "18:\tlearn: 0.0357308\ttotal: 215ms\tremaining: 295ms\n",
            "19:\tlearn: 0.0336305\ttotal: 226ms\tremaining: 283ms\n",
            "20:\tlearn: 0.0305378\ttotal: 231ms\tremaining: 264ms\n",
            "21:\tlearn: 0.0264489\ttotal: 235ms\tremaining: 245ms\n",
            "22:\tlearn: 0.0235184\ttotal: 239ms\tremaining: 229ms\n",
            "23:\tlearn: 0.0232007\ttotal: 243ms\tremaining: 213ms\n",
            "24:\tlearn: 0.0217118\ttotal: 248ms\tremaining: 199ms\n",
            "25:\tlearn: 0.0181842\ttotal: 253ms\tremaining: 185ms\n",
            "26:\tlearn: 0.0172664\ttotal: 257ms\tremaining: 172ms\n",
            "27:\tlearn: 0.0157732\ttotal: 261ms\tremaining: 159ms\n",
            "28:\tlearn: 0.0149450\ttotal: 265ms\tremaining: 146ms\n",
            "29:\tlearn: 0.0135209\ttotal: 270ms\tremaining: 135ms\n",
            "30:\tlearn: 0.0123001\ttotal: 274ms\tremaining: 124ms\n",
            "31:\tlearn: 0.0119264\ttotal: 280ms\tremaining: 114ms\n",
            "32:\tlearn: 0.0110223\ttotal: 284ms\tremaining: 103ms\n",
            "33:\tlearn: 0.0105109\ttotal: 288ms\tremaining: 93.2ms\n",
            "34:\tlearn: 0.0097706\ttotal: 292ms\tremaining: 83.5ms\n",
            "35:\tlearn: 0.0087664\ttotal: 297ms\tremaining: 74.2ms\n",
            "36:\tlearn: 0.0086936\ttotal: 301ms\tremaining: 65.1ms\n",
            "37:\tlearn: 0.0082233\ttotal: 305ms\tremaining: 56.3ms\n",
            "38:\tlearn: 0.0077880\ttotal: 310ms\tremaining: 47.7ms\n",
            "39:\tlearn: 0.0073068\ttotal: 315ms\tremaining: 39.3ms\n",
            "40:\tlearn: 0.0069900\ttotal: 319ms\tremaining: 31.2ms\n",
            "41:\tlearn: 0.0066022\ttotal: 324ms\tremaining: 23.1ms\n",
            "42:\tlearn: 0.0062862\ttotal: 328ms\tremaining: 15.3ms\n",
            "43:\tlearn: 0.0059866\ttotal: 333ms\tremaining: 7.57ms\n",
            "44:\tlearn: 0.0054595\ttotal: 338ms\tremaining: 0us\n",
            "0:\tlearn: 0.4950309\ttotal: 4.34ms\tremaining: 191ms\n",
            "1:\tlearn: 0.3765813\ttotal: 13ms\tremaining: 278ms\n",
            "2:\tlearn: 0.2909531\ttotal: 18.7ms\tremaining: 262ms\n",
            "3:\tlearn: 0.2418724\ttotal: 24.1ms\tremaining: 247ms\n",
            "4:\tlearn: 0.2008920\ttotal: 29.9ms\tremaining: 239ms\n",
            "5:\tlearn: 0.1860638\ttotal: 36.6ms\tremaining: 238ms\n",
            "6:\tlearn: 0.1674640\ttotal: 43.5ms\tremaining: 236ms\n",
            "7:\tlearn: 0.1332023\ttotal: 54.3ms\tremaining: 251ms\n",
            "8:\tlearn: 0.1147111\ttotal: 60ms\tremaining: 240ms\n",
            "9:\tlearn: 0.1028176\ttotal: 65.7ms\tremaining: 230ms\n",
            "10:\tlearn: 0.0886144\ttotal: 76.3ms\tremaining: 236ms\n",
            "11:\tlearn: 0.0839778\ttotal: 82.5ms\tremaining: 227ms\n",
            "12:\tlearn: 0.0748754\ttotal: 88.4ms\tremaining: 218ms\n",
            "13:\tlearn: 0.0657621\ttotal: 94.5ms\tremaining: 209ms\n",
            "14:\tlearn: 0.0516653\ttotal: 99.3ms\tremaining: 199ms\n",
            "15:\tlearn: 0.0436761\ttotal: 107ms\tremaining: 195ms\n",
            "16:\tlearn: 0.0370106\ttotal: 115ms\tremaining: 189ms\n",
            "17:\tlearn: 0.0329473\ttotal: 120ms\tremaining: 179ms\n",
            "18:\tlearn: 0.0290992\ttotal: 124ms\tremaining: 169ms\n",
            "19:\tlearn: 0.0260982\ttotal: 131ms\tremaining: 164ms\n",
            "20:\tlearn: 0.0233819\ttotal: 142ms\tremaining: 162ms\n",
            "21:\tlearn: 0.0196809\ttotal: 155ms\tremaining: 162ms\n",
            "22:\tlearn: 0.0183456\ttotal: 166ms\tremaining: 159ms\n",
            "23:\tlearn: 0.0165859\ttotal: 176ms\tremaining: 154ms\n",
            "24:\tlearn: 0.0154257\ttotal: 195ms\tremaining: 156ms\n",
            "25:\tlearn: 0.0132564\ttotal: 206ms\tremaining: 150ms\n",
            "26:\tlearn: 0.0122868\ttotal: 217ms\tremaining: 145ms\n",
            "27:\tlearn: 0.0113399\ttotal: 230ms\tremaining: 139ms\n",
            "28:\tlearn: 0.0107562\ttotal: 241ms\tremaining: 133ms\n",
            "29:\tlearn: 0.0103422\ttotal: 248ms\tremaining: 124ms\n",
            "30:\tlearn: 0.0101437\ttotal: 258ms\tremaining: 116ms\n",
            "31:\tlearn: 0.0099460\ttotal: 268ms\tremaining: 109ms\n",
            "32:\tlearn: 0.0090908\ttotal: 276ms\tremaining: 100ms\n",
            "33:\tlearn: 0.0086969\ttotal: 290ms\tremaining: 93.8ms\n",
            "34:\tlearn: 0.0086096\ttotal: 301ms\tremaining: 86ms\n",
            "35:\tlearn: 0.0083307\ttotal: 313ms\tremaining: 78.3ms\n",
            "36:\tlearn: 0.0077808\ttotal: 325ms\tremaining: 70.3ms\n",
            "37:\tlearn: 0.0073721\ttotal: 337ms\tremaining: 62ms\n",
            "38:\tlearn: 0.0072445\ttotal: 348ms\tremaining: 53.5ms\n",
            "39:\tlearn: 0.0067185\ttotal: 356ms\tremaining: 44.5ms\n",
            "40:\tlearn: 0.0066132\ttotal: 369ms\tremaining: 36ms\n",
            "41:\tlearn: 0.0057146\ttotal: 383ms\tremaining: 27.4ms\n",
            "42:\tlearn: 0.0054318\ttotal: 392ms\tremaining: 18.2ms\n",
            "43:\tlearn: 0.0054316\ttotal: 403ms\tremaining: 9.17ms\n",
            "44:\tlearn: 0.0054313\ttotal: 414ms\tremaining: 0us\n"
          ]
        }
      ],
      "source": [
        "X = top_20.drop(['Target'], axis=1)\n",
        "y = top_20['Target']\n",
        "\n",
        "total_Metics = []\n",
        "total_Metics = pd.DataFrame(total_Metics)\n",
        "total_Metics['Classifier'] = 'Classifier'\n",
        "total_Metics['Accuracy'] = 'Accuracy'\n",
        "total_Metics['mcc'] = 'mcc'\n",
        "# total_Metics['auc'] = 'auc'\n",
        "total_Metics['Kappa'] = 'Kappa'\n",
        "total_Metics['precision'] = 'precision'\n",
        "total_Metics['recall'] = 'recall'\n",
        "total_Metics['f1'] = 'f1'\n",
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "# create model\n",
        "models = [RandomForestClassifier(n_estimators = 350, max_depth = 7),\n",
        "          XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1),\n",
        "          CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77),\n",
        "          LGBMClassifier(learning_rate = 0.1,max_depth = 5,random_state = 50),\n",
        "          DecisionTreeClassifier(max_depth = 9),\n",
        "          ExtraTreesClassifier(n_estimators = 350, max_depth = 7),\n",
        "          Stacking]\n",
        "for model in models:\n",
        "  from sklearn.metrics import f1_score, precision_score, recall_score, log_loss, accuracy_score, matthews_corrcoef, roc_auc_score, cohen_kappa_score\n",
        "  # evaluate model\n",
        "  # scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
        "  y_pred = cross_val_predict(model, X, y, cv=cv, n_jobs=-1)\n",
        "\n",
        "  # cm1 = confusion_matrix(y, y_pred)\n",
        "  # report performance\n",
        "  Accuracy = accuracy_score(y, y_pred)\n",
        "  mcc = matthews_corrcoef(y, y_pred)\n",
        "\n",
        "  kappa = cohen_kappa_score(y, y_pred)\n",
        "  f1 = f1_score(y, y_pred, average='micro')\n",
        "  precision_score = precision_score(y, y_pred, average='micro')\n",
        "  recall_score = recall_score(y, y_pred, average='micro')\n",
        "  # y_pred = np.argmax(y_pred, axis=0)\n",
        "  # auc = roc_auc_score(y, y_pred, multi_class='ovr')\n",
        "  total_Metics.loc[len(total_Metics.index)] = [model,Accuracy, mcc, kappa, precision_score,recall_score, f1 ]\n",
        "\n",
        "print(total_Metics)\n",
        "total_Metics.to_csv(\"Top20_Metics(Combined(Martine)).csv\")\n",
        "clf = StackingClassifier( estimators=estimator, final_estimator=ExtraTreesClassifier(n_estimators = 350, max_depth = 7))\n",
        "prob = clf.fit_transform(X,y)\n",
        "pd.DataFrame(prob).to_csv(\"Top20_Metics_Probability.csv\")\n",
        "#print(prob)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ec39Vm8WovAc"
      },
      "source": [
        "**ROC Curve**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tEEkdSSkoxs8"
      },
      "outputs": [],
      "source": [
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)\n",
        "for train_i, test_i in cv.split(X):\n",
        "    X_train, X_test = X.iloc[train_i], X.iloc[test_i]\n",
        "    y_train, y_test = Y.iloc[train_i], Y.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N7rT6-Wio3e2",
        "outputId": "38555fdf-68b4-4130-ae7c-11bfa74c7fd8"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "0:\tlearn: 0.4227052\ttotal: 104ms\tremaining: 4.56s\n",
            "1:\tlearn: 0.2591372\ttotal: 159ms\tremaining: 3.43s\n",
            "2:\tlearn: 0.1754045\ttotal: 206ms\tremaining: 2.89s\n",
            "3:\tlearn: 0.1372474\ttotal: 258ms\tremaining: 2.64s\n",
            "4:\tlearn: 0.1125978\ttotal: 314ms\tremaining: 2.51s\n",
            "5:\tlearn: 0.0925250\ttotal: 384ms\tremaining: 2.5s\n",
            "6:\tlearn: 0.0822220\ttotal: 485ms\tremaining: 2.63s\n",
            "7:\tlearn: 0.0733915\ttotal: 539ms\tremaining: 2.49s\n",
            "8:\tlearn: 0.0606730\ttotal: 602ms\tremaining: 2.41s\n",
            "9:\tlearn: 0.0511657\ttotal: 641ms\tremaining: 2.24s\n",
            "10:\tlearn: 0.0414635\ttotal: 674ms\tremaining: 2.08s\n",
            "11:\tlearn: 0.0341426\ttotal: 706ms\tremaining: 1.94s\n",
            "12:\tlearn: 0.0316664\ttotal: 738ms\tremaining: 1.82s\n",
            "13:\tlearn: 0.0282946\ttotal: 772ms\tremaining: 1.71s\n",
            "14:\tlearn: 0.0246597\ttotal: 829ms\tremaining: 1.66s\n",
            "15:\tlearn: 0.0205884\ttotal: 872ms\tremaining: 1.58s\n",
            "16:\tlearn: 0.0179569\ttotal: 919ms\tremaining: 1.51s\n",
            "17:\tlearn: 0.0142174\ttotal: 977ms\tremaining: 1.47s\n",
            "18:\tlearn: 0.0134935\ttotal: 1.04s\tremaining: 1.43s\n",
            "19:\tlearn: 0.0120591\ttotal: 1.1s\tremaining: 1.37s\n",
            "20:\tlearn: 0.0104624\ttotal: 1.17s\tremaining: 1.34s\n",
            "21:\tlearn: 0.0092362\ttotal: 1.23s\tremaining: 1.29s\n",
            "22:\tlearn: 0.0078155\ttotal: 1.32s\tremaining: 1.26s\n",
            "23:\tlearn: 0.0072994\ttotal: 1.4s\tremaining: 1.22s\n",
            "24:\tlearn: 0.0065269\ttotal: 1.47s\tremaining: 1.18s\n",
            "25:\tlearn: 0.0062215\ttotal: 1.55s\tremaining: 1.13s\n",
            "26:\tlearn: 0.0055739\ttotal: 1.65s\tremaining: 1.1s\n",
            "27:\tlearn: 0.0050753\ttotal: 1.73s\tremaining: 1.05s\n",
            "28:\tlearn: 0.0047384\ttotal: 1.79s\tremaining: 990ms\n",
            "29:\tlearn: 0.0041839\ttotal: 1.89s\tremaining: 946ms\n",
            "30:\tlearn: 0.0041835\ttotal: 1.99s\tremaining: 899ms\n",
            "31:\tlearn: 0.0041835\ttotal: 2.08s\tremaining: 845ms\n",
            "32:\tlearn: 0.0041834\ttotal: 2.15s\tremaining: 782ms\n",
            "33:\tlearn: 0.0041830\ttotal: 2.23s\tremaining: 723ms\n",
            "34:\tlearn: 0.0041830\ttotal: 2.31s\tremaining: 659ms\n",
            "35:\tlearn: 0.0041829\ttotal: 2.37s\tremaining: 593ms\n",
            "36:\tlearn: 0.0041828\ttotal: 2.45s\tremaining: 530ms\n",
            "37:\tlearn: 0.0041825\ttotal: 2.52s\tremaining: 465ms\n",
            "38:\tlearn: 0.0041824\ttotal: 2.61s\tremaining: 401ms\n",
            "39:\tlearn: 0.0041824\ttotal: 2.67s\tremaining: 334ms\n",
            "40:\tlearn: 0.0041822\ttotal: 2.74s\tremaining: 267ms\n",
            "41:\tlearn: 0.0041820\ttotal: 2.82s\tremaining: 201ms\n",
            "42:\tlearn: 0.0041820\ttotal: 2.9s\tremaining: 135ms\n",
            "43:\tlearn: 0.0041816\ttotal: 2.98s\tremaining: 67.7ms\n",
            "44:\tlearn: 0.0041812\ttotal: 3.03s\tremaining: 0us\n",
            "0:\tlearn: 0.4227052\ttotal: 110ms\tremaining: 4.83s\n",
            "1:\tlearn: 0.2591372\ttotal: 201ms\tremaining: 4.33s\n",
            "2:\tlearn: 0.1754045\ttotal: 243ms\tremaining: 3.4s\n",
            "3:\tlearn: 0.1372474\ttotal: 274ms\tremaining: 2.81s\n",
            "4:\tlearn: 0.1125978\ttotal: 314ms\tremaining: 2.51s\n",
            "5:\tlearn: 0.0925250\ttotal: 362ms\tremaining: 2.35s\n",
            "6:\tlearn: 0.0822220\ttotal: 390ms\tremaining: 2.12s\n",
            "7:\tlearn: 0.0733915\ttotal: 426ms\tremaining: 1.97s\n",
            "8:\tlearn: 0.0606730\ttotal: 450ms\tremaining: 1.8s\n",
            "9:\tlearn: 0.0511657\ttotal: 475ms\tremaining: 1.66s\n",
            "10:\tlearn: 0.0414635\ttotal: 499ms\tremaining: 1.54s\n",
            "11:\tlearn: 0.0341426\ttotal: 528ms\tremaining: 1.45s\n",
            "12:\tlearn: 0.0316664\ttotal: 552ms\tremaining: 1.36s\n",
            "13:\tlearn: 0.0282946\ttotal: 578ms\tremaining: 1.28s\n",
            "14:\tlearn: 0.0246597\ttotal: 602ms\tremaining: 1.2s\n",
            "15:\tlearn: 0.0205884\ttotal: 627ms\tremaining: 1.14s\n",
            "16:\tlearn: 0.0179569\ttotal: 651ms\tremaining: 1.07s\n",
            "17:\tlearn: 0.0142174\ttotal: 676ms\tremaining: 1.01s\n",
            "18:\tlearn: 0.0134935\ttotal: 701ms\tremaining: 959ms\n",
            "19:\tlearn: 0.0120591\ttotal: 725ms\tremaining: 906ms\n",
            "20:\tlearn: 0.0104624\ttotal: 754ms\tremaining: 862ms\n",
            "21:\tlearn: 0.0092362\ttotal: 778ms\tremaining: 813ms\n",
            "22:\tlearn: 0.0078155\ttotal: 802ms\tremaining: 767ms\n",
            "23:\tlearn: 0.0072994\ttotal: 830ms\tremaining: 726ms\n",
            "24:\tlearn: 0.0065269\ttotal: 885ms\tremaining: 708ms\n",
            "25:\tlearn: 0.0062215\ttotal: 912ms\tremaining: 667ms\n",
            "26:\tlearn: 0.0055739\ttotal: 936ms\tremaining: 624ms\n",
            "27:\tlearn: 0.0050753\ttotal: 963ms\tremaining: 585ms\n",
            "28:\tlearn: 0.0047384\ttotal: 987ms\tremaining: 545ms\n",
            "29:\tlearn: 0.0041839\ttotal: 1.01s\tremaining: 506ms\n",
            "30:\tlearn: 0.0041835\ttotal: 1.03s\tremaining: 467ms\n",
            "31:\tlearn: 0.0041835\ttotal: 1.06s\tremaining: 430ms\n",
            "32:\tlearn: 0.0041834\ttotal: 1.08s\tremaining: 393ms\n",
            "33:\tlearn: 0.0041830\ttotal: 1.1s\tremaining: 357ms\n",
            "34:\tlearn: 0.0041830\ttotal: 1.13s\tremaining: 322ms\n",
            "35:\tlearn: 0.0041829\ttotal: 1.15s\tremaining: 288ms\n",
            "36:\tlearn: 0.0041828\ttotal: 1.18s\tremaining: 255ms\n",
            "37:\tlearn: 0.0041825\ttotal: 1.2s\tremaining: 221ms\n",
            "38:\tlearn: 0.0041824\ttotal: 1.23s\tremaining: 189ms\n",
            "39:\tlearn: 0.0041824\ttotal: 1.25s\tremaining: 156ms\n",
            "40:\tlearn: 0.0041822\ttotal: 1.27s\tremaining: 124ms\n",
            "41:\tlearn: 0.0041820\ttotal: 1.29s\tremaining: 92.5ms\n",
            "42:\tlearn: 0.0041820\ttotal: 1.32s\tremaining: 61.3ms\n",
            "43:\tlearn: 0.0041816\ttotal: 1.34s\tremaining: 30.5ms\n",
            "44:\tlearn: 0.0041812\ttotal: 1.36s\tremaining: 0us\n",
            "0:\tlearn: 0.4291183\ttotal: 51.2ms\tremaining: 2.25s\n",
            "1:\tlearn: 0.3017472\ttotal: 106ms\tremaining: 2.28s\n",
            "2:\tlearn: 0.2284926\ttotal: 155ms\tremaining: 2.17s\n",
            "3:\tlearn: 0.1799308\ttotal: 211ms\tremaining: 2.16s\n",
            "4:\tlearn: 0.1234342\ttotal: 278ms\tremaining: 2.22s\n",
            "5:\tlearn: 0.0942957\ttotal: 328ms\tremaining: 2.13s\n",
            "6:\tlearn: 0.0761833\ttotal: 367ms\tremaining: 1.99s\n",
            "7:\tlearn: 0.0677484\ttotal: 423ms\tremaining: 1.96s\n",
            "8:\tlearn: 0.0577647\ttotal: 487ms\tremaining: 1.95s\n",
            "9:\tlearn: 0.0501428\ttotal: 544ms\tremaining: 1.9s\n",
            "10:\tlearn: 0.0485180\ttotal: 588ms\tremaining: 1.82s\n",
            "11:\tlearn: 0.0361892\ttotal: 650ms\tremaining: 1.79s\n",
            "12:\tlearn: 0.0333284\ttotal: 711ms\tremaining: 1.75s\n",
            "13:\tlearn: 0.0322135\ttotal: 765ms\tremaining: 1.69s\n",
            "14:\tlearn: 0.0262178\ttotal: 816ms\tremaining: 1.63s\n",
            "15:\tlearn: 0.0206419\ttotal: 873ms\tremaining: 1.58s\n",
            "16:\tlearn: 0.0190051\ttotal: 934ms\tremaining: 1.54s\n",
            "17:\tlearn: 0.0186499\ttotal: 989ms\tremaining: 1.48s\n",
            "18:\tlearn: 0.0158025\ttotal: 1.04s\tremaining: 1.43s\n",
            "19:\tlearn: 0.0143195\ttotal: 1.1s\tremaining: 1.38s\n",
            "20:\tlearn: 0.0121617\ttotal: 1.17s\tremaining: 1.33s\n",
            "21:\tlearn: 0.0115106\ttotal: 1.22s\tremaining: 1.28s\n",
            "22:\tlearn: 0.0104048\ttotal: 1.27s\tremaining: 1.21s\n",
            "23:\tlearn: 0.0100021\ttotal: 1.32s\tremaining: 1.16s\n",
            "24:\tlearn: 0.0085717\ttotal: 1.38s\tremaining: 1.1s\n",
            "25:\tlearn: 0.0077985\ttotal: 1.44s\tremaining: 1.05s\n",
            "26:\tlearn: 0.0073533\ttotal: 1.49s\tremaining: 992ms\n",
            "27:\tlearn: 0.0057916\ttotal: 1.54s\tremaining: 939ms\n",
            "28:\tlearn: 0.0053426\ttotal: 1.61s\tremaining: 888ms\n",
            "29:\tlearn: 0.0048375\ttotal: 1.67s\tremaining: 833ms\n",
            "30:\tlearn: 0.0045500\ttotal: 1.72s\tremaining: 778ms\n",
            "31:\tlearn: 0.0045500\ttotal: 1.77s\tremaining: 718ms\n",
            "32:\tlearn: 0.0040616\ttotal: 1.8s\tremaining: 653ms\n",
            "33:\tlearn: 0.0037895\ttotal: 1.82s\tremaining: 590ms\n",
            "34:\tlearn: 0.0035658\ttotal: 1.85s\tremaining: 528ms\n",
            "35:\tlearn: 0.0033147\ttotal: 1.87s\tremaining: 468ms\n",
            "36:\tlearn: 0.0030811\ttotal: 1.9s\tremaining: 410ms\n",
            "37:\tlearn: 0.0030811\ttotal: 1.92s\tremaining: 354ms\n",
            "38:\tlearn: 0.0030810\ttotal: 1.95s\tremaining: 300ms\n",
            "39:\tlearn: 0.0030803\ttotal: 1.97s\tremaining: 246ms\n",
            "40:\tlearn: 0.0030803\ttotal: 2s\tremaining: 195ms\n",
            "41:\tlearn: 0.0030803\ttotal: 2.03s\tremaining: 145ms\n",
            "42:\tlearn: 0.0030803\ttotal: 2.06s\tremaining: 95.7ms\n",
            "43:\tlearn: 0.0030803\ttotal: 2.08s\tremaining: 47.3ms\n",
            "44:\tlearn: 0.0030801\ttotal: 2.11s\tremaining: 0us\n",
            "0:\tlearn: 0.4166403\ttotal: 32.6ms\tremaining: 1.43s\n",
            "1:\tlearn: 0.2785771\ttotal: 57.2ms\tremaining: 1.23s\n",
            "2:\tlearn: 0.1999942\ttotal: 80.5ms\tremaining: 1.13s\n",
            "3:\tlearn: 0.1393643\ttotal: 105ms\tremaining: 1.07s\n",
            "4:\tlearn: 0.1231183\ttotal: 129ms\tremaining: 1.03s\n",
            "5:\tlearn: 0.1001687\ttotal: 153ms\tremaining: 991ms\n",
            "6:\tlearn: 0.0928106\ttotal: 176ms\tremaining: 956ms\n",
            "7:\tlearn: 0.0711896\ttotal: 200ms\tremaining: 923ms\n",
            "8:\tlearn: 0.0656316\ttotal: 223ms\tremaining: 892ms\n",
            "9:\tlearn: 0.0563773\ttotal: 256ms\tremaining: 897ms\n",
            "10:\tlearn: 0.0459701\ttotal: 281ms\tremaining: 868ms\n",
            "11:\tlearn: 0.0407898\ttotal: 306ms\tremaining: 840ms\n",
            "12:\tlearn: 0.0391828\ttotal: 329ms\tremaining: 810ms\n",
            "13:\tlearn: 0.0314880\ttotal: 355ms\tremaining: 787ms\n",
            "14:\tlearn: 0.0287530\ttotal: 379ms\tremaining: 758ms\n",
            "15:\tlearn: 0.0253085\ttotal: 403ms\tremaining: 730ms\n",
            "16:\tlearn: 0.0236564\ttotal: 426ms\tremaining: 702ms\n",
            "17:\tlearn: 0.0194322\ttotal: 451ms\tremaining: 676ms\n",
            "18:\tlearn: 0.0163147\ttotal: 481ms\tremaining: 658ms\n",
            "19:\tlearn: 0.0139284\ttotal: 505ms\tremaining: 631ms\n",
            "20:\tlearn: 0.0136398\ttotal: 528ms\tremaining: 604ms\n",
            "21:\tlearn: 0.0115967\ttotal: 554ms\tremaining: 579ms\n",
            "22:\tlearn: 0.0109151\ttotal: 577ms\tremaining: 552ms\n",
            "23:\tlearn: 0.0094484\ttotal: 601ms\tremaining: 526ms\n",
            "24:\tlearn: 0.0090894\ttotal: 625ms\tremaining: 500ms\n",
            "25:\tlearn: 0.0079400\ttotal: 654ms\tremaining: 478ms\n",
            "26:\tlearn: 0.0076338\ttotal: 691ms\tremaining: 461ms\n",
            "27:\tlearn: 0.0065560\ttotal: 716ms\tremaining: 435ms\n",
            "28:\tlearn: 0.0058318\ttotal: 741ms\tremaining: 409ms\n",
            "29:\tlearn: 0.0055177\ttotal: 767ms\tremaining: 383ms\n",
            "30:\tlearn: 0.0054593\ttotal: 789ms\tremaining: 356ms\n",
            "31:\tlearn: 0.0049147\ttotal: 813ms\tremaining: 330ms\n",
            "32:\tlearn: 0.0044001\ttotal: 837ms\tremaining: 304ms\n",
            "33:\tlearn: 0.0040587\ttotal: 861ms\tremaining: 278ms\n",
            "34:\tlearn: 0.0037681\ttotal: 885ms\tremaining: 253ms\n",
            "35:\tlearn: 0.0035382\ttotal: 913ms\tremaining: 228ms\n",
            "36:\tlearn: 0.0034014\ttotal: 936ms\tremaining: 202ms\n",
            "37:\tlearn: 0.0034014\ttotal: 973ms\tremaining: 179ms\n",
            "38:\tlearn: 0.0029021\ttotal: 1.01s\tremaining: 155ms\n",
            "39:\tlearn: 0.0027384\ttotal: 1.03s\tremaining: 129ms\n",
            "40:\tlearn: 0.0027383\ttotal: 1.05s\tremaining: 103ms\n",
            "41:\tlearn: 0.0026858\ttotal: 1.08s\tremaining: 77.1ms\n",
            "42:\tlearn: 0.0026856\ttotal: 1.1s\tremaining: 51.3ms\n",
            "43:\tlearn: 0.0026855\ttotal: 1.13s\tremaining: 25.7ms\n",
            "44:\tlearn: 0.0026856\ttotal: 1.15s\tremaining: 0us\n",
            "0:\tlearn: 0.4292663\ttotal: 31.6ms\tremaining: 1.39s\n",
            "1:\tlearn: 0.3001147\ttotal: 55.6ms\tremaining: 1.2s\n",
            "2:\tlearn: 0.2064359\ttotal: 83.7ms\tremaining: 1.17s\n",
            "3:\tlearn: 0.1542036\ttotal: 108ms\tremaining: 1.1s\n",
            "4:\tlearn: 0.1206034\ttotal: 132ms\tremaining: 1.05s\n",
            "5:\tlearn: 0.0904833\ttotal: 156ms\tremaining: 1.01s\n",
            "6:\tlearn: 0.0708570\ttotal: 182ms\tremaining: 986ms\n",
            "7:\tlearn: 0.0596407\ttotal: 205ms\tremaining: 949ms\n",
            "8:\tlearn: 0.0477413\ttotal: 230ms\tremaining: 921ms\n",
            "9:\tlearn: 0.0408870\ttotal: 256ms\tremaining: 896ms\n",
            "10:\tlearn: 0.0308197\ttotal: 280ms\tremaining: 866ms\n",
            "11:\tlearn: 0.0300030\ttotal: 308ms\tremaining: 848ms\n",
            "12:\tlearn: 0.0262349\ttotal: 333ms\tremaining: 820ms\n",
            "13:\tlearn: 0.0219545\ttotal: 357ms\tremaining: 790ms\n",
            "14:\tlearn: 0.0201982\ttotal: 384ms\tremaining: 767ms\n",
            "15:\tlearn: 0.0179774\ttotal: 418ms\tremaining: 757ms\n",
            "16:\tlearn: 0.0157841\ttotal: 441ms\tremaining: 727ms\n",
            "17:\tlearn: 0.0127359\ttotal: 468ms\tremaining: 703ms\n",
            "18:\tlearn: 0.0104447\ttotal: 493ms\tremaining: 674ms\n",
            "19:\tlearn: 0.0089019\ttotal: 522ms\tremaining: 652ms\n",
            "20:\tlearn: 0.0087242\ttotal: 546ms\tremaining: 624ms\n",
            "21:\tlearn: 0.0071567\ttotal: 571ms\tremaining: 597ms\n",
            "22:\tlearn: 0.0068129\ttotal: 595ms\tremaining: 569ms\n",
            "23:\tlearn: 0.0062348\ttotal: 619ms\tremaining: 541ms\n",
            "24:\tlearn: 0.0057386\ttotal: 642ms\tremaining: 514ms\n",
            "25:\tlearn: 0.0052133\ttotal: 666ms\tremaining: 487ms\n",
            "26:\tlearn: 0.0044523\ttotal: 690ms\tremaining: 460ms\n",
            "27:\tlearn: 0.0044521\ttotal: 713ms\tremaining: 433ms\n",
            "28:\tlearn: 0.0044515\ttotal: 741ms\tremaining: 409ms\n",
            "29:\tlearn: 0.0044333\ttotal: 764ms\tremaining: 382ms\n",
            "30:\tlearn: 0.0044312\ttotal: 788ms\tremaining: 356ms\n",
            "31:\tlearn: 0.0044235\ttotal: 811ms\tremaining: 330ms\n",
            "32:\tlearn: 0.0043509\ttotal: 837ms\tremaining: 304ms\n",
            "33:\tlearn: 0.0040615\ttotal: 863ms\tremaining: 279ms\n",
            "34:\tlearn: 0.0038322\ttotal: 887ms\tremaining: 253ms\n",
            "35:\tlearn: 0.0035291\ttotal: 911ms\tremaining: 228ms\n",
            "36:\tlearn: 0.0035289\ttotal: 942ms\tremaining: 204ms\n",
            "37:\tlearn: 0.0035289\ttotal: 967ms\tremaining: 178ms\n",
            "38:\tlearn: 0.0035288\ttotal: 992ms\tremaining: 153ms\n",
            "39:\tlearn: 0.0035288\ttotal: 1.01s\tremaining: 127ms\n",
            "40:\tlearn: 0.0035289\ttotal: 1.04s\tremaining: 101ms\n",
            "41:\tlearn: 0.0035287\ttotal: 1.06s\tremaining: 75.9ms\n",
            "42:\tlearn: 0.0035286\ttotal: 1.08s\tremaining: 50.5ms\n",
            "43:\tlearn: 0.0035285\ttotal: 1.11s\tremaining: 25.2ms\n",
            "44:\tlearn: 0.0035285\ttotal: 1.13s\tremaining: 0us\n",
            "0:\tlearn: 0.4336915\ttotal: 34ms\tremaining: 1.5s\n",
            "1:\tlearn: 0.2939556\ttotal: 58.8ms\tremaining: 1.26s\n",
            "2:\tlearn: 0.1879558\ttotal: 83ms\tremaining: 1.16s\n",
            "3:\tlearn: 0.1355041\ttotal: 107ms\tremaining: 1.1s\n",
            "4:\tlearn: 0.1123878\ttotal: 137ms\tremaining: 1.1s\n",
            "5:\tlearn: 0.0907778\ttotal: 174ms\tremaining: 1.13s\n",
            "6:\tlearn: 0.0779366\ttotal: 197ms\tremaining: 1.07s\n",
            "7:\tlearn: 0.0648529\ttotal: 223ms\tremaining: 1.03s\n",
            "8:\tlearn: 0.0580777\ttotal: 252ms\tremaining: 1.01s\n",
            "9:\tlearn: 0.0506141\ttotal: 275ms\tremaining: 962ms\n",
            "10:\tlearn: 0.0381031\ttotal: 299ms\tremaining: 923ms\n",
            "11:\tlearn: 0.0313396\ttotal: 322ms\tremaining: 885ms\n",
            "12:\tlearn: 0.0290730\ttotal: 346ms\tremaining: 851ms\n",
            "13:\tlearn: 0.0240602\ttotal: 370ms\tremaining: 818ms\n",
            "14:\tlearn: 0.0234215\ttotal: 394ms\tremaining: 788ms\n",
            "15:\tlearn: 0.0200059\ttotal: 419ms\tremaining: 759ms\n",
            "16:\tlearn: 0.0154942\ttotal: 443ms\tremaining: 730ms\n",
            "17:\tlearn: 0.0121497\ttotal: 472ms\tremaining: 708ms\n",
            "18:\tlearn: 0.0107366\ttotal: 496ms\tremaining: 679ms\n",
            "19:\tlearn: 0.0096491\ttotal: 521ms\tremaining: 651ms\n",
            "20:\tlearn: 0.0088028\ttotal: 544ms\tremaining: 622ms\n",
            "21:\tlearn: 0.0072122\ttotal: 569ms\tremaining: 594ms\n",
            "22:\tlearn: 0.0066334\ttotal: 599ms\tremaining: 573ms\n",
            "23:\tlearn: 0.0066330\ttotal: 622ms\tremaining: 545ms\n",
            "24:\tlearn: 0.0065982\ttotal: 645ms\tremaining: 516ms\n",
            "25:\tlearn: 0.0061831\ttotal: 669ms\tremaining: 489ms\n",
            "26:\tlearn: 0.0058087\ttotal: 696ms\tremaining: 464ms\n",
            "27:\tlearn: 0.0057885\ttotal: 719ms\tremaining: 437ms\n",
            "28:\tlearn: 0.0050913\ttotal: 745ms\tremaining: 411ms\n",
            "29:\tlearn: 0.0047686\ttotal: 769ms\tremaining: 385ms\n",
            "30:\tlearn: 0.0046193\ttotal: 792ms\tremaining: 358ms\n",
            "31:\tlearn: 0.0046193\ttotal: 818ms\tremaining: 332ms\n",
            "32:\tlearn: 0.0045948\ttotal: 842ms\tremaining: 306ms\n",
            "33:\tlearn: 0.0041870\ttotal: 866ms\tremaining: 280ms\n",
            "34:\tlearn: 0.0041867\ttotal: 895ms\tremaining: 256ms\n",
            "35:\tlearn: 0.0038505\ttotal: 920ms\tremaining: 230ms\n",
            "36:\tlearn: 0.0034808\ttotal: 944ms\tremaining: 204ms\n",
            "37:\tlearn: 0.0034807\ttotal: 968ms\tremaining: 178ms\n",
            "38:\tlearn: 0.0034808\ttotal: 993ms\tremaining: 153ms\n",
            "39:\tlearn: 0.0034806\ttotal: 1.02s\tremaining: 127ms\n",
            "40:\tlearn: 0.0034806\ttotal: 1.04s\tremaining: 101ms\n",
            "41:\tlearn: 0.0034803\ttotal: 1.06s\tremaining: 75.9ms\n",
            "42:\tlearn: 0.0034803\ttotal: 1.09s\tremaining: 51ms\n",
            "43:\tlearn: 0.0034803\ttotal: 1.12s\tremaining: 25.5ms\n",
            "44:\tlearn: 0.0034803\ttotal: 1.15s\tremaining: 0us\n",
            "0:\tlearn: 0.4333833\ttotal: 31.6ms\tremaining: 1.39s\n",
            "1:\tlearn: 0.2950174\ttotal: 60ms\tremaining: 1.29s\n",
            "2:\tlearn: 0.2040398\ttotal: 85ms\tremaining: 1.19s\n",
            "3:\tlearn: 0.1629822\ttotal: 110ms\tremaining: 1.12s\n",
            "4:\tlearn: 0.1260813\ttotal: 134ms\tremaining: 1.07s\n",
            "5:\tlearn: 0.0956078\ttotal: 158ms\tremaining: 1.02s\n",
            "6:\tlearn: 0.0853963\ttotal: 181ms\tremaining: 983ms\n",
            "7:\tlearn: 0.0712629\ttotal: 205ms\tremaining: 948ms\n",
            "8:\tlearn: 0.0596217\ttotal: 229ms\tremaining: 915ms\n",
            "9:\tlearn: 0.0513842\ttotal: 253ms\tremaining: 885ms\n",
            "10:\tlearn: 0.0495209\ttotal: 280ms\tremaining: 865ms\n",
            "11:\tlearn: 0.0416815\ttotal: 303ms\tremaining: 832ms\n",
            "12:\tlearn: 0.0399804\ttotal: 325ms\tremaining: 801ms\n",
            "13:\tlearn: 0.0336341\ttotal: 349ms\tremaining: 773ms\n",
            "14:\tlearn: 0.0326415\ttotal: 373ms\tremaining: 745ms\n",
            "15:\tlearn: 0.0241684\ttotal: 398ms\tremaining: 722ms\n",
            "16:\tlearn: 0.0180227\ttotal: 422ms\tremaining: 696ms\n",
            "17:\tlearn: 0.0155171\ttotal: 448ms\tremaining: 672ms\n",
            "18:\tlearn: 0.0142012\ttotal: 472ms\tremaining: 646ms\n",
            "19:\tlearn: 0.0123386\ttotal: 501ms\tremaining: 626ms\n",
            "20:\tlearn: 0.0109298\ttotal: 524ms\tremaining: 599ms\n",
            "21:\tlearn: 0.0107779\ttotal: 548ms\tremaining: 572ms\n",
            "22:\tlearn: 0.0097597\ttotal: 571ms\tremaining: 546ms\n",
            "23:\tlearn: 0.0089435\ttotal: 594ms\tremaining: 520ms\n",
            "24:\tlearn: 0.0081146\ttotal: 618ms\tremaining: 494ms\n",
            "25:\tlearn: 0.0072319\ttotal: 643ms\tremaining: 470ms\n",
            "26:\tlearn: 0.0063738\ttotal: 666ms\tremaining: 444ms\n",
            "27:\tlearn: 0.0056408\ttotal: 690ms\tremaining: 419ms\n",
            "28:\tlearn: 0.0054825\ttotal: 720ms\tremaining: 397ms\n",
            "29:\tlearn: 0.0052704\ttotal: 743ms\tremaining: 371ms\n",
            "30:\tlearn: 0.0047758\ttotal: 766ms\tremaining: 346ms\n",
            "31:\tlearn: 0.0044201\ttotal: 790ms\tremaining: 321ms\n",
            "32:\tlearn: 0.0043562\ttotal: 813ms\tremaining: 296ms\n",
            "33:\tlearn: 0.0037225\ttotal: 837ms\tremaining: 271ms\n",
            "34:\tlearn: 0.0035900\ttotal: 860ms\tremaining: 246ms\n",
            "35:\tlearn: 0.0032142\ttotal: 883ms\tremaining: 221ms\n",
            "36:\tlearn: 0.0030688\ttotal: 911ms\tremaining: 197ms\n",
            "37:\tlearn: 0.0029515\ttotal: 948ms\tremaining: 175ms\n",
            "38:\tlearn: 0.0027754\ttotal: 981ms\tremaining: 151ms\n",
            "39:\tlearn: 0.0025835\ttotal: 1s\tremaining: 126ms\n",
            "40:\tlearn: 0.0025833\ttotal: 1.03s\tremaining: 100ms\n",
            "41:\tlearn: 0.0024939\ttotal: 1.05s\tremaining: 75.2ms\n",
            "42:\tlearn: 0.0023841\ttotal: 1.08s\tremaining: 50.1ms\n",
            "43:\tlearn: 0.0023841\ttotal: 1.1s\tremaining: 25ms\n",
            "44:\tlearn: 0.0023839\ttotal: 1.12s\tremaining: 0us\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "StackingClassifier(estimators=[('RF',\n",
              "                                RandomForestClassifier(max_depth=9,\n",
              "                                                       n_estimators=450)),\n",
              "                               ('XGB',\n",
              "                                XGBClassifier(base_score=0.1,\n",
              "                                              eval_metric='mlogloss',\n",
              "                                              max_depth=5, n_estimators=250,\n",
              "                                              use_label_encoder=False)),\n",
              "                               ('Cat',\n",
              "                                <catboost.core.CatBoostClassifier object at 0x7f1c0557d730>),\n",
              "                               ('LGBM',\n",
              "                                LGBMClassifier(learning_rate=0.09, max_depth=5,\n",
              "                                               random_state=75)),\n",
              "                               ('DT', DecisionTreeClassifier(max_depth=9)),\n",
              "                               ('ETC',\n",
              "                                ExtraTreesClassifier(max_depth=9,\n",
              "                                                     n_estimators=450))],\n",
              "                   final_estimator=ExtraTreesClassifier(max_depth=9,\n",
              "                                                        n_estimators=450))"
            ]
          },
          "execution_count": 15,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "rfc.fit(X_train, y_train)\n",
        "xgb.fit(X_train, y_train)\n",
        "cat.fit(X_train, y_train)\n",
        "lgb.fit(X_train, y_train)\n",
        "dt.fit(X_train, y_train)\n",
        "etc.fit(X_train, y_train)\n",
        "Stacking.fit(X_train, y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 155
        },
        "id": "_MYZ97foo6w8",
        "outputId": "6cb857e6-d87e-458f-cda3-ba0fccd13904"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 216x144 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure(figsize=(3,2))\n",
        "plt.rcParams.update({'font.family':'serif'})\n",
        "\n",
        "plt.title('L', weight='bold',  fontsize=15, y = 0.87, x=-0.23)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "pred = dt.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"Stack, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=6)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=6)\n",
        "plt.legend(loc = 'lower right', fontsize=5)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.savefig('ROC(L).png', dpi=800)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W6KvFahtriwc"
      },
      "source": [
        "# **Performance Comparision**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "id": "EB05XcA1rpAL",
        "outputId": "32702f2a-9eaf-424d-be9a-81d47364863e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x489.6 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.rcParams[\"figure.figsize\"] = [12, 6.8]\n",
        "\n",
        "ax = plt.GridSpec(2, 3)\n",
        "plt.rcParams.update({'font.family':'serif'})\n",
        "ax.update(wspace=0.4, hspace=0.4)\n",
        "barWidth = 0.35\n",
        "\n",
        "ax1 = plt.subplot(ax[0,0])\n",
        "\n",
        "dip=[0.9652,0.9532,0.9697,0.9619,0.8867,0.9043,0.9736]\n",
        "mar=[0.9420,0.9489,0.9516,0.9509,0.9287,0.9081,0.9537]\n",
        "\n",
        "br1 = np.arange(len(dip))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "\n",
        "plt.bar(br1, dip, color ='#31a354', width = barWidth, edgecolor ='black', label ='S cerevisiae')\n",
        "plt.bar(br2, mar, color ='#c6e5a2', width = barWidth, edgecolor ='black', label ='H pylori')\n",
        "\n",
        "#plt.xlabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth for r in range(len(dip))], ['RF', 'XGB', 'CAT', 'LGBM', 'DT', 'ETC', 'SPPIPred'], rotation=270, fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('A', weight='bold',  fontsize=18, y = 0.90, x=-0.25)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,1])\n",
        "\n",
        "dip=[0.9635,0.9502,0.9695,0.9655,0.9132,0.9176,0.9725]\n",
        "mar=[0.9503,0.9461,0.9516,0.9492,0.8813,0.9263,0.9520]\n",
        "\n",
        "br1 = np.arange(len(dip))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "\n",
        "plt.bar(br1, dip, color ='#31a354', width = barWidth, edgecolor ='black', label ='S cerevisiae')\n",
        "plt.bar(br2, mar, color ='#c6e5a2', width = barWidth, edgecolor ='black', label ='H pylori')\n",
        "\n",
        "#plt.xlabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth for r in range(len(dip))], ['RF', 'XGB', 'CAT', 'LGBM', 'DT', 'ETC', 'SPPIPred'], rotation=270, fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('B', weight='bold',  fontsize=18, y = 0.90, x=-0.25)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,2])\n",
        "\n",
        "dip=[0.9630,0.9621,0.9663,0.9633,0.9296,0.9662,0.9667]\n",
        "mar=[0.9379,0.9520,0.9527,0.9547,0.9485,0.9184,0.9523]\n",
        "\n",
        "br1 = np.arange(len(dip))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "\n",
        "plt.bar(br1, dip, color ='#31a354', width = barWidth, edgecolor ='black', label ='S cerevisiae')\n",
        "plt.bar(br2, mar, color ='#c6e5a2', width = barWidth, edgecolor ='black', label ='H pylori')\n",
        "\n",
        "#plt.xlabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth for r in range(len(dip))], ['RF', 'XGB', 'CAT', 'LGBM', 'DT', 'ETC', 'SPPIPred'], rotation=270, fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.legend(title='Dataset',title_fontsize=15, ncol=1,bbox_to_anchor=(0.9,-0.7), fontsize=13, frameon=False)\n",
        "plt.title('C', weight='bold',  fontsize=18, y = 0.90, x=-0.25)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,0])\n",
        "\n",
        "dip=[0.9500,0.9541,0.9413,0.9534,0.8949,0.9568,0.9565]\n",
        "mar=[0.9633,0.9718,0.9677,0.9725,0.9574,0.9729,0.9681]\n",
        "\n",
        "br1 = np.arange(len(dip))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "\n",
        "plt.bar(br1, dip, color ='#31a354', width = barWidth, edgecolor ='black', label ='S cerevisiae')\n",
        "plt.bar(br2, mar, color ='#c6e5a2', width = barWidth, edgecolor ='black', label ='H pylori')\n",
        "\n",
        "#plt.xlabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth for r in range(len(dip))], ['RF', 'XGB', 'CAT', 'LGBM', 'DT', 'ETC', 'SPPIPred'], rotation=270, fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('D', weight='bold',  fontsize=18, y = 0.90, x=-0.25)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,1])\n",
        "\n",
        "dip=[0.9990,0.9989,0.9986,0.9989,0.9802,0.9990,0.9991]\n",
        "mar=[0.9962,0.9986,0.9969,0.9972,0.9900,0.9797,0.9989]\n",
        "\n",
        "br1 = np.arange(len(dip))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "\n",
        "plt.bar(br1, dip, color ='#31a354', width = barWidth, edgecolor ='black', label ='S cerevisiae')\n",
        "plt.bar(br2, mar, color ='#c6e5a2', width = barWidth, edgecolor ='black', label ='H pylori')\n",
        "\n",
        "#plt.xlabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth for r in range(len(dip))], ['RF', 'XGB', 'CAT', 'LGBM', 'DT', 'ETC', 'SPPIPred'], rotation=270, fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('E', weight='bold',  fontsize=18, y = 0.90, x=-0.25)\n",
        "\n",
        "\n",
        "\n",
        "# plt.tight_layout()\n",
        "plt.savefig('Perfromance Comparision.png', dpi=800)\n",
        "plt.savefig('Perfromance Comparision.pdf', dpi=800)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "eUyyCaA2okPe",
        "outputId": "2a9873d1-a1df-4262-a43c-5ac5be4152b4"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x360 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.rcParams[\"figure.figsize\"] = [12, 5]\n",
        "\n",
        "ax = plt.GridSpec(2, 3)\n",
        "plt.rcParams.update({'font.family':'serif'})\n",
        "ax.update(wspace=0.4, hspace=0.3)\n",
        "\n",
        "barWidth = 0.12\n",
        "ax1 = plt.subplot(ax[0,0])\n",
        "\n",
        "\n",
        "rf=[0.9652, 0.9420]\n",
        "xgb=[0.9532, 0.9489]\n",
        "cat=[0.9697, 0.9516]\n",
        "lgb=[0.9619, 0.9509]\n",
        "dt=[0.8867, 0.9287]\n",
        "etc=[0.9043, 0.9081]\n",
        "stack=[0.9736, 0.9537]\n",
        "\n",
        "\n",
        "br1 = np.arange(len(rf))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "br3 = [x + barWidth for x in br2]\n",
        "br4 = [x + barWidth for x in br3]\n",
        "br5 = [x + barWidth for x in br4]\n",
        "br6 = [x + barWidth for x in br5]\n",
        "br7 = [x + barWidth for x in br6]\n",
        "\n",
        "plt.bar(br1, rf,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br2, xgb,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br3, cat,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br4, lgb,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br5, dt,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br6, etc,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br7, stack, width = barWidth, edgecolor ='black')\n",
        "\n",
        "#plt.xlabel('Kappa-Stat', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth*3 for r in range(len(rf))], ['S cerevisiae', 'H pylori'], fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('A', weight='bold',  fontsize=18, y = 0.83, x=-0.3)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,1])\n",
        "\n",
        "rf=[0.9635, 0.9503]\n",
        "xgb=[0.9502, 0.9461]\n",
        "cat=[0.9695, 0.9516]\n",
        "lgb=[0.9655, 0.9492]\n",
        "dt=[0.9132, 0.8813]\n",
        "etc=[0.9176, 0.9263]\n",
        "stack=[0.9725, 0.9520]\n",
        "\n",
        "\n",
        "br1 = np.arange(len(rf))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "br3 = [x + barWidth for x in br2]\n",
        "br4 = [x + barWidth for x in br3]\n",
        "br5 = [x + barWidth for x in br4]\n",
        "br6 = [x + barWidth for x in br5]\n",
        "br7 = [x + barWidth for x in br6]\n",
        "\n",
        "plt.bar(br1, rf,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br2, xgb,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br3, cat,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br4, lgb,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br5, dt,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br6, etc,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br7, stack, width = barWidth, edgecolor ='black')\n",
        "\n",
        "#plt.xlabel('Kappa-Stat', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth*3 for r in range(len(rf))], ['S cerevisiae', 'H pylori'], fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('B', weight='bold',  fontsize=18, y = 0.83, x=-0.3)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,2])\n",
        "\n",
        "rf=[0.9500, 0.9633]\n",
        "xgb=[0.9541, 0.9718]\n",
        "cat=[0.9413, 0.9677]\n",
        "lgb=[0.9534, 0.9725]\n",
        "dt=[0.8949, 0.9574]\n",
        "etc=[0.9568, 0.9729]\n",
        "stack=[0.9565, 0.9681]\n",
        "\n",
        "\n",
        "br1 = np.arange(len(rf))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "br3 = [x + barWidth for x in br2]\n",
        "br4 = [x + barWidth for x in br3]\n",
        "br5 = [x + barWidth for x in br4]\n",
        "br6 = [x + barWidth for x in br5]\n",
        "br7 = [x + barWidth for x in br6]\n",
        "\n",
        "plt.bar(br1, rf,  width = barWidth, edgecolor ='black', label='RF')\n",
        "plt.bar(br2, xgb,  width = barWidth, edgecolor ='black', label='XGB')\n",
        "plt.bar(br3, cat,  width = barWidth, edgecolor ='black', label='CAT')\n",
        "plt.bar(br4, lgb,  width = barWidth, edgecolor ='black', label='LGBM')\n",
        "plt.bar(br5, dt,  width = barWidth, edgecolor ='black', label='DT')\n",
        "plt.bar(br6, etc,  width = barWidth, edgecolor ='black', label='ETC')\n",
        "plt.bar(br7, stack, width = barWidth, edgecolor ='black', label='SPPIPred')\n",
        "\n",
        "#plt.xlabel('Kappa-Stat', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth*3 for r in range(len(rf))], ['S cerevisiae', 'H pylori'], fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.legend(title='Classifier',title_fontsize=13, ncol=2,bbox_to_anchor=(1,-0.35), fontsize=11, frameon=False)\n",
        "plt.title('C', weight='bold',  fontsize=18, y = 0.83, x=-0.3)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,0])\n",
        "\n",
        "rf=[0.9990, 0.9962]\n",
        "xgb=[0.9989, 0.9986]\n",
        "cat=[0.9986, 0.9969]\n",
        "lgb=[0.9989, 0.9972]\n",
        "dt=[0.9802, 0.9900]\n",
        "etc=[0.9990, 0.9797]\n",
        "stack=[0.9991, 0.9989]\n",
        "\n",
        "\n",
        "br1 = np.arange(len(rf))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "br3 = [x + barWidth for x in br2]\n",
        "br4 = [x + barWidth for x in br3]\n",
        "br5 = [x + barWidth for x in br4]\n",
        "br6 = [x + barWidth for x in br5]\n",
        "br7 = [x + barWidth for x in br6]\n",
        "\n",
        "plt.bar(br1, rf,  width = barWidth, edgecolor ='black', label='RF')\n",
        "plt.bar(br2, xgb,  width = barWidth, edgecolor ='black', label='XGB')\n",
        "plt.bar(br3, cat,  width = barWidth, edgecolor ='black', label='CAT')\n",
        "plt.bar(br4, lgb,  width = barWidth, edgecolor ='black', label='LGBM')\n",
        "plt.bar(br5, dt,  width = barWidth, edgecolor ='black', label='DT')\n",
        "plt.bar(br6, etc,  width = barWidth, edgecolor ='black', label='ETC')\n",
        "plt.bar(br7, stack, width = barWidth, edgecolor ='black', label='SPPIPred')\n",
        "\n",
        "#plt.xlabel('Kappa-Stat', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth*3 for r in range(len(rf))], ['S cerevisiae', 'H pylori'], fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('D', weight='bold',  fontsize=18, y = 0.83, x=-0.3)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,1])\n",
        "\n",
        "rf=[0.9630, 0.9379]\n",
        "xgb=[0.9621, 0.9520]\n",
        "cat=[0.9663, 0.9527]\n",
        "lgb=[0.9633, 0.9547]\n",
        "dt=[0.9296, 0.9485]\n",
        "etc=[0.9662, 0.9184]\n",
        "stack=[0.9667, 0.9523]\n",
        "\n",
        "\n",
        "br1 = np.arange(len(rf))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "br3 = [x + barWidth for x in br2]\n",
        "br4 = [x + barWidth for x in br3]\n",
        "br5 = [x + barWidth for x in br4]\n",
        "br6 = [x + barWidth for x in br5]\n",
        "br7 = [x + barWidth for x in br6]\n",
        "\n",
        "plt.bar(br1, rf,  width = barWidth, edgecolor ='black', label='RF')\n",
        "plt.bar(br2, xgb,  width = barWidth, edgecolor ='black', label='XGB')\n",
        "plt.bar(br3, cat,  width = barWidth, edgecolor ='black', label='CAT')\n",
        "plt.bar(br4, lgb,  width = barWidth, edgecolor ='black', label='LGBM')\n",
        "plt.bar(br5, dt,  width = barWidth, edgecolor ='black', label='DT')\n",
        "plt.bar(br6, etc,  width = barWidth, edgecolor ='black', label='ETC')\n",
        "plt.bar(br7, stack, width = barWidth, edgecolor ='black', label='SPPIPred')\n",
        "\n",
        "#plt.xlabel('Kappa-Stat', fontweight ='bold', fontsize = 11)\n",
        "plt.xticks([r + barWidth*3 for r in range(len(rf))], ['S cerevisiae', 'H pylori'], fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 11)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('E', weight='bold',  fontsize=18, y = 0.83, x=-0.3)\n",
        "# plt.legend( fontsize=8)\n",
        "\n",
        "\n",
        "# plt.tight_layout()\n",
        "plt.savefig('Perfromance Comparision of all the classifiers.png', dpi=800)\n",
        "plt.savefig('Perfromance Comparision of all the classifiers.pdf', dpi=800)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 249
        },
        "id": "hokzYKBaRE_i",
        "outputId": "abdbffb4-6b9c-40fd-e167-2ef0d589a3ab"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.rcParams[\"figure.figsize\"] = [10, 4]\n",
        "\n",
        "ax = plt.GridSpec(2, 2)\n",
        "plt.rcParams.update({'font.family':'serif'})\n",
        "ax.update(wspace=0.25, hspace=0.3)\n",
        "barWidth = 0.17\n",
        "\n",
        "ax1 = plt.subplot(ax[0,0])\n",
        "\n",
        "paac=[0.9652,0.9532,0.9697,0.9619,0.8867,0.9043,0.9736]\n",
        "ctdc=[0.9635,0.9502,0.9695,0.9655,0.9132,0.9176,0.9725]\n",
        "dpc=[0.9630,0.9621,0.9663,0.9633,0.9296,0.9662,0.9667]\n",
        "w2v=[0.9500,0.9541,0.9413,0.9534,0.8949,0.9568,0.9565]\n",
        "ftx=[0.9990,0.9989,0.9986,0.9989,0.9802,0.9990,0.9991]\n",
        "\n",
        "\n",
        "br1 = np.arange(len(paac))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "br3 = [x + barWidth for x in br2]\n",
        "br4 = [x + barWidth for x in br3]\n",
        "br5 = [x + barWidth for x in br4]\n",
        "\n",
        "plt.bar(br1, paac,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br2, ctdc,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br3, dpc,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br4, w2v,  width = barWidth, edgecolor ='black')\n",
        "plt.bar(br5, ftx,  width = barWidth, edgecolor ='black')\n",
        "\n",
        "plt.xticks([r + barWidth*2 for r in range(len(paac))], ['RF', 'XGB', 'CAT', 'LGBM', 'DT', 'ETC', 'SPPIPred'], rotation=270, fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 13)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('A', weight='bold',  fontsize=18, y = 0.83, x=-0.19)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,1])\n",
        "\n",
        "paac=[94.20,94.89,95.16,95.09,92.87,90.81,95.37]\n",
        "ctdc=[95.03,94.61,95.16,94.92,88.13,92.63,95.20]\n",
        "dpc=[93.79,95.20,95.27,95.47,94.85,91.84,95.23]\n",
        "w2v=[96.33,97.18,96.77,97.25,95.74,97.29,96.81]\n",
        "ftx=[99.62,99.86,99.69,99.72,99.00,97.97,99.89]\n",
        "\n",
        "\n",
        "br1 = np.arange(len(paac))\n",
        "br2 = [x + barWidth for x in br1]\n",
        "br3 = [x + barWidth for x in br2]\n",
        "br4 = [x + barWidth for x in br3]\n",
        "br5 = [x + barWidth for x in br4]\n",
        "\n",
        "plt.bar(br1, paac,  width = barWidth, edgecolor ='black', label='PAAC')\n",
        "plt.bar(br2, ctdc,  width = barWidth, edgecolor ='black', label='CTDC')\n",
        "plt.bar(br3, dpc,  width = barWidth, edgecolor ='black', label='DPC')\n",
        "plt.bar(br4, w2v,  width = barWidth, edgecolor ='black', label='Word2Vec')\n",
        "plt.bar(br5, ftx,  width = barWidth, edgecolor ='black', label='FastText')\n",
        "\n",
        "plt.xticks([r + barWidth*2 for r in range(len(paac))], ['RF', 'XGB', 'CAT', 'LGBM', 'DT', 'ETC', 'SPPIPred'], rotation=270, fontweight ='bold')\n",
        "plt.ylabel('Accuracy', fontweight ='bold', fontsize = 13)\n",
        "plt.yticks(fontweight = 'bold', fontsize = 10)\n",
        "plt.title('B', weight='bold',  fontsize=18, y = 0.83, x=-0.19)\n",
        "plt.legend(title='Feature Extractor',title_fontsize=13,ncol=3,bbox_to_anchor=(0.5,-0.65), fontsize=11, frameon=False)\n",
        "\n",
        "plt.savefig('Perfromance Comparision of all the extractor.png', dpi=800)\n",
        "plt.savefig('Perfromance Comparision of all the extractor.pdf', dpi=800)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EOrPagjfjI03"
      },
      "source": [
        "# **ROC Curve**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qMuOOAbYjMWp"
      },
      "outputs": [],
      "source": [
        "df1 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/PAAC/proteinA.csv')\n",
        "df2 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/PAAC/protein_a.csv')\n",
        "df3 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/CTDC/proteinA.csv')\n",
        "df4 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/CTDC/protein_a.csv')\n",
        "df5 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/DPC/proteinA.csv')\n",
        "df6 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/DPC/protein_a.csv')\n",
        "df7 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/Word2Vec/proteinA.csv')\n",
        "df8 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/Word2Vec/protein_a.csv')\n",
        "df9 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/FastText/proteinA.csv')\n",
        "df10 = pd.read_csv('/content/drive/MyDrive/PPI Datasets/FastText/protein_a.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vmZxbBvEkklv"
      },
      "outputs": [],
      "source": [
        "columns = df1.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X1 = df1[columns]\n",
        "Y1 = df1[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EirjC17Xk0S7"
      },
      "outputs": [],
      "source": [
        "columns = df2.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X2 = df2[columns]\n",
        "Y2 = df2[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Wnl86Kw3k7IO"
      },
      "outputs": [],
      "source": [
        "columns = df3.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X3 = df3[columns]\n",
        "Y3 = df3[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7C85ecj2lBvV"
      },
      "outputs": [],
      "source": [
        "columns = df4.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X4 = df4[columns]\n",
        "Y4 = df4[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ce7T3lNrlKcJ"
      },
      "outputs": [],
      "source": [
        "columns = df5.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X5 = df5[columns]\n",
        "Y5 = df5[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-KyvKwztlV2o"
      },
      "outputs": [],
      "source": [
        "columns = df6.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X6 = df6[columns]\n",
        "Y6 = df6[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NktcmuMwlb6z"
      },
      "outputs": [],
      "source": [
        "columns = df7.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X7 = df7[columns]\n",
        "Y7 = df7[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dKfXdamdlhoZ"
      },
      "outputs": [],
      "source": [
        "columns = df8.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X8 = df8[columns]\n",
        "Y8 = df8[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BRLSv5GHlnPl"
      },
      "outputs": [],
      "source": [
        "columns = df9.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X9 = df9[columns]\n",
        "Y9 = df9[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_HksIydKltRT"
      },
      "outputs": [],
      "source": [
        "columns = df10.columns.tolist()\n",
        "# Filter the columns to remove data we do not want\n",
        "columns = [c for c in columns if c not in [\"Target\"]]\n",
        "# Store the variable we are predicting\n",
        "target = \"Target\"\n",
        "X10 = df10[columns]\n",
        "Y10 = df10[target]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pjtTlEAxmEBS"
      },
      "outputs": [],
      "source": [
        "cv = KFold(n_splits=10, random_state=1, shuffle=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qR_0hoGVl8Yr"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X1):\n",
        "    X_train1, X_test1 = X1.iloc[train_i], X1.iloc[test_i]\n",
        "    y_train1, y_test1 = Y1.iloc[train_i], Y1.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "idshgu2pmPvD"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X2):\n",
        "    X_train2, X_test2 = X2.iloc[train_i], X2.iloc[test_i]\n",
        "    y_train2, y_test2 = Y2.iloc[train_i], Y2.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "YG3hscQImZQX"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X3):\n",
        "    X_train3, X_test3 = X3.iloc[train_i], X3.iloc[test_i]\n",
        "    y_train3, y_test3 = Y3.iloc[train_i], Y3.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Yu-2jdZpmiAS"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X4):\n",
        "    X_train4, X_test4 = X4.iloc[train_i], X4.iloc[test_i]\n",
        "    y_train4, y_test4 = Y4.iloc[train_i], Y4.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j8qOGH1Ymu_k"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X5):\n",
        "    X_train5, X_test5 = X5.iloc[train_i], X5.iloc[test_i]\n",
        "    y_train5, y_test5 = Y5.iloc[train_i], Y5.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-e_3iiqjm3sd"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X6):\n",
        "    X_train6, X_test6 = X6.iloc[train_i], X6.iloc[test_i]\n",
        "    y_train6, y_test6 = Y6.iloc[train_i], Y6.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "D1RpLe-5nAxn"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X7):\n",
        "    X_train7, X_test7 = X7.iloc[train_i], X7.iloc[test_i]\n",
        "    y_train7, y_test7 = Y7.iloc[train_i], Y7.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dgM4XUM4nKOq"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X8):\n",
        "    X_train8, X_test8 = X8.iloc[train_i], X8.iloc[test_i]\n",
        "    y_train8, y_test8 = Y8.iloc[train_i], Y8.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SMxJG3-VnUIy"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X9):\n",
        "    X_train9, X_test9 = X9.iloc[train_i], X9.iloc[test_i]\n",
        "    y_train9, y_test9 = Y9.iloc[train_i], Y9.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vN7NmgeKndCu"
      },
      "outputs": [],
      "source": [
        "for train_i, test_i in cv.split(X10):\n",
        "    X_train10, X_test10 = X10.iloc[train_i], X10.iloc[test_i]\n",
        "    y_train10, y_test10 = Y10.iloc[train_i], Y10.iloc[test_i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1lb3rsA0n5nX"
      },
      "outputs": [],
      "source": [
        "rfc = RandomForestClassifier(n_estimators = 450, max_depth = 9)\n",
        "xgb = XGBClassifier(n_estimators = 200,max_depth = 3, base_score = 0.1, use_label_encoder = False, eval_metric = 'mlogloss', learning_rate = 0.1)\n",
        "cat = CatBoostClassifier(depth= 5, iterations = 45, learning_rate = 0.77)\n",
        "lgb = LGBMClassifier(learning_rate = 0.09,max_depth = 5,random_state = 75)\n",
        "dt = DecisionTreeClassifier(max_depth = 9)\n",
        "etc = ExtraTreesClassifier(n_estimators = 400, max_depth = 9)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "P-vyDnYaqjoF"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import auc, roc_curve"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "H-VoVJ3Sqsoi",
        "outputId": "304df75a-b85a-414c-8297-2112eb975415"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0:\tlearn: 0.6196321\ttotal: 74.4ms\tremaining: 3.27s\n",
            "1:\tlearn: 0.5672998\ttotal: 97.5ms\tremaining: 2.1s\n",
            "2:\tlearn: 0.5292381\ttotal: 106ms\tremaining: 1.48s\n",
            "3:\tlearn: 0.4804152\ttotal: 114ms\tremaining: 1.17s\n",
            "4:\tlearn: 0.4517691\ttotal: 122ms\tremaining: 977ms\n",
            "5:\tlearn: 0.4109402\ttotal: 131ms\tremaining: 851ms\n",
            "6:\tlearn: 0.3920548\ttotal: 139ms\tremaining: 752ms\n",
            "7:\tlearn: 0.3742534\ttotal: 146ms\tremaining: 677ms\n",
            "8:\tlearn: 0.3525987\ttotal: 154ms\tremaining: 617ms\n",
            "9:\tlearn: 0.3328458\ttotal: 163ms\tremaining: 572ms\n",
            "10:\tlearn: 0.3204836\ttotal: 172ms\tremaining: 532ms\n",
            "11:\tlearn: 0.2985990\ttotal: 180ms\tremaining: 495ms\n",
            "12:\tlearn: 0.2777155\ttotal: 189ms\tremaining: 465ms\n",
            "13:\tlearn: 0.2557452\ttotal: 197ms\tremaining: 435ms\n",
            "14:\tlearn: 0.2412034\ttotal: 210ms\tremaining: 421ms\n",
            "15:\tlearn: 0.2276148\ttotal: 238ms\tremaining: 431ms\n",
            "16:\tlearn: 0.2159384\ttotal: 248ms\tremaining: 408ms\n",
            "17:\tlearn: 0.2026728\ttotal: 257ms\tremaining: 386ms\n",
            "18:\tlearn: 0.1888662\ttotal: 276ms\tremaining: 378ms\n",
            "19:\tlearn: 0.1765994\ttotal: 285ms\tremaining: 356ms\n",
            "20:\tlearn: 0.1694523\ttotal: 293ms\tremaining: 335ms\n",
            "21:\tlearn: 0.1608854\ttotal: 300ms\tremaining: 314ms\n",
            "22:\tlearn: 0.1550396\ttotal: 309ms\tremaining: 296ms\n",
            "23:\tlearn: 0.1482094\ttotal: 317ms\tremaining: 277ms\n",
            "24:\tlearn: 0.1433892\ttotal: 325ms\tremaining: 260ms\n",
            "25:\tlearn: 0.1373860\ttotal: 333ms\tremaining: 244ms\n",
            "26:\tlearn: 0.1334052\ttotal: 349ms\tremaining: 233ms\n",
            "27:\tlearn: 0.1273567\ttotal: 370ms\tremaining: 225ms\n",
            "28:\tlearn: 0.1229039\ttotal: 388ms\tremaining: 214ms\n",
            "29:\tlearn: 0.1185493\ttotal: 409ms\tremaining: 205ms\n",
            "30:\tlearn: 0.1154293\ttotal: 432ms\tremaining: 195ms\n",
            "31:\tlearn: 0.1119011\ttotal: 449ms\tremaining: 183ms\n",
            "32:\tlearn: 0.1106922\ttotal: 475ms\tremaining: 173ms\n",
            "33:\tlearn: 0.1075123\ttotal: 503ms\tremaining: 163ms\n",
            "34:\tlearn: 0.1056880\ttotal: 510ms\tremaining: 146ms\n",
            "35:\tlearn: 0.1034245\ttotal: 525ms\tremaining: 131ms\n",
            "36:\tlearn: 0.0999059\ttotal: 535ms\tremaining: 116ms\n",
            "37:\tlearn: 0.0971207\ttotal: 544ms\tremaining: 100ms\n",
            "38:\tlearn: 0.0950543\ttotal: 552ms\tremaining: 84.9ms\n",
            "39:\tlearn: 0.0925387\ttotal: 560ms\tremaining: 70ms\n",
            "40:\tlearn: 0.0906189\ttotal: 568ms\tremaining: 55.4ms\n",
            "41:\tlearn: 0.0882737\ttotal: 576ms\tremaining: 41.1ms\n",
            "42:\tlearn: 0.0873102\ttotal: 584ms\tremaining: 27.2ms\n",
            "43:\tlearn: 0.0848267\ttotal: 592ms\tremaining: 13.5ms\n",
            "44:\tlearn: 0.0834754\ttotal: 600ms\tremaining: 0us\n",
            "0:\tlearn: 0.6196321\ttotal: 29.8ms\tremaining: 1.31s\n",
            "1:\tlearn: 0.5672998\ttotal: 53.5ms\tremaining: 1.15s\n",
            "2:\tlearn: 0.5292381\ttotal: 85.2ms\tremaining: 1.19s\n",
            "3:\tlearn: 0.4804152\ttotal: 106ms\tremaining: 1.09s\n",
            "4:\tlearn: 0.4517691\ttotal: 137ms\tremaining: 1.09s\n",
            "5:\tlearn: 0.4109402\ttotal: 161ms\tremaining: 1.04s\n",
            "6:\tlearn: 0.3920548\ttotal: 188ms\tremaining: 1.02s\n",
            "7:\tlearn: 0.3742534\ttotal: 211ms\tremaining: 977ms\n",
            "8:\tlearn: 0.3525987\ttotal: 236ms\tremaining: 944ms\n",
            "9:\tlearn: 0.3328458\ttotal: 270ms\tremaining: 944ms\n",
            "10:\tlearn: 0.3204836\ttotal: 298ms\tremaining: 921ms\n",
            "11:\tlearn: 0.2985990\ttotal: 321ms\tremaining: 883ms\n",
            "12:\tlearn: 0.2777155\ttotal: 348ms\tremaining: 857ms\n",
            "13:\tlearn: 0.2557452\ttotal: 378ms\tremaining: 838ms\n",
            "14:\tlearn: 0.2412034\ttotal: 400ms\tremaining: 799ms\n",
            "15:\tlearn: 0.2276148\ttotal: 435ms\tremaining: 788ms\n",
            "16:\tlearn: 0.2159384\ttotal: 463ms\tremaining: 762ms\n",
            "17:\tlearn: 0.2026728\ttotal: 485ms\tremaining: 728ms\n",
            "18:\tlearn: 0.1888662\ttotal: 513ms\tremaining: 702ms\n",
            "19:\tlearn: 0.1765994\ttotal: 548ms\tremaining: 685ms\n",
            "20:\tlearn: 0.1694523\ttotal: 575ms\tremaining: 657ms\n",
            "21:\tlearn: 0.1608854\ttotal: 611ms\tremaining: 638ms\n",
            "22:\tlearn: 0.1550396\ttotal: 645ms\tremaining: 617ms\n",
            "23:\tlearn: 0.1482094\ttotal: 676ms\tremaining: 591ms\n",
            "24:\tlearn: 0.1433892\ttotal: 701ms\tremaining: 561ms\n",
            "25:\tlearn: 0.1373860\ttotal: 729ms\tremaining: 532ms\n",
            "26:\tlearn: 0.1334052\ttotal: 748ms\tremaining: 499ms\n",
            "27:\tlearn: 0.1273567\ttotal: 770ms\tremaining: 468ms\n",
            "28:\tlearn: 0.1229039\ttotal: 799ms\tremaining: 441ms\n",
            "29:\tlearn: 0.1185493\ttotal: 818ms\tremaining: 409ms\n",
            "30:\tlearn: 0.1154293\ttotal: 843ms\tremaining: 381ms\n",
            "31:\tlearn: 0.1119011\ttotal: 862ms\tremaining: 350ms\n",
            "32:\tlearn: 0.1106922\ttotal: 882ms\tremaining: 321ms\n",
            "33:\tlearn: 0.1075123\ttotal: 911ms\tremaining: 295ms\n",
            "34:\tlearn: 0.1056880\ttotal: 946ms\tremaining: 270ms\n",
            "35:\tlearn: 0.1034245\ttotal: 974ms\tremaining: 244ms\n",
            "36:\tlearn: 0.0999059\ttotal: 1s\tremaining: 217ms\n",
            "37:\tlearn: 0.0971207\ttotal: 1.03s\tremaining: 189ms\n",
            "38:\tlearn: 0.0950543\ttotal: 1.06s\tremaining: 163ms\n",
            "39:\tlearn: 0.0925387\ttotal: 1.09s\tremaining: 137ms\n",
            "40:\tlearn: 0.0906189\ttotal: 1.11s\tremaining: 109ms\n",
            "41:\tlearn: 0.0882737\ttotal: 1.13s\tremaining: 80.8ms\n",
            "42:\tlearn: 0.0873102\ttotal: 1.15s\tremaining: 53.5ms\n",
            "43:\tlearn: 0.0848267\ttotal: 1.17s\tremaining: 26.7ms\n",
            "44:\tlearn: 0.0834754\ttotal: 1.21s\tremaining: 0us\n",
            "0:\tlearn: 0.6220416\ttotal: 9.1ms\tremaining: 400ms\n",
            "1:\tlearn: 0.5588364\ttotal: 26.9ms\tremaining: 578ms\n",
            "2:\tlearn: 0.5132876\ttotal: 48.2ms\tremaining: 675ms\n",
            "3:\tlearn: 0.4509963\ttotal: 60.8ms\tremaining: 623ms\n",
            "4:\tlearn: 0.4170913\ttotal: 76.6ms\tremaining: 613ms\n",
            "5:\tlearn: 0.3980060\ttotal: 89.2ms\tremaining: 580ms\n",
            "6:\tlearn: 0.3737800\ttotal: 107ms\tremaining: 583ms\n",
            "7:\tlearn: 0.3503156\ttotal: 122ms\tremaining: 563ms\n",
            "8:\tlearn: 0.3277073\ttotal: 140ms\tremaining: 561ms\n",
            "9:\tlearn: 0.3055890\ttotal: 155ms\tremaining: 544ms\n",
            "10:\tlearn: 0.2834263\ttotal: 174ms\tremaining: 537ms\n",
            "11:\tlearn: 0.2639013\ttotal: 189ms\tremaining: 519ms\n",
            "12:\tlearn: 0.2539868\ttotal: 205ms\tremaining: 506ms\n",
            "13:\tlearn: 0.2376882\ttotal: 220ms\tremaining: 487ms\n",
            "14:\tlearn: 0.2228504\ttotal: 236ms\tremaining: 473ms\n",
            "15:\tlearn: 0.2055607\ttotal: 252ms\tremaining: 457ms\n",
            "16:\tlearn: 0.1973612\ttotal: 267ms\tremaining: 440ms\n",
            "17:\tlearn: 0.1826078\ttotal: 284ms\tremaining: 427ms\n",
            "18:\tlearn: 0.1778054\ttotal: 305ms\tremaining: 418ms\n",
            "19:\tlearn: 0.1656832\ttotal: 323ms\tremaining: 404ms\n",
            "20:\tlearn: 0.1565962\ttotal: 344ms\tremaining: 393ms\n",
            "21:\tlearn: 0.1472601\ttotal: 358ms\tremaining: 374ms\n",
            "22:\tlearn: 0.1405968\ttotal: 372ms\tremaining: 356ms\n",
            "23:\tlearn: 0.1339466\ttotal: 390ms\tremaining: 341ms\n",
            "24:\tlearn: 0.1286305\ttotal: 411ms\tremaining: 329ms\n",
            "25:\tlearn: 0.1239578\ttotal: 424ms\tremaining: 310ms\n",
            "26:\tlearn: 0.1214649\ttotal: 440ms\tremaining: 293ms\n",
            "27:\tlearn: 0.1191324\ttotal: 453ms\tremaining: 275ms\n",
            "28:\tlearn: 0.1167184\ttotal: 468ms\tremaining: 258ms\n",
            "29:\tlearn: 0.1140047\ttotal: 485ms\tremaining: 243ms\n",
            "30:\tlearn: 0.1091446\ttotal: 502ms\tremaining: 227ms\n",
            "31:\tlearn: 0.1044590\ttotal: 516ms\tremaining: 210ms\n",
            "32:\tlearn: 0.1019300\ttotal: 533ms\tremaining: 194ms\n",
            "33:\tlearn: 0.0989687\ttotal: 552ms\tremaining: 178ms\n",
            "34:\tlearn: 0.0962539\ttotal: 566ms\tremaining: 162ms\n",
            "35:\tlearn: 0.0941878\ttotal: 576ms\tremaining: 144ms\n",
            "36:\tlearn: 0.0904743\ttotal: 587ms\tremaining: 127ms\n",
            "37:\tlearn: 0.0891901\ttotal: 610ms\tremaining: 112ms\n",
            "38:\tlearn: 0.0868183\ttotal: 624ms\tremaining: 96.1ms\n",
            "39:\tlearn: 0.0845600\ttotal: 642ms\tremaining: 80.2ms\n",
            "40:\tlearn: 0.0839117\ttotal: 659ms\tremaining: 64.2ms\n",
            "41:\tlearn: 0.0826308\ttotal: 675ms\tremaining: 48.2ms\n",
            "42:\tlearn: 0.0808650\ttotal: 692ms\tremaining: 32.2ms\n",
            "43:\tlearn: 0.0795333\ttotal: 707ms\tremaining: 16.1ms\n",
            "44:\tlearn: 0.0781228\ttotal: 718ms\tremaining: 0us\n",
            "0:\tlearn: 0.6212075\ttotal: 22.8ms\tremaining: 1s\n",
            "1:\tlearn: 0.5614585\ttotal: 37.7ms\tremaining: 811ms\n",
            "2:\tlearn: 0.5077869\ttotal: 47.6ms\tremaining: 667ms\n",
            "3:\tlearn: 0.4689611\ttotal: 58.1ms\tremaining: 596ms\n",
            "4:\tlearn: 0.4339503\ttotal: 67.5ms\tremaining: 540ms\n",
            "5:\tlearn: 0.4006362\ttotal: 76.2ms\tremaining: 495ms\n",
            "6:\tlearn: 0.3805022\ttotal: 83.9ms\tremaining: 455ms\n",
            "7:\tlearn: 0.3486149\ttotal: 90.8ms\tremaining: 420ms\n",
            "8:\tlearn: 0.3263994\ttotal: 103ms\tremaining: 412ms\n",
            "9:\tlearn: 0.3024884\ttotal: 118ms\tremaining: 414ms\n",
            "10:\tlearn: 0.2876404\ttotal: 136ms\tremaining: 420ms\n",
            "11:\tlearn: 0.2687606\ttotal: 154ms\tremaining: 422ms\n",
            "12:\tlearn: 0.2584285\ttotal: 169ms\tremaining: 416ms\n",
            "13:\tlearn: 0.2467522\ttotal: 185ms\tremaining: 410ms\n",
            "14:\tlearn: 0.2244041\ttotal: 201ms\tremaining: 402ms\n",
            "15:\tlearn: 0.2067482\ttotal: 226ms\tremaining: 409ms\n",
            "16:\tlearn: 0.1956891\ttotal: 242ms\tremaining: 399ms\n",
            "17:\tlearn: 0.1852084\ttotal: 257ms\tremaining: 385ms\n",
            "18:\tlearn: 0.1786846\ttotal: 271ms\tremaining: 371ms\n",
            "19:\tlearn: 0.1644835\ttotal: 288ms\tremaining: 360ms\n",
            "20:\tlearn: 0.1583193\ttotal: 305ms\tremaining: 349ms\n",
            "21:\tlearn: 0.1497825\ttotal: 322ms\tremaining: 337ms\n",
            "22:\tlearn: 0.1431995\ttotal: 340ms\tremaining: 325ms\n",
            "23:\tlearn: 0.1345924\ttotal: 355ms\tremaining: 311ms\n",
            "24:\tlearn: 0.1299074\ttotal: 375ms\tremaining: 300ms\n",
            "25:\tlearn: 0.1221178\ttotal: 389ms\tremaining: 285ms\n",
            "26:\tlearn: 0.1170618\ttotal: 406ms\tremaining: 271ms\n",
            "27:\tlearn: 0.1134466\ttotal: 429ms\tremaining: 260ms\n",
            "28:\tlearn: 0.1089920\ttotal: 445ms\tremaining: 245ms\n",
            "29:\tlearn: 0.1062832\ttotal: 463ms\tremaining: 231ms\n",
            "30:\tlearn: 0.1029222\ttotal: 481ms\tremaining: 217ms\n",
            "31:\tlearn: 0.0990410\ttotal: 499ms\tremaining: 203ms\n",
            "32:\tlearn: 0.0964577\ttotal: 515ms\tremaining: 187ms\n",
            "33:\tlearn: 0.0936458\ttotal: 532ms\tremaining: 172ms\n",
            "34:\tlearn: 0.0909729\ttotal: 550ms\tremaining: 157ms\n",
            "35:\tlearn: 0.0893644\ttotal: 566ms\tremaining: 142ms\n",
            "36:\tlearn: 0.0877519\ttotal: 584ms\tremaining: 126ms\n",
            "37:\tlearn: 0.0863971\ttotal: 601ms\tremaining: 111ms\n",
            "38:\tlearn: 0.0849146\ttotal: 618ms\tremaining: 95.1ms\n",
            "39:\tlearn: 0.0829340\ttotal: 642ms\tremaining: 80.2ms\n",
            "40:\tlearn: 0.0812297\ttotal: 663ms\tremaining: 64.7ms\n",
            "41:\tlearn: 0.0805268\ttotal: 677ms\tremaining: 48.4ms\n",
            "42:\tlearn: 0.0794792\ttotal: 691ms\tremaining: 32.1ms\n",
            "43:\tlearn: 0.0787602\ttotal: 707ms\tremaining: 16.1ms\n",
            "44:\tlearn: 0.0778665\ttotal: 722ms\tremaining: 0us\n",
            "0:\tlearn: 0.6097781\ttotal: 9.21ms\tremaining: 405ms\n",
            "1:\tlearn: 0.5593122\ttotal: 17.2ms\tremaining: 369ms\n",
            "2:\tlearn: 0.5116932\ttotal: 25.3ms\tremaining: 354ms\n",
            "3:\tlearn: 0.4802461\ttotal: 38.5ms\tremaining: 394ms\n",
            "4:\tlearn: 0.4327208\ttotal: 62ms\tremaining: 496ms\n",
            "5:\tlearn: 0.4084584\ttotal: 74.2ms\tremaining: 483ms\n",
            "6:\tlearn: 0.3777128\ttotal: 89.6ms\tremaining: 486ms\n",
            "7:\tlearn: 0.3595412\ttotal: 107ms\tremaining: 494ms\n",
            "8:\tlearn: 0.3357153\ttotal: 124ms\tremaining: 496ms\n",
            "9:\tlearn: 0.3154472\ttotal: 141ms\tremaining: 494ms\n",
            "10:\tlearn: 0.3005496\ttotal: 164ms\tremaining: 508ms\n",
            "11:\tlearn: 0.2864773\ttotal: 182ms\tremaining: 500ms\n",
            "12:\tlearn: 0.2711731\ttotal: 199ms\tremaining: 489ms\n",
            "13:\tlearn: 0.2528100\ttotal: 220ms\tremaining: 488ms\n",
            "14:\tlearn: 0.2340816\ttotal: 239ms\tremaining: 477ms\n",
            "15:\tlearn: 0.2247515\ttotal: 262ms\tremaining: 475ms\n",
            "16:\tlearn: 0.2121602\ttotal: 276ms\tremaining: 455ms\n",
            "17:\tlearn: 0.1962984\ttotal: 293ms\tremaining: 440ms\n",
            "18:\tlearn: 0.1839522\ttotal: 310ms\tremaining: 425ms\n",
            "19:\tlearn: 0.1746645\ttotal: 328ms\tremaining: 409ms\n",
            "20:\tlearn: 0.1640383\ttotal: 340ms\tremaining: 389ms\n",
            "21:\tlearn: 0.1555441\ttotal: 349ms\tremaining: 365ms\n",
            "22:\tlearn: 0.1530730\ttotal: 364ms\tremaining: 348ms\n",
            "23:\tlearn: 0.1459258\ttotal: 377ms\tremaining: 330ms\n",
            "24:\tlearn: 0.1425879\ttotal: 395ms\tremaining: 316ms\n",
            "25:\tlearn: 0.1369166\ttotal: 410ms\tremaining: 300ms\n",
            "26:\tlearn: 0.1319612\ttotal: 427ms\tremaining: 285ms\n",
            "27:\tlearn: 0.1290163\ttotal: 444ms\tremaining: 270ms\n",
            "28:\tlearn: 0.1234164\ttotal: 470ms\tremaining: 259ms\n",
            "29:\tlearn: 0.1187335\ttotal: 486ms\tremaining: 243ms\n",
            "30:\tlearn: 0.1159099\ttotal: 502ms\tremaining: 226ms\n",
            "31:\tlearn: 0.1106108\ttotal: 516ms\tremaining: 210ms\n",
            "32:\tlearn: 0.1066712\ttotal: 537ms\tremaining: 195ms\n",
            "33:\tlearn: 0.1033875\ttotal: 552ms\tremaining: 178ms\n",
            "34:\tlearn: 0.1003160\ttotal: 568ms\tremaining: 162ms\n",
            "35:\tlearn: 0.0988342\ttotal: 583ms\tremaining: 146ms\n",
            "36:\tlearn: 0.0972646\ttotal: 604ms\tremaining: 131ms\n",
            "37:\tlearn: 0.0950261\ttotal: 630ms\tremaining: 116ms\n",
            "38:\tlearn: 0.0924553\ttotal: 647ms\tremaining: 99.6ms\n",
            "39:\tlearn: 0.0899356\ttotal: 671ms\tremaining: 83.8ms\n",
            "40:\tlearn: 0.0882444\ttotal: 685ms\tremaining: 66.8ms\n",
            "41:\tlearn: 0.0858072\ttotal: 702ms\tremaining: 50.1ms\n",
            "42:\tlearn: 0.0846045\ttotal: 718ms\tremaining: 33.4ms\n",
            "43:\tlearn: 0.0832405\ttotal: 734ms\tremaining: 16.7ms\n",
            "44:\tlearn: 0.0815574\ttotal: 753ms\tremaining: 0us\n",
            "0:\tlearn: 0.6306304\ttotal: 8.81ms\tremaining: 387ms\n",
            "1:\tlearn: 0.5780757\ttotal: 17.3ms\tremaining: 372ms\n",
            "2:\tlearn: 0.5402776\ttotal: 24.7ms\tremaining: 346ms\n",
            "3:\tlearn: 0.4875923\ttotal: 31.6ms\tremaining: 324ms\n",
            "4:\tlearn: 0.4519189\ttotal: 43.5ms\tremaining: 348ms\n",
            "5:\tlearn: 0.4132744\ttotal: 50.2ms\tremaining: 326ms\n",
            "6:\tlearn: 0.3828456\ttotal: 56.9ms\tremaining: 309ms\n",
            "7:\tlearn: 0.3512531\ttotal: 63.4ms\tremaining: 293ms\n",
            "8:\tlearn: 0.3341271\ttotal: 70.2ms\tremaining: 281ms\n",
            "9:\tlearn: 0.3109824\ttotal: 79ms\tremaining: 276ms\n",
            "10:\tlearn: 0.2879337\ttotal: 89.1ms\tremaining: 276ms\n",
            "11:\tlearn: 0.2706298\ttotal: 97.7ms\tremaining: 269ms\n",
            "12:\tlearn: 0.2462992\ttotal: 106ms\tremaining: 260ms\n",
            "13:\tlearn: 0.2272014\ttotal: 112ms\tremaining: 249ms\n",
            "14:\tlearn: 0.2123770\ttotal: 119ms\tremaining: 238ms\n",
            "15:\tlearn: 0.2014486\ttotal: 126ms\tremaining: 228ms\n",
            "16:\tlearn: 0.1855067\ttotal: 133ms\tremaining: 220ms\n",
            "17:\tlearn: 0.1747272\ttotal: 140ms\tremaining: 211ms\n",
            "18:\tlearn: 0.1680246\ttotal: 150ms\tremaining: 206ms\n",
            "19:\tlearn: 0.1626390\ttotal: 164ms\tremaining: 205ms\n",
            "20:\tlearn: 0.1585761\ttotal: 181ms\tremaining: 207ms\n",
            "21:\tlearn: 0.1507411\ttotal: 198ms\tremaining: 207ms\n",
            "22:\tlearn: 0.1462681\ttotal: 215ms\tremaining: 206ms\n",
            "23:\tlearn: 0.1409336\ttotal: 246ms\tremaining: 215ms\n",
            "24:\tlearn: 0.1355349\ttotal: 265ms\tremaining: 212ms\n",
            "25:\tlearn: 0.1289894\ttotal: 284ms\tremaining: 207ms\n",
            "26:\tlearn: 0.1247182\ttotal: 292ms\tremaining: 195ms\n",
            "27:\tlearn: 0.1198195\ttotal: 297ms\tremaining: 180ms\n",
            "28:\tlearn: 0.1155475\ttotal: 303ms\tremaining: 167ms\n",
            "29:\tlearn: 0.1108882\ttotal: 308ms\tremaining: 154ms\n",
            "30:\tlearn: 0.1076565\ttotal: 314ms\tremaining: 142ms\n",
            "31:\tlearn: 0.1048691\ttotal: 319ms\tremaining: 130ms\n",
            "32:\tlearn: 0.1018946\ttotal: 324ms\tremaining: 118ms\n",
            "33:\tlearn: 0.0975685\ttotal: 330ms\tremaining: 107ms\n",
            "34:\tlearn: 0.0954878\ttotal: 336ms\tremaining: 96ms\n",
            "35:\tlearn: 0.0933867\ttotal: 342ms\tremaining: 85.4ms\n",
            "36:\tlearn: 0.0911773\ttotal: 347ms\tremaining: 75.1ms\n",
            "37:\tlearn: 0.0889778\ttotal: 353ms\tremaining: 65ms\n",
            "38:\tlearn: 0.0877767\ttotal: 358ms\tremaining: 55.1ms\n",
            "39:\tlearn: 0.0862467\ttotal: 364ms\tremaining: 45.5ms\n",
            "40:\tlearn: 0.0847468\ttotal: 370ms\tremaining: 36.1ms\n",
            "41:\tlearn: 0.0840283\ttotal: 376ms\tremaining: 26.8ms\n",
            "42:\tlearn: 0.0821229\ttotal: 381ms\tremaining: 17.7ms\n",
            "43:\tlearn: 0.0807873\ttotal: 387ms\tremaining: 8.8ms\n",
            "44:\tlearn: 0.0795194\ttotal: 393ms\tremaining: 0us\n",
            "0:\tlearn: 0.6100498\ttotal: 6.58ms\tremaining: 289ms\n",
            "1:\tlearn: 0.5488698\ttotal: 12.6ms\tremaining: 270ms\n",
            "2:\tlearn: 0.4825083\ttotal: 18.2ms\tremaining: 254ms\n",
            "3:\tlearn: 0.4526541\ttotal: 23.8ms\tremaining: 244ms\n",
            "4:\tlearn: 0.4097955\ttotal: 29.4ms\tremaining: 235ms\n",
            "5:\tlearn: 0.3790569\ttotal: 35.1ms\tremaining: 228ms\n",
            "6:\tlearn: 0.3445371\ttotal: 40.8ms\tremaining: 222ms\n",
            "7:\tlearn: 0.3330169\ttotal: 46.2ms\tremaining: 214ms\n",
            "8:\tlearn: 0.3150754\ttotal: 51.8ms\tremaining: 207ms\n",
            "9:\tlearn: 0.2995438\ttotal: 57.5ms\tremaining: 201ms\n",
            "10:\tlearn: 0.2839151\ttotal: 63.4ms\tremaining: 196ms\n",
            "11:\tlearn: 0.2630444\ttotal: 69.5ms\tremaining: 191ms\n",
            "12:\tlearn: 0.2567728\ttotal: 75.1ms\tremaining: 185ms\n",
            "13:\tlearn: 0.2380738\ttotal: 81.2ms\tremaining: 180ms\n",
            "14:\tlearn: 0.2237642\ttotal: 87ms\tremaining: 174ms\n",
            "15:\tlearn: 0.2087517\ttotal: 93.3ms\tremaining: 169ms\n",
            "16:\tlearn: 0.2014058\ttotal: 98.9ms\tremaining: 163ms\n",
            "17:\tlearn: 0.1868639\ttotal: 105ms\tremaining: 157ms\n",
            "18:\tlearn: 0.1785220\ttotal: 110ms\tremaining: 151ms\n",
            "19:\tlearn: 0.1659774\ttotal: 116ms\tremaining: 145ms\n",
            "20:\tlearn: 0.1580435\ttotal: 122ms\tremaining: 139ms\n",
            "21:\tlearn: 0.1501154\ttotal: 134ms\tremaining: 140ms\n",
            "22:\tlearn: 0.1407859\ttotal: 151ms\tremaining: 144ms\n",
            "23:\tlearn: 0.1366755\ttotal: 158ms\tremaining: 138ms\n",
            "24:\tlearn: 0.1323218\ttotal: 167ms\tremaining: 134ms\n",
            "25:\tlearn: 0.1247537\ttotal: 174ms\tremaining: 127ms\n",
            "26:\tlearn: 0.1179986\ttotal: 183ms\tremaining: 122ms\n",
            "27:\tlearn: 0.1143504\ttotal: 191ms\tremaining: 116ms\n",
            "28:\tlearn: 0.1114258\ttotal: 198ms\tremaining: 109ms\n",
            "29:\tlearn: 0.1087490\ttotal: 204ms\tremaining: 102ms\n",
            "30:\tlearn: 0.1053888\ttotal: 210ms\tremaining: 94.8ms\n",
            "31:\tlearn: 0.1039152\ttotal: 216ms\tremaining: 87.6ms\n",
            "32:\tlearn: 0.1005242\ttotal: 221ms\tremaining: 80.5ms\n",
            "33:\tlearn: 0.0970851\ttotal: 227ms\tremaining: 73.5ms\n",
            "34:\tlearn: 0.0944590\ttotal: 233ms\tremaining: 66.6ms\n",
            "35:\tlearn: 0.0918572\ttotal: 239ms\tremaining: 59.8ms\n",
            "36:\tlearn: 0.0898337\ttotal: 245ms\tremaining: 52.9ms\n",
            "37:\tlearn: 0.0890131\ttotal: 250ms\tremaining: 46.1ms\n",
            "38:\tlearn: 0.0868833\ttotal: 256ms\tremaining: 39.5ms\n",
            "39:\tlearn: 0.0854043\ttotal: 262ms\tremaining: 32.8ms\n",
            "40:\tlearn: 0.0843608\ttotal: 269ms\tremaining: 26.2ms\n",
            "41:\tlearn: 0.0832139\ttotal: 274ms\tremaining: 19.6ms\n",
            "42:\tlearn: 0.0812875\ttotal: 280ms\tremaining: 13ms\n",
            "43:\tlearn: 0.0803777\ttotal: 286ms\tremaining: 6.49ms\n",
            "44:\tlearn: 0.0795858\ttotal: 292ms\tremaining: 0us\n",
            "0:\tlearn: 0.5192830\ttotal: 4.54ms\tremaining: 200ms\n",
            "1:\tlearn: 0.4478783\ttotal: 9.25ms\tremaining: 199ms\n",
            "2:\tlearn: 0.3880296\ttotal: 13.7ms\tremaining: 192ms\n",
            "3:\tlearn: 0.3377245\ttotal: 17.9ms\tremaining: 183ms\n",
            "4:\tlearn: 0.3002247\ttotal: 22.2ms\tremaining: 177ms\n",
            "5:\tlearn: 0.2640572\ttotal: 26.2ms\tremaining: 170ms\n",
            "6:\tlearn: 0.2281396\ttotal: 30.5ms\tremaining: 165ms\n",
            "7:\tlearn: 0.2158801\ttotal: 34.7ms\tremaining: 160ms\n",
            "8:\tlearn: 0.1865832\ttotal: 38.9ms\tremaining: 155ms\n",
            "9:\tlearn: 0.1686497\ttotal: 43.3ms\tremaining: 152ms\n",
            "10:\tlearn: 0.1565213\ttotal: 48.3ms\tremaining: 149ms\n",
            "11:\tlearn: 0.1501541\ttotal: 52.5ms\tremaining: 144ms\n",
            "12:\tlearn: 0.1362958\ttotal: 56.9ms\tremaining: 140ms\n",
            "13:\tlearn: 0.1276203\ttotal: 61.1ms\tremaining: 135ms\n",
            "14:\tlearn: 0.1216495\ttotal: 65.6ms\tremaining: 131ms\n",
            "15:\tlearn: 0.1164084\ttotal: 69.6ms\tremaining: 126ms\n",
            "16:\tlearn: 0.1100555\ttotal: 74ms\tremaining: 122ms\n",
            "17:\tlearn: 0.1059904\ttotal: 78ms\tremaining: 117ms\n",
            "18:\tlearn: 0.1031803\ttotal: 82.2ms\tremaining: 112ms\n",
            "19:\tlearn: 0.0998609\ttotal: 86.4ms\tremaining: 108ms\n",
            "20:\tlearn: 0.0973039\ttotal: 90.4ms\tremaining: 103ms\n",
            "21:\tlearn: 0.0956196\ttotal: 94.7ms\tremaining: 99ms\n",
            "22:\tlearn: 0.0939272\ttotal: 99ms\tremaining: 94.7ms\n",
            "23:\tlearn: 0.0921300\ttotal: 103ms\tremaining: 90.2ms\n",
            "24:\tlearn: 0.0902434\ttotal: 108ms\tremaining: 86.3ms\n",
            "25:\tlearn: 0.0884887\ttotal: 112ms\tremaining: 82ms\n",
            "26:\tlearn: 0.0870966\ttotal: 117ms\tremaining: 77.7ms\n",
            "27:\tlearn: 0.0859031\ttotal: 121ms\tremaining: 73.3ms\n",
            "28:\tlearn: 0.0854834\ttotal: 125ms\tremaining: 69ms\n",
            "29:\tlearn: 0.0844526\ttotal: 129ms\tremaining: 64.6ms\n",
            "30:\tlearn: 0.0836450\ttotal: 133ms\tremaining: 60.3ms\n",
            "31:\tlearn: 0.0830419\ttotal: 138ms\tremaining: 56.2ms\n",
            "32:\tlearn: 0.0827425\ttotal: 145ms\tremaining: 52.7ms\n",
            "33:\tlearn: 0.0824052\ttotal: 149ms\tremaining: 48.2ms\n",
            "34:\tlearn: 0.0819516\ttotal: 153ms\tremaining: 43.7ms\n",
            "35:\tlearn: 0.0815446\ttotal: 157ms\tremaining: 39.3ms\n",
            "36:\tlearn: 0.0811979\ttotal: 161ms\tremaining: 34.9ms\n",
            "37:\tlearn: 0.0808187\ttotal: 166ms\tremaining: 30.5ms\n",
            "38:\tlearn: 0.0806195\ttotal: 170ms\tremaining: 26.1ms\n",
            "39:\tlearn: 0.0802529\ttotal: 174ms\tremaining: 21.7ms\n",
            "40:\tlearn: 0.0799305\ttotal: 178ms\tremaining: 17.4ms\n",
            "41:\tlearn: 0.0795757\ttotal: 183ms\tremaining: 13ms\n",
            "42:\tlearn: 0.0793920\ttotal: 187ms\tremaining: 8.7ms\n",
            "43:\tlearn: 0.0790852\ttotal: 191ms\tremaining: 4.35ms\n",
            "44:\tlearn: 0.0789355\ttotal: 195ms\tremaining: 0us\n",
            "0:\tlearn: 0.5192830\ttotal: 4.32ms\tremaining: 190ms\n",
            "1:\tlearn: 0.4478783\ttotal: 8.28ms\tremaining: 178ms\n",
            "2:\tlearn: 0.3880296\ttotal: 12.4ms\tremaining: 174ms\n",
            "3:\tlearn: 0.3377245\ttotal: 16.6ms\tremaining: 170ms\n",
            "4:\tlearn: 0.3002247\ttotal: 20.9ms\tremaining: 167ms\n",
            "5:\tlearn: 0.2640572\ttotal: 25.2ms\tremaining: 164ms\n",
            "6:\tlearn: 0.2281396\ttotal: 29.4ms\tremaining: 160ms\n",
            "7:\tlearn: 0.2158801\ttotal: 33.5ms\tremaining: 155ms\n",
            "8:\tlearn: 0.1865832\ttotal: 38.2ms\tremaining: 153ms\n",
            "9:\tlearn: 0.1686497\ttotal: 42.9ms\tremaining: 150ms\n",
            "10:\tlearn: 0.1565213\ttotal: 47.2ms\tremaining: 146ms\n",
            "11:\tlearn: 0.1501541\ttotal: 51.6ms\tremaining: 142ms\n",
            "12:\tlearn: 0.1362958\ttotal: 55.8ms\tremaining: 137ms\n",
            "13:\tlearn: 0.1276203\ttotal: 60.3ms\tremaining: 133ms\n",
            "14:\tlearn: 0.1216495\ttotal: 64.6ms\tremaining: 129ms\n",
            "15:\tlearn: 0.1164084\ttotal: 68.9ms\tremaining: 125ms\n",
            "16:\tlearn: 0.1100555\ttotal: 73.3ms\tremaining: 121ms\n",
            "17:\tlearn: 0.1059904\ttotal: 77.6ms\tremaining: 116ms\n",
            "18:\tlearn: 0.1031803\ttotal: 81.5ms\tremaining: 112ms\n",
            "19:\tlearn: 0.0998609\ttotal: 85.8ms\tremaining: 107ms\n",
            "20:\tlearn: 0.0973039\ttotal: 89.8ms\tremaining: 103ms\n",
            "21:\tlearn: 0.0956196\ttotal: 94.4ms\tremaining: 98.7ms\n",
            "22:\tlearn: 0.0939272\ttotal: 99.2ms\tremaining: 94.9ms\n",
            "23:\tlearn: 0.0921300\ttotal: 105ms\tremaining: 92.3ms\n",
            "24:\tlearn: 0.0902434\ttotal: 112ms\tremaining: 89.8ms\n",
            "25:\tlearn: 0.0884887\ttotal: 118ms\tremaining: 86ms\n",
            "26:\tlearn: 0.0870966\ttotal: 122ms\tremaining: 81.3ms\n",
            "27:\tlearn: 0.0859031\ttotal: 126ms\tremaining: 76.6ms\n",
            "28:\tlearn: 0.0854834\ttotal: 131ms\tremaining: 72ms\n",
            "29:\tlearn: 0.0844526\ttotal: 135ms\tremaining: 67.5ms\n",
            "30:\tlearn: 0.0836450\ttotal: 139ms\tremaining: 62.9ms\n",
            "31:\tlearn: 0.0830419\ttotal: 144ms\tremaining: 58.3ms\n",
            "32:\tlearn: 0.0827425\ttotal: 148ms\tremaining: 53.8ms\n",
            "33:\tlearn: 0.0824052\ttotal: 152ms\tremaining: 49.2ms\n",
            "34:\tlearn: 0.0819516\ttotal: 156ms\tremaining: 44.7ms\n",
            "35:\tlearn: 0.0815446\ttotal: 160ms\tremaining: 40.1ms\n",
            "36:\tlearn: 0.0811979\ttotal: 164ms\tremaining: 35.6ms\n",
            "37:\tlearn: 0.0808187\ttotal: 169ms\tremaining: 31.1ms\n",
            "38:\tlearn: 0.0806195\ttotal: 173ms\tremaining: 26.7ms\n",
            "39:\tlearn: 0.0802529\ttotal: 178ms\tremaining: 22.2ms\n",
            "40:\tlearn: 0.0799305\ttotal: 182ms\tremaining: 17.8ms\n",
            "41:\tlearn: 0.0795757\ttotal: 186ms\tremaining: 13.3ms\n",
            "42:\tlearn: 0.0793920\ttotal: 191ms\tremaining: 8.87ms\n",
            "43:\tlearn: 0.0790852\ttotal: 201ms\tremaining: 4.57ms\n",
            "44:\tlearn: 0.0789355\ttotal: 207ms\tremaining: 0us\n",
            "0:\tlearn: 0.5362328\ttotal: 4.54ms\tremaining: 200ms\n",
            "1:\tlearn: 0.4458927\ttotal: 9.37ms\tremaining: 202ms\n",
            "2:\tlearn: 0.3783971\ttotal: 13.5ms\tremaining: 189ms\n",
            "3:\tlearn: 0.3365796\ttotal: 17.8ms\tremaining: 182ms\n",
            "4:\tlearn: 0.3064607\ttotal: 22.2ms\tremaining: 177ms\n",
            "5:\tlearn: 0.2777659\ttotal: 26.4ms\tremaining: 172ms\n",
            "6:\tlearn: 0.2413175\ttotal: 30.7ms\tremaining: 167ms\n",
            "7:\tlearn: 0.2081889\ttotal: 34.9ms\tremaining: 161ms\n",
            "8:\tlearn: 0.1936006\ttotal: 39ms\tremaining: 156ms\n",
            "9:\tlearn: 0.1765207\ttotal: 43ms\tremaining: 151ms\n",
            "10:\tlearn: 0.1644853\ttotal: 47.4ms\tremaining: 146ms\n",
            "11:\tlearn: 0.1518550\ttotal: 51.6ms\tremaining: 142ms\n",
            "12:\tlearn: 0.1367254\ttotal: 56ms\tremaining: 138ms\n",
            "13:\tlearn: 0.1291332\ttotal: 59.9ms\tremaining: 133ms\n",
            "14:\tlearn: 0.1225964\ttotal: 64.5ms\tremaining: 129ms\n",
            "15:\tlearn: 0.1167816\ttotal: 68.7ms\tremaining: 124ms\n",
            "16:\tlearn: 0.1107485\ttotal: 73ms\tremaining: 120ms\n",
            "17:\tlearn: 0.1063269\ttotal: 77.4ms\tremaining: 116ms\n",
            "18:\tlearn: 0.1020140\ttotal: 83.5ms\tremaining: 114ms\n",
            "19:\tlearn: 0.0995930\ttotal: 87.5ms\tremaining: 109ms\n",
            "20:\tlearn: 0.0976320\ttotal: 91.5ms\tremaining: 105ms\n",
            "21:\tlearn: 0.0953513\ttotal: 95.6ms\tremaining: 99.9ms\n",
            "22:\tlearn: 0.0930954\ttotal: 100ms\tremaining: 95.7ms\n",
            "23:\tlearn: 0.0911834\ttotal: 104ms\tremaining: 91.2ms\n",
            "24:\tlearn: 0.0892287\ttotal: 109ms\tremaining: 86.8ms\n",
            "25:\tlearn: 0.0878676\ttotal: 113ms\tremaining: 82.4ms\n",
            "26:\tlearn: 0.0859209\ttotal: 117ms\tremaining: 78.2ms\n",
            "27:\tlearn: 0.0844042\ttotal: 122ms\tremaining: 73.8ms\n",
            "28:\tlearn: 0.0832994\ttotal: 126ms\tremaining: 69.5ms\n",
            "29:\tlearn: 0.0824564\ttotal: 130ms\tremaining: 65.2ms\n",
            "30:\tlearn: 0.0817184\ttotal: 135ms\tremaining: 60.7ms\n",
            "31:\tlearn: 0.0806124\ttotal: 139ms\tremaining: 56.3ms\n",
            "32:\tlearn: 0.0800758\ttotal: 143ms\tremaining: 51.9ms\n",
            "33:\tlearn: 0.0798545\ttotal: 147ms\tremaining: 47.5ms\n",
            "34:\tlearn: 0.0790580\ttotal: 151ms\tremaining: 43.2ms\n",
            "35:\tlearn: 0.0788821\ttotal: 156ms\tremaining: 38.9ms\n",
            "36:\tlearn: 0.0784312\ttotal: 160ms\tremaining: 34.6ms\n",
            "37:\tlearn: 0.0781099\ttotal: 164ms\tremaining: 30.2ms\n",
            "38:\tlearn: 0.0778457\ttotal: 168ms\tremaining: 25.9ms\n",
            "39:\tlearn: 0.0773131\ttotal: 172ms\tremaining: 21.6ms\n",
            "40:\tlearn: 0.0770680\ttotal: 177ms\tremaining: 17.2ms\n",
            "41:\tlearn: 0.0768637\ttotal: 181ms\tremaining: 12.9ms\n",
            "42:\tlearn: 0.0766845\ttotal: 185ms\tremaining: 8.62ms\n",
            "43:\tlearn: 0.0764352\ttotal: 190ms\tremaining: 4.31ms\n",
            "44:\tlearn: 0.0761438\ttotal: 194ms\tremaining: 0us\n",
            "0:\tlearn: 0.5426160\ttotal: 4.05ms\tremaining: 178ms\n",
            "1:\tlearn: 0.4678145\ttotal: 8.53ms\tremaining: 183ms\n",
            "2:\tlearn: 0.4130886\ttotal: 12.6ms\tremaining: 177ms\n",
            "3:\tlearn: 0.3600415\ttotal: 16.9ms\tremaining: 173ms\n",
            "4:\tlearn: 0.3076574\ttotal: 21.2ms\tremaining: 169ms\n",
            "5:\tlearn: 0.2740813\ttotal: 25.4ms\tremaining: 165ms\n",
            "6:\tlearn: 0.2496283\ttotal: 29.5ms\tremaining: 160ms\n",
            "7:\tlearn: 0.2387825\ttotal: 33.6ms\tremaining: 155ms\n",
            "8:\tlearn: 0.2157564\ttotal: 37.6ms\tremaining: 151ms\n",
            "9:\tlearn: 0.1966798\ttotal: 41.8ms\tremaining: 146ms\n",
            "10:\tlearn: 0.1831861\ttotal: 45.9ms\tremaining: 142ms\n",
            "11:\tlearn: 0.1630388\ttotal: 50ms\tremaining: 137ms\n",
            "12:\tlearn: 0.1538762\ttotal: 54ms\tremaining: 133ms\n",
            "13:\tlearn: 0.1428527\ttotal: 58.1ms\tremaining: 129ms\n",
            "14:\tlearn: 0.1284873\ttotal: 62.1ms\tremaining: 124ms\n",
            "15:\tlearn: 0.1233655\ttotal: 66.5ms\tremaining: 120ms\n",
            "16:\tlearn: 0.1150348\ttotal: 70.8ms\tremaining: 117ms\n",
            "17:\tlearn: 0.1101006\ttotal: 75.1ms\tremaining: 113ms\n",
            "18:\tlearn: 0.1040370\ttotal: 79.7ms\tremaining: 109ms\n",
            "19:\tlearn: 0.1006187\ttotal: 83.7ms\tremaining: 105ms\n",
            "20:\tlearn: 0.0965240\ttotal: 87.9ms\tremaining: 100ms\n",
            "21:\tlearn: 0.0946273\ttotal: 91.9ms\tremaining: 96.1ms\n",
            "22:\tlearn: 0.0931395\ttotal: 95.9ms\tremaining: 91.7ms\n",
            "23:\tlearn: 0.0915226\ttotal: 99.9ms\tremaining: 87.4ms\n",
            "24:\tlearn: 0.0905163\ttotal: 104ms\tremaining: 83.1ms\n",
            "25:\tlearn: 0.0888534\ttotal: 108ms\tremaining: 78.9ms\n",
            "26:\tlearn: 0.0873834\ttotal: 112ms\tremaining: 74.6ms\n",
            "27:\tlearn: 0.0864036\ttotal: 116ms\tremaining: 70.4ms\n",
            "28:\tlearn: 0.0858412\ttotal: 120ms\tremaining: 66.2ms\n",
            "29:\tlearn: 0.0850082\ttotal: 124ms\tremaining: 62ms\n",
            "30:\tlearn: 0.0844123\ttotal: 128ms\tremaining: 57.8ms\n",
            "31:\tlearn: 0.0833482\ttotal: 132ms\tremaining: 53.7ms\n",
            "32:\tlearn: 0.0830191\ttotal: 136ms\tremaining: 49.6ms\n",
            "33:\tlearn: 0.0823301\ttotal: 140ms\tremaining: 45.4ms\n",
            "34:\tlearn: 0.0818749\ttotal: 144ms\tremaining: 41.2ms\n",
            "35:\tlearn: 0.0813714\ttotal: 148ms\tremaining: 37.1ms\n",
            "36:\tlearn: 0.0809445\ttotal: 153ms\tremaining: 33ms\n",
            "37:\tlearn: 0.0805274\ttotal: 158ms\tremaining: 29ms\n",
            "38:\tlearn: 0.0802964\ttotal: 162ms\tremaining: 24.9ms\n",
            "39:\tlearn: 0.0800242\ttotal: 166ms\tremaining: 20.7ms\n",
            "40:\tlearn: 0.0797380\ttotal: 170ms\tremaining: 16.6ms\n",
            "41:\tlearn: 0.0794820\ttotal: 174ms\tremaining: 12.4ms\n",
            "42:\tlearn: 0.0793593\ttotal: 178ms\tremaining: 8.28ms\n",
            "43:\tlearn: 0.0789403\ttotal: 182ms\tremaining: 4.14ms\n",
            "44:\tlearn: 0.0787139\ttotal: 186ms\tremaining: 0us\n",
            "0:\tlearn: 0.5426907\ttotal: 5.93ms\tremaining: 261ms\n",
            "1:\tlearn: 0.4508426\ttotal: 15.4ms\tremaining: 330ms\n",
            "2:\tlearn: 0.3989807\ttotal: 19.2ms\tremaining: 269ms\n",
            "3:\tlearn: 0.3296835\ttotal: 23.1ms\tremaining: 237ms\n",
            "4:\tlearn: 0.2870288\ttotal: 26.9ms\tremaining: 215ms\n",
            "5:\tlearn: 0.2541545\ttotal: 31.1ms\tremaining: 202ms\n",
            "6:\tlearn: 0.2293774\ttotal: 35ms\tremaining: 190ms\n",
            "7:\tlearn: 0.2107458\ttotal: 39.1ms\tremaining: 181ms\n",
            "8:\tlearn: 0.1996561\ttotal: 43.3ms\tremaining: 173ms\n",
            "9:\tlearn: 0.1855297\ttotal: 47.2ms\tremaining: 165ms\n",
            "10:\tlearn: 0.1678823\ttotal: 51.2ms\tremaining: 158ms\n",
            "11:\tlearn: 0.1441356\ttotal: 55.6ms\tremaining: 153ms\n",
            "12:\tlearn: 0.1358280\ttotal: 59.6ms\tremaining: 147ms\n",
            "13:\tlearn: 0.1276147\ttotal: 63.6ms\tremaining: 141ms\n",
            "14:\tlearn: 0.1175968\ttotal: 67.6ms\tremaining: 135ms\n",
            "15:\tlearn: 0.1123817\ttotal: 71.8ms\tremaining: 130ms\n",
            "16:\tlearn: 0.1087887\ttotal: 75.7ms\tremaining: 125ms\n",
            "17:\tlearn: 0.1059819\ttotal: 79.6ms\tremaining: 119ms\n",
            "18:\tlearn: 0.1008292\ttotal: 83.9ms\tremaining: 115ms\n",
            "19:\tlearn: 0.0985815\ttotal: 88ms\tremaining: 110ms\n",
            "20:\tlearn: 0.0951756\ttotal: 92.1ms\tremaining: 105ms\n",
            "21:\tlearn: 0.0915985\ttotal: 96.3ms\tremaining: 101ms\n",
            "22:\tlearn: 0.0902640\ttotal: 100ms\tremaining: 95.9ms\n",
            "23:\tlearn: 0.0886034\ttotal: 104ms\tremaining: 91.4ms\n",
            "24:\tlearn: 0.0866637\ttotal: 109ms\tremaining: 86.9ms\n",
            "25:\tlearn: 0.0858460\ttotal: 115ms\tremaining: 84ms\n",
            "26:\tlearn: 0.0848312\ttotal: 123ms\tremaining: 81.7ms\n",
            "27:\tlearn: 0.0845121\ttotal: 129ms\tremaining: 78.4ms\n",
            "28:\tlearn: 0.0833841\ttotal: 136ms\tremaining: 74.8ms\n",
            "29:\tlearn: 0.0822526\ttotal: 140ms\tremaining: 69.8ms\n",
            "30:\tlearn: 0.0820239\ttotal: 144ms\tremaining: 64.8ms\n",
            "31:\tlearn: 0.0814152\ttotal: 148ms\tremaining: 60ms\n",
            "32:\tlearn: 0.0811430\ttotal: 152ms\tremaining: 55.3ms\n",
            "33:\tlearn: 0.0808012\ttotal: 156ms\tremaining: 50.5ms\n",
            "34:\tlearn: 0.0802313\ttotal: 160ms\tremaining: 45.8ms\n",
            "35:\tlearn: 0.0800395\ttotal: 165ms\tremaining: 41.2ms\n",
            "36:\tlearn: 0.0797881\ttotal: 169ms\tremaining: 36.5ms\n",
            "37:\tlearn: 0.0793960\ttotal: 173ms\tremaining: 31.8ms\n",
            "38:\tlearn: 0.0791808\ttotal: 177ms\tremaining: 27.2ms\n",
            "39:\tlearn: 0.0786802\ttotal: 181ms\tremaining: 22.6ms\n",
            "40:\tlearn: 0.0785192\ttotal: 185ms\tremaining: 18ms\n",
            "41:\tlearn: 0.0783333\ttotal: 189ms\tremaining: 13.5ms\n",
            "42:\tlearn: 0.0779820\ttotal: 193ms\tremaining: 8.99ms\n",
            "43:\tlearn: 0.0777798\ttotal: 201ms\tremaining: 4.56ms\n",
            "44:\tlearn: 0.0776882\ttotal: 211ms\tremaining: 0us\n",
            "0:\tlearn: 0.5331265\ttotal: 4.13ms\tremaining: 182ms\n",
            "1:\tlearn: 0.4539633\ttotal: 8.08ms\tremaining: 174ms\n",
            "2:\tlearn: 0.4034410\ttotal: 12.2ms\tremaining: 170ms\n",
            "3:\tlearn: 0.3403998\ttotal: 16.2ms\tremaining: 166ms\n",
            "4:\tlearn: 0.3089765\ttotal: 21.2ms\tremaining: 170ms\n",
            "5:\tlearn: 0.2676507\ttotal: 26ms\tremaining: 169ms\n",
            "6:\tlearn: 0.2401595\ttotal: 30ms\tremaining: 163ms\n",
            "7:\tlearn: 0.2087915\ttotal: 34.2ms\tremaining: 158ms\n",
            "8:\tlearn: 0.1806697\ttotal: 38.5ms\tremaining: 154ms\n",
            "9:\tlearn: 0.1682081\ttotal: 42.5ms\tremaining: 149ms\n",
            "10:\tlearn: 0.1557547\ttotal: 46.6ms\tremaining: 144ms\n",
            "11:\tlearn: 0.1451385\ttotal: 50.9ms\tremaining: 140ms\n",
            "12:\tlearn: 0.1396029\ttotal: 55ms\tremaining: 135ms\n",
            "13:\tlearn: 0.1323198\ttotal: 59.2ms\tremaining: 131ms\n",
            "14:\tlearn: 0.1225340\ttotal: 65.8ms\tremaining: 132ms\n",
            "15:\tlearn: 0.1166508\ttotal: 70.1ms\tremaining: 127ms\n",
            "16:\tlearn: 0.1113220\ttotal: 74.3ms\tremaining: 122ms\n",
            "17:\tlearn: 0.1058025\ttotal: 78.5ms\tremaining: 118ms\n",
            "18:\tlearn: 0.1015404\ttotal: 82.6ms\tremaining: 113ms\n",
            "19:\tlearn: 0.0992918\ttotal: 86.9ms\tremaining: 109ms\n",
            "20:\tlearn: 0.0961298\ttotal: 91.3ms\tremaining: 104ms\n",
            "21:\tlearn: 0.0944044\ttotal: 95.8ms\tremaining: 100ms\n",
            "22:\tlearn: 0.0921816\ttotal: 100ms\tremaining: 95.7ms\n",
            "23:\tlearn: 0.0904843\ttotal: 104ms\tremaining: 91.2ms\n",
            "24:\tlearn: 0.0887604\ttotal: 109ms\tremaining: 86.9ms\n",
            "25:\tlearn: 0.0878100\ttotal: 113ms\tremaining: 82.4ms\n",
            "26:\tlearn: 0.0859255\ttotal: 117ms\tremaining: 78.1ms\n",
            "27:\tlearn: 0.0850669\ttotal: 122ms\tremaining: 73.8ms\n",
            "28:\tlearn: 0.0838862\ttotal: 127ms\tremaining: 69.9ms\n",
            "29:\tlearn: 0.0826142\ttotal: 131ms\tremaining: 65.5ms\n",
            "30:\tlearn: 0.0819814\ttotal: 136ms\tremaining: 61.2ms\n",
            "31:\tlearn: 0.0813731\ttotal: 140ms\tremaining: 56.7ms\n",
            "32:\tlearn: 0.0809612\ttotal: 145ms\tremaining: 52.7ms\n",
            "33:\tlearn: 0.0804681\ttotal: 152ms\tremaining: 49.1ms\n",
            "34:\tlearn: 0.0802062\ttotal: 156ms\tremaining: 44.7ms\n",
            "35:\tlearn: 0.0797944\ttotal: 161ms\tremaining: 40.2ms\n",
            "36:\tlearn: 0.0792245\ttotal: 165ms\tremaining: 35.7ms\n",
            "37:\tlearn: 0.0787993\ttotal: 169ms\tremaining: 31.1ms\n",
            "38:\tlearn: 0.0785446\ttotal: 173ms\tremaining: 26.6ms\n",
            "39:\tlearn: 0.0782946\ttotal: 177ms\tremaining: 22.2ms\n",
            "40:\tlearn: 0.0781288\ttotal: 181ms\tremaining: 17.7ms\n",
            "41:\tlearn: 0.0779369\ttotal: 185ms\tremaining: 13.2ms\n",
            "42:\tlearn: 0.0775783\ttotal: 189ms\tremaining: 8.8ms\n",
            "43:\tlearn: 0.0773563\ttotal: 193ms\tremaining: 4.4ms\n",
            "44:\tlearn: 0.0771340\ttotal: 197ms\tremaining: 0us\n",
            "0:\tlearn: 0.5385332\ttotal: 4.15ms\tremaining: 182ms\n",
            "1:\tlearn: 0.4251997\ttotal: 8.72ms\tremaining: 188ms\n",
            "2:\tlearn: 0.3648343\ttotal: 13.3ms\tremaining: 186ms\n",
            "3:\tlearn: 0.3096998\ttotal: 17.4ms\tremaining: 178ms\n",
            "4:\tlearn: 0.2657293\ttotal: 21.6ms\tremaining: 172ms\n",
            "5:\tlearn: 0.2283866\ttotal: 25.9ms\tremaining: 169ms\n",
            "6:\tlearn: 0.2045774\ttotal: 30.1ms\tremaining: 163ms\n",
            "7:\tlearn: 0.1759915\ttotal: 36.5ms\tremaining: 169ms\n",
            "8:\tlearn: 0.1642042\ttotal: 44.4ms\tremaining: 177ms\n",
            "9:\tlearn: 0.1497209\ttotal: 48.8ms\tremaining: 171ms\n",
            "10:\tlearn: 0.1404215\ttotal: 52.7ms\tremaining: 163ms\n",
            "11:\tlearn: 0.1270356\ttotal: 56.9ms\tremaining: 156ms\n",
            "12:\tlearn: 0.1206690\ttotal: 60.8ms\tremaining: 150ms\n",
            "13:\tlearn: 0.1159927\ttotal: 65.2ms\tremaining: 144ms\n",
            "14:\tlearn: 0.1123809\ttotal: 69.1ms\tremaining: 138ms\n",
            "15:\tlearn: 0.1066208\ttotal: 73.7ms\tremaining: 134ms\n",
            "16:\tlearn: 0.1025976\ttotal: 77.8ms\tremaining: 128ms\n",
            "17:\tlearn: 0.1001521\ttotal: 81.9ms\tremaining: 123ms\n",
            "18:\tlearn: 0.0971464\ttotal: 88.4ms\tremaining: 121ms\n",
            "19:\tlearn: 0.0948257\ttotal: 92.2ms\tremaining: 115ms\n",
            "20:\tlearn: 0.0938301\ttotal: 96ms\tremaining: 110ms\n",
            "21:\tlearn: 0.0923401\ttotal: 100ms\tremaining: 105ms\n",
            "22:\tlearn: 0.0905958\ttotal: 105ms\tremaining: 101ms\n",
            "23:\tlearn: 0.0892557\ttotal: 113ms\tremaining: 98.8ms\n",
            "24:\tlearn: 0.0882128\ttotal: 117ms\tremaining: 93.9ms\n",
            "25:\tlearn: 0.0874864\ttotal: 121ms\tremaining: 88.6ms\n",
            "26:\tlearn: 0.0862522\ttotal: 125ms\tremaining: 83.6ms\n",
            "27:\tlearn: 0.0853613\ttotal: 130ms\tremaining: 78.8ms\n",
            "28:\tlearn: 0.0844817\ttotal: 134ms\tremaining: 73.9ms\n",
            "29:\tlearn: 0.0838242\ttotal: 138ms\tremaining: 68.9ms\n",
            "30:\tlearn: 0.0825838\ttotal: 142ms\tremaining: 64.2ms\n",
            "31:\tlearn: 0.0822010\ttotal: 147ms\tremaining: 59.6ms\n",
            "32:\tlearn: 0.0818375\ttotal: 151ms\tremaining: 54.8ms\n",
            "33:\tlearn: 0.0815265\ttotal: 155ms\tremaining: 50.1ms\n",
            "34:\tlearn: 0.0811268\ttotal: 159ms\tremaining: 45.5ms\n",
            "35:\tlearn: 0.0803953\ttotal: 163ms\tremaining: 40.8ms\n",
            "36:\tlearn: 0.0797007\ttotal: 168ms\tremaining: 36.3ms\n",
            "37:\tlearn: 0.0794050\ttotal: 172ms\tremaining: 31.8ms\n",
            "38:\tlearn: 0.0790928\ttotal: 177ms\tremaining: 27.2ms\n",
            "39:\tlearn: 0.0789128\ttotal: 182ms\tremaining: 22.7ms\n",
            "40:\tlearn: 0.0786650\ttotal: 186ms\tremaining: 18.1ms\n",
            "41:\tlearn: 0.0784651\ttotal: 190ms\tremaining: 13.6ms\n",
            "42:\tlearn: 0.0781994\ttotal: 195ms\tremaining: 9.05ms\n",
            "43:\tlearn: 0.0779689\ttotal: 199ms\tremaining: 4.52ms\n",
            "44:\tlearn: 0.0776897\ttotal: 204ms\tremaining: 0us\n",
            "0:\tlearn: 0.6023910\ttotal: 20.5ms\tremaining: 902ms\n",
            "1:\tlearn: 0.5534464\ttotal: 35.4ms\tremaining: 761ms\n",
            "2:\tlearn: 0.5154747\ttotal: 49.9ms\tremaining: 699ms\n",
            "3:\tlearn: 0.4653290\ttotal: 68.8ms\tremaining: 706ms\n",
            "4:\tlearn: 0.4266221\ttotal: 92.9ms\tremaining: 743ms\n",
            "5:\tlearn: 0.4036900\ttotal: 116ms\tremaining: 753ms\n",
            "6:\tlearn: 0.3784278\ttotal: 143ms\tremaining: 774ms\n",
            "7:\tlearn: 0.3505410\ttotal: 165ms\tremaining: 763ms\n",
            "8:\tlearn: 0.3241751\ttotal: 195ms\tremaining: 781ms\n",
            "9:\tlearn: 0.3147836\ttotal: 224ms\tremaining: 784ms\n",
            "10:\tlearn: 0.2941591\ttotal: 250ms\tremaining: 773ms\n",
            "11:\tlearn: 0.2791644\ttotal: 277ms\tremaining: 763ms\n",
            "12:\tlearn: 0.2646783\ttotal: 304ms\tremaining: 748ms\n",
            "13:\tlearn: 0.2415862\ttotal: 329ms\tremaining: 728ms\n",
            "14:\tlearn: 0.2290654\ttotal: 358ms\tremaining: 716ms\n",
            "15:\tlearn: 0.2136318\ttotal: 381ms\tremaining: 691ms\n",
            "16:\tlearn: 0.2060474\ttotal: 408ms\tremaining: 672ms\n",
            "17:\tlearn: 0.1940297\ttotal: 447ms\tremaining: 671ms\n",
            "18:\tlearn: 0.1840304\ttotal: 470ms\tremaining: 643ms\n",
            "19:\tlearn: 0.1764366\ttotal: 498ms\tremaining: 623ms\n",
            "20:\tlearn: 0.1688133\ttotal: 526ms\tremaining: 602ms\n",
            "21:\tlearn: 0.1603934\ttotal: 550ms\tremaining: 575ms\n",
            "22:\tlearn: 0.1539153\ttotal: 572ms\tremaining: 547ms\n",
            "23:\tlearn: 0.1491593\ttotal: 593ms\tremaining: 519ms\n",
            "24:\tlearn: 0.1453770\ttotal: 616ms\tremaining: 493ms\n",
            "25:\tlearn: 0.1414951\ttotal: 640ms\tremaining: 468ms\n",
            "26:\tlearn: 0.1342008\ttotal: 665ms\tremaining: 444ms\n",
            "27:\tlearn: 0.1299631\ttotal: 678ms\tremaining: 412ms\n",
            "28:\tlearn: 0.1240071\ttotal: 691ms\tremaining: 381ms\n",
            "29:\tlearn: 0.1218957\ttotal: 713ms\tremaining: 356ms\n",
            "30:\tlearn: 0.1175818\ttotal: 728ms\tremaining: 329ms\n",
            "31:\tlearn: 0.1138601\ttotal: 740ms\tremaining: 301ms\n",
            "32:\tlearn: 0.1079517\ttotal: 753ms\tremaining: 274ms\n",
            "33:\tlearn: 0.1054854\ttotal: 775ms\tremaining: 251ms\n",
            "34:\tlearn: 0.1021883\ttotal: 799ms\tremaining: 228ms\n",
            "35:\tlearn: 0.0988481\ttotal: 826ms\tremaining: 207ms\n",
            "36:\tlearn: 0.0974151\ttotal: 861ms\tremaining: 186ms\n",
            "37:\tlearn: 0.0948945\ttotal: 885ms\tremaining: 163ms\n",
            "38:\tlearn: 0.0930186\ttotal: 908ms\tremaining: 140ms\n",
            "39:\tlearn: 0.0899108\ttotal: 924ms\tremaining: 116ms\n",
            "40:\tlearn: 0.0876504\ttotal: 947ms\tremaining: 92.4ms\n",
            "41:\tlearn: 0.0854115\ttotal: 980ms\tremaining: 70ms\n",
            "42:\tlearn: 0.0846018\ttotal: 1s\tremaining: 46.7ms\n",
            "43:\tlearn: 0.0829700\ttotal: 1.04s\tremaining: 23.6ms\n",
            "44:\tlearn: 0.0819202\ttotal: 1.07s\tremaining: 0us\n",
            "0:\tlearn: 0.6023910\ttotal: 10ms\tremaining: 442ms\n",
            "1:\tlearn: 0.5534464\ttotal: 20.1ms\tremaining: 432ms\n",
            "2:\tlearn: 0.5154747\ttotal: 29.3ms\tremaining: 410ms\n",
            "3:\tlearn: 0.4653290\ttotal: 38.6ms\tremaining: 396ms\n",
            "4:\tlearn: 0.4266221\ttotal: 49.2ms\tremaining: 394ms\n",
            "5:\tlearn: 0.4036900\ttotal: 58.8ms\tremaining: 382ms\n",
            "6:\tlearn: 0.3784278\ttotal: 68.4ms\tremaining: 371ms\n",
            "7:\tlearn: 0.3505410\ttotal: 78.2ms\tremaining: 362ms\n",
            "8:\tlearn: 0.3241751\ttotal: 87.9ms\tremaining: 352ms\n",
            "9:\tlearn: 0.3147836\ttotal: 97.6ms\tremaining: 342ms\n",
            "10:\tlearn: 0.2941591\ttotal: 108ms\tremaining: 332ms\n",
            "11:\tlearn: 0.2791644\ttotal: 117ms\tremaining: 323ms\n",
            "12:\tlearn: 0.2646783\ttotal: 127ms\tremaining: 312ms\n",
            "13:\tlearn: 0.2415862\ttotal: 136ms\tremaining: 302ms\n",
            "14:\tlearn: 0.2290654\ttotal: 146ms\tremaining: 292ms\n",
            "15:\tlearn: 0.2136318\ttotal: 156ms\tremaining: 282ms\n",
            "16:\tlearn: 0.2060474\ttotal: 164ms\tremaining: 271ms\n",
            "17:\tlearn: 0.1940297\ttotal: 176ms\tremaining: 263ms\n",
            "18:\tlearn: 0.1840304\ttotal: 185ms\tremaining: 254ms\n",
            "19:\tlearn: 0.1764366\ttotal: 195ms\tremaining: 244ms\n",
            "20:\tlearn: 0.1688133\ttotal: 204ms\tremaining: 233ms\n",
            "21:\tlearn: 0.1603934\ttotal: 220ms\tremaining: 229ms\n",
            "22:\tlearn: 0.1539153\ttotal: 230ms\tremaining: 220ms\n",
            "23:\tlearn: 0.1491593\ttotal: 239ms\tremaining: 209ms\n",
            "24:\tlearn: 0.1453770\ttotal: 248ms\tremaining: 199ms\n",
            "25:\tlearn: 0.1414951\ttotal: 258ms\tremaining: 189ms\n",
            "26:\tlearn: 0.1342008\ttotal: 268ms\tremaining: 179ms\n",
            "27:\tlearn: 0.1299631\ttotal: 278ms\tremaining: 169ms\n",
            "28:\tlearn: 0.1240071\ttotal: 289ms\tremaining: 159ms\n",
            "29:\tlearn: 0.1218957\ttotal: 298ms\tremaining: 149ms\n",
            "30:\tlearn: 0.1175818\ttotal: 308ms\tremaining: 139ms\n",
            "31:\tlearn: 0.1138601\ttotal: 317ms\tremaining: 129ms\n",
            "32:\tlearn: 0.1079517\ttotal: 327ms\tremaining: 119ms\n",
            "33:\tlearn: 0.1054854\ttotal: 336ms\tremaining: 109ms\n",
            "34:\tlearn: 0.1021883\ttotal: 346ms\tremaining: 98.9ms\n",
            "35:\tlearn: 0.0988481\ttotal: 356ms\tremaining: 89.1ms\n",
            "36:\tlearn: 0.0974151\ttotal: 366ms\tremaining: 79.2ms\n",
            "37:\tlearn: 0.0948945\ttotal: 376ms\tremaining: 69.3ms\n",
            "38:\tlearn: 0.0930186\ttotal: 386ms\tremaining: 59.3ms\n",
            "39:\tlearn: 0.0899108\ttotal: 395ms\tremaining: 49.4ms\n",
            "40:\tlearn: 0.0876504\ttotal: 406ms\tremaining: 39.6ms\n",
            "41:\tlearn: 0.0854115\ttotal: 416ms\tremaining: 29.7ms\n",
            "42:\tlearn: 0.0846018\ttotal: 429ms\tremaining: 20ms\n",
            "43:\tlearn: 0.0829700\ttotal: 439ms\tremaining: 9.98ms\n",
            "44:\tlearn: 0.0819202\ttotal: 448ms\tremaining: 0us\n",
            "0:\tlearn: 0.6007494\ttotal: 16.5ms\tremaining: 725ms\n",
            "1:\tlearn: 0.5530717\ttotal: 37.6ms\tremaining: 808ms\n",
            "2:\tlearn: 0.5183870\ttotal: 65ms\tremaining: 909ms\n",
            "3:\tlearn: 0.4864310\ttotal: 86ms\tremaining: 881ms\n",
            "4:\tlearn: 0.4377690\ttotal: 108ms\tremaining: 863ms\n",
            "5:\tlearn: 0.4037318\ttotal: 131ms\tremaining: 848ms\n",
            "6:\tlearn: 0.3793346\ttotal: 149ms\tremaining: 807ms\n",
            "7:\tlearn: 0.3595948\ttotal: 167ms\tremaining: 770ms\n",
            "8:\tlearn: 0.3413425\ttotal: 184ms\tremaining: 734ms\n",
            "9:\tlearn: 0.3273847\ttotal: 198ms\tremaining: 692ms\n",
            "10:\tlearn: 0.3024887\ttotal: 218ms\tremaining: 675ms\n",
            "11:\tlearn: 0.2787236\ttotal: 239ms\tremaining: 656ms\n",
            "12:\tlearn: 0.2564977\ttotal: 259ms\tremaining: 637ms\n",
            "13:\tlearn: 0.2425250\ttotal: 280ms\tremaining: 621ms\n",
            "14:\tlearn: 0.2275508\ttotal: 302ms\tremaining: 604ms\n",
            "15:\tlearn: 0.2209336\ttotal: 324ms\tremaining: 587ms\n",
            "16:\tlearn: 0.2092189\ttotal: 346ms\tremaining: 570ms\n",
            "17:\tlearn: 0.1948553\ttotal: 370ms\tremaining: 555ms\n",
            "18:\tlearn: 0.1859494\ttotal: 390ms\tremaining: 533ms\n",
            "19:\tlearn: 0.1766488\ttotal: 402ms\tremaining: 502ms\n",
            "20:\tlearn: 0.1651909\ttotal: 430ms\tremaining: 492ms\n",
            "21:\tlearn: 0.1594302\ttotal: 457ms\tremaining: 478ms\n",
            "22:\tlearn: 0.1496069\ttotal: 481ms\tremaining: 460ms\n",
            "23:\tlearn: 0.1445005\ttotal: 506ms\tremaining: 442ms\n",
            "24:\tlearn: 0.1404868\ttotal: 527ms\tremaining: 422ms\n",
            "25:\tlearn: 0.1346837\ttotal: 548ms\tremaining: 401ms\n",
            "26:\tlearn: 0.1299624\ttotal: 571ms\tremaining: 381ms\n",
            "27:\tlearn: 0.1251984\ttotal: 593ms\tremaining: 360ms\n",
            "28:\tlearn: 0.1199310\ttotal: 609ms\tremaining: 336ms\n",
            "29:\tlearn: 0.1147642\ttotal: 636ms\tremaining: 318ms\n",
            "30:\tlearn: 0.1117146\ttotal: 657ms\tremaining: 297ms\n",
            "31:\tlearn: 0.1083067\ttotal: 678ms\tremaining: 275ms\n",
            "32:\tlearn: 0.1039488\ttotal: 701ms\tremaining: 255ms\n",
            "33:\tlearn: 0.1011671\ttotal: 722ms\tremaining: 234ms\n",
            "34:\tlearn: 0.0995849\ttotal: 744ms\tremaining: 213ms\n",
            "35:\tlearn: 0.0968511\ttotal: 766ms\tremaining: 191ms\n",
            "36:\tlearn: 0.0956893\ttotal: 784ms\tremaining: 169ms\n",
            "37:\tlearn: 0.0945964\ttotal: 805ms\tremaining: 148ms\n",
            "38:\tlearn: 0.0927260\ttotal: 832ms\tremaining: 128ms\n",
            "39:\tlearn: 0.0913924\ttotal: 862ms\tremaining: 108ms\n",
            "40:\tlearn: 0.0897496\ttotal: 883ms\tremaining: 86.1ms\n",
            "41:\tlearn: 0.0885945\ttotal: 900ms\tremaining: 64.3ms\n",
            "42:\tlearn: 0.0871310\ttotal: 922ms\tremaining: 42.9ms\n",
            "43:\tlearn: 0.0855930\ttotal: 943ms\tremaining: 21.4ms\n",
            "44:\tlearn: 0.0837520\ttotal: 966ms\tremaining: 0us\n",
            "0:\tlearn: 0.6070070\ttotal: 17.9ms\tremaining: 786ms\n",
            "1:\tlearn: 0.5521856\ttotal: 38.1ms\tremaining: 818ms\n",
            "2:\tlearn: 0.5197017\ttotal: 57.4ms\tremaining: 803ms\n",
            "3:\tlearn: 0.4766441\ttotal: 78.1ms\tremaining: 801ms\n",
            "4:\tlearn: 0.4346313\ttotal: 90.7ms\tremaining: 726ms\n",
            "5:\tlearn: 0.4036818\ttotal: 113ms\tremaining: 733ms\n",
            "6:\tlearn: 0.3677732\ttotal: 125ms\tremaining: 680ms\n",
            "7:\tlearn: 0.3422653\ttotal: 135ms\tremaining: 625ms\n",
            "8:\tlearn: 0.3229620\ttotal: 146ms\tremaining: 582ms\n",
            "9:\tlearn: 0.3044913\ttotal: 156ms\tremaining: 546ms\n",
            "10:\tlearn: 0.2836661\ttotal: 174ms\tremaining: 538ms\n",
            "11:\tlearn: 0.2679182\ttotal: 195ms\tremaining: 537ms\n",
            "12:\tlearn: 0.2508874\ttotal: 220ms\tremaining: 542ms\n",
            "13:\tlearn: 0.2400741\ttotal: 242ms\tremaining: 536ms\n",
            "14:\tlearn: 0.2242158\ttotal: 261ms\tremaining: 523ms\n",
            "15:\tlearn: 0.2165362\ttotal: 281ms\tremaining: 510ms\n",
            "16:\tlearn: 0.2062779\ttotal: 303ms\tremaining: 499ms\n",
            "17:\tlearn: 0.1926594\ttotal: 325ms\tremaining: 487ms\n",
            "18:\tlearn: 0.1843585\ttotal: 347ms\tremaining: 475ms\n",
            "19:\tlearn: 0.1767978\ttotal: 369ms\tremaining: 461ms\n",
            "20:\tlearn: 0.1642370\ttotal: 388ms\tremaining: 443ms\n",
            "21:\tlearn: 0.1551214\ttotal: 410ms\tremaining: 428ms\n",
            "22:\tlearn: 0.1509979\ttotal: 430ms\tremaining: 411ms\n",
            "23:\tlearn: 0.1446970\ttotal: 452ms\tremaining: 395ms\n",
            "24:\tlearn: 0.1385036\ttotal: 471ms\tremaining: 377ms\n",
            "25:\tlearn: 0.1319929\ttotal: 495ms\tremaining: 361ms\n",
            "26:\tlearn: 0.1274468\ttotal: 518ms\tremaining: 345ms\n",
            "27:\tlearn: 0.1229643\ttotal: 539ms\tremaining: 327ms\n",
            "28:\tlearn: 0.1203072\ttotal: 563ms\tremaining: 311ms\n",
            "29:\tlearn: 0.1159340\ttotal: 582ms\tremaining: 291ms\n",
            "30:\tlearn: 0.1128263\ttotal: 591ms\tremaining: 267ms\n",
            "31:\tlearn: 0.1094934\ttotal: 599ms\tremaining: 243ms\n",
            "32:\tlearn: 0.1041076\ttotal: 607ms\tremaining: 221ms\n",
            "33:\tlearn: 0.1010885\ttotal: 616ms\tremaining: 199ms\n",
            "34:\tlearn: 0.0968443\ttotal: 625ms\tremaining: 179ms\n",
            "35:\tlearn: 0.0941500\ttotal: 635ms\tremaining: 159ms\n",
            "36:\tlearn: 0.0915115\ttotal: 643ms\tremaining: 139ms\n",
            "37:\tlearn: 0.0888109\ttotal: 652ms\tremaining: 120ms\n",
            "38:\tlearn: 0.0873531\ttotal: 660ms\tremaining: 102ms\n",
            "39:\tlearn: 0.0855962\ttotal: 669ms\tremaining: 83.6ms\n",
            "40:\tlearn: 0.0844570\ttotal: 677ms\tremaining: 66ms\n",
            "41:\tlearn: 0.0833503\ttotal: 685ms\tremaining: 48.9ms\n",
            "42:\tlearn: 0.0823184\ttotal: 693ms\tremaining: 32.2ms\n",
            "43:\tlearn: 0.0800991\ttotal: 702ms\tremaining: 16ms\n",
            "44:\tlearn: 0.0789813\ttotal: 711ms\tremaining: 0us\n",
            "0:\tlearn: 0.6045026\ttotal: 17ms\tremaining: 747ms\n",
            "1:\tlearn: 0.5528596\ttotal: 30.1ms\tremaining: 648ms\n",
            "2:\tlearn: 0.5145749\ttotal: 39.7ms\tremaining: 556ms\n",
            "3:\tlearn: 0.4775102\ttotal: 52.9ms\tremaining: 542ms\n",
            "4:\tlearn: 0.4264192\ttotal: 62ms\tremaining: 496ms\n",
            "5:\tlearn: 0.3917304\ttotal: 70.4ms\tremaining: 457ms\n",
            "6:\tlearn: 0.3612545\ttotal: 78.8ms\tremaining: 428ms\n",
            "7:\tlearn: 0.3323659\ttotal: 87.4ms\tremaining: 404ms\n",
            "8:\tlearn: 0.3148463\ttotal: 95.5ms\tremaining: 382ms\n",
            "9:\tlearn: 0.2868658\ttotal: 104ms\tremaining: 365ms\n",
            "10:\tlearn: 0.2750472\ttotal: 112ms\tremaining: 347ms\n",
            "11:\tlearn: 0.2623369\ttotal: 129ms\tremaining: 356ms\n",
            "12:\tlearn: 0.2463517\ttotal: 138ms\tremaining: 339ms\n",
            "13:\tlearn: 0.2339724\ttotal: 146ms\tremaining: 323ms\n",
            "14:\tlearn: 0.2218298\ttotal: 154ms\tremaining: 308ms\n",
            "15:\tlearn: 0.2094652\ttotal: 162ms\tremaining: 294ms\n",
            "16:\tlearn: 0.2008986\ttotal: 170ms\tremaining: 281ms\n",
            "17:\tlearn: 0.1901279\ttotal: 179ms\tremaining: 268ms\n",
            "18:\tlearn: 0.1779906\ttotal: 187ms\tremaining: 256ms\n",
            "19:\tlearn: 0.1711855\ttotal: 195ms\tremaining: 244ms\n",
            "20:\tlearn: 0.1611549\ttotal: 204ms\tremaining: 233ms\n",
            "21:\tlearn: 0.1505781\ttotal: 212ms\tremaining: 222ms\n",
            "22:\tlearn: 0.1459147\ttotal: 221ms\tremaining: 211ms\n",
            "23:\tlearn: 0.1398818\ttotal: 229ms\tremaining: 201ms\n",
            "24:\tlearn: 0.1324697\ttotal: 238ms\tremaining: 191ms\n",
            "25:\tlearn: 0.1261880\ttotal: 248ms\tremaining: 181ms\n",
            "26:\tlearn: 0.1232275\ttotal: 260ms\tremaining: 173ms\n",
            "27:\tlearn: 0.1188590\ttotal: 268ms\tremaining: 163ms\n",
            "28:\tlearn: 0.1139970\ttotal: 279ms\tremaining: 154ms\n",
            "29:\tlearn: 0.1107385\ttotal: 288ms\tremaining: 144ms\n",
            "30:\tlearn: 0.1080550\ttotal: 296ms\tremaining: 134ms\n",
            "31:\tlearn: 0.1041158\ttotal: 304ms\tremaining: 124ms\n",
            "32:\tlearn: 0.1011482\ttotal: 313ms\tremaining: 114ms\n",
            "33:\tlearn: 0.1000501\ttotal: 321ms\tremaining: 104ms\n",
            "34:\tlearn: 0.0984348\ttotal: 330ms\tremaining: 94.2ms\n",
            "35:\tlearn: 0.0943683\ttotal: 338ms\tremaining: 84.6ms\n",
            "36:\tlearn: 0.0919115\ttotal: 347ms\tremaining: 75ms\n",
            "37:\tlearn: 0.0897958\ttotal: 355ms\tremaining: 65.4ms\n",
            "38:\tlearn: 0.0876961\ttotal: 363ms\tremaining: 55.9ms\n",
            "39:\tlearn: 0.0861390\ttotal: 371ms\tremaining: 46.4ms\n",
            "40:\tlearn: 0.0843706\ttotal: 380ms\tremaining: 37.1ms\n",
            "41:\tlearn: 0.0837603\ttotal: 388ms\tremaining: 27.7ms\n",
            "42:\tlearn: 0.0823310\ttotal: 397ms\tremaining: 18.4ms\n",
            "43:\tlearn: 0.0802420\ttotal: 405ms\tremaining: 9.21ms\n",
            "44:\tlearn: 0.0790653\ttotal: 413ms\tremaining: 0us\n",
            "0:\tlearn: 0.5978694\ttotal: 8.29ms\tremaining: 365ms\n",
            "1:\tlearn: 0.5553521\ttotal: 17.2ms\tremaining: 370ms\n",
            "2:\tlearn: 0.5099847\ttotal: 25.9ms\tremaining: 363ms\n",
            "3:\tlearn: 0.4659521\ttotal: 34.3ms\tremaining: 352ms\n",
            "4:\tlearn: 0.4255962\ttotal: 42.9ms\tremaining: 343ms\n",
            "5:\tlearn: 0.4003621\ttotal: 51.5ms\tremaining: 335ms\n",
            "6:\tlearn: 0.3705730\ttotal: 59.8ms\tremaining: 325ms\n",
            "7:\tlearn: 0.3520541\ttotal: 68.4ms\tremaining: 316ms\n",
            "8:\tlearn: 0.3337034\ttotal: 76.7ms\tremaining: 307ms\n",
            "9:\tlearn: 0.3118128\ttotal: 84.9ms\tremaining: 297ms\n",
            "10:\tlearn: 0.2910751\ttotal: 93.9ms\tremaining: 290ms\n",
            "11:\tlearn: 0.2783828\ttotal: 102ms\tremaining: 281ms\n",
            "12:\tlearn: 0.2579834\ttotal: 111ms\tremaining: 274ms\n",
            "13:\tlearn: 0.2420494\ttotal: 120ms\tremaining: 265ms\n",
            "14:\tlearn: 0.2312395\ttotal: 128ms\tremaining: 256ms\n",
            "15:\tlearn: 0.2176749\ttotal: 137ms\tremaining: 247ms\n",
            "16:\tlearn: 0.2050546\ttotal: 145ms\tremaining: 238ms\n",
            "17:\tlearn: 0.1938571\ttotal: 154ms\tremaining: 230ms\n",
            "18:\tlearn: 0.1840274\ttotal: 163ms\tremaining: 222ms\n",
            "19:\tlearn: 0.1758827\ttotal: 171ms\tremaining: 213ms\n",
            "20:\tlearn: 0.1698989\ttotal: 179ms\tremaining: 205ms\n",
            "21:\tlearn: 0.1606160\ttotal: 188ms\tremaining: 196ms\n",
            "22:\tlearn: 0.1554586\ttotal: 196ms\tremaining: 187ms\n",
            "23:\tlearn: 0.1492724\ttotal: 206ms\tremaining: 180ms\n",
            "24:\tlearn: 0.1437777\ttotal: 218ms\tremaining: 174ms\n",
            "25:\tlearn: 0.1405209\ttotal: 226ms\tremaining: 165ms\n",
            "26:\tlearn: 0.1345610\ttotal: 235ms\tremaining: 157ms\n",
            "27:\tlearn: 0.1298697\ttotal: 243ms\tremaining: 148ms\n",
            "28:\tlearn: 0.1247472\ttotal: 252ms\tremaining: 139ms\n",
            "29:\tlearn: 0.1197983\ttotal: 260ms\tremaining: 130ms\n",
            "30:\tlearn: 0.1154502\ttotal: 269ms\tremaining: 122ms\n",
            "31:\tlearn: 0.1129192\ttotal: 277ms\tremaining: 113ms\n",
            "32:\tlearn: 0.1087018\ttotal: 286ms\tremaining: 104ms\n",
            "33:\tlearn: 0.1063901\ttotal: 296ms\tremaining: 95.7ms\n",
            "34:\tlearn: 0.1015194\ttotal: 309ms\tremaining: 88.4ms\n",
            "35:\tlearn: 0.0992745\ttotal: 318ms\tremaining: 79.4ms\n",
            "36:\tlearn: 0.0967026\ttotal: 326ms\tremaining: 70.5ms\n",
            "37:\tlearn: 0.0935124\ttotal: 335ms\tremaining: 61.7ms\n",
            "38:\tlearn: 0.0906255\ttotal: 344ms\tremaining: 52.9ms\n",
            "39:\tlearn: 0.0883147\ttotal: 353ms\tremaining: 44.1ms\n",
            "40:\tlearn: 0.0867527\ttotal: 361ms\tremaining: 35.2ms\n",
            "41:\tlearn: 0.0848860\ttotal: 370ms\tremaining: 26.4ms\n",
            "42:\tlearn: 0.0839378\ttotal: 378ms\tremaining: 17.6ms\n",
            "43:\tlearn: 0.0828656\ttotal: 386ms\tremaining: 8.77ms\n",
            "44:\tlearn: 0.0819107\ttotal: 394ms\tremaining: 0us\n",
            "0:\tlearn: 0.6078766\ttotal: 8.64ms\tremaining: 380ms\n",
            "1:\tlearn: 0.5526309\ttotal: 17.4ms\tremaining: 373ms\n",
            "2:\tlearn: 0.5077940\ttotal: 28ms\tremaining: 391ms\n",
            "3:\tlearn: 0.4670251\ttotal: 39.2ms\tremaining: 402ms\n",
            "4:\tlearn: 0.4302655\ttotal: 59ms\tremaining: 472ms\n",
            "5:\tlearn: 0.4064680\ttotal: 67.5ms\tremaining: 439ms\n",
            "6:\tlearn: 0.3854739\ttotal: 75.7ms\tremaining: 411ms\n",
            "7:\tlearn: 0.3657628\ttotal: 83.9ms\tremaining: 388ms\n",
            "8:\tlearn: 0.3437955\ttotal: 92.4ms\tremaining: 369ms\n",
            "9:\tlearn: 0.3258512\ttotal: 101ms\tremaining: 352ms\n",
            "10:\tlearn: 0.2952881\ttotal: 109ms\tremaining: 337ms\n",
            "11:\tlearn: 0.2751752\ttotal: 117ms\tremaining: 322ms\n",
            "12:\tlearn: 0.2635276\ttotal: 125ms\tremaining: 309ms\n",
            "13:\tlearn: 0.2426408\ttotal: 134ms\tremaining: 297ms\n",
            "14:\tlearn: 0.2259141\ttotal: 143ms\tremaining: 285ms\n",
            "15:\tlearn: 0.2141401\ttotal: 151ms\tremaining: 274ms\n",
            "16:\tlearn: 0.2062933\ttotal: 159ms\tremaining: 263ms\n",
            "17:\tlearn: 0.1931757\ttotal: 168ms\tremaining: 253ms\n",
            "18:\tlearn: 0.1814840\ttotal: 177ms\tremaining: 242ms\n",
            "19:\tlearn: 0.1756243\ttotal: 185ms\tremaining: 231ms\n",
            "20:\tlearn: 0.1665933\ttotal: 194ms\tremaining: 221ms\n",
            "21:\tlearn: 0.1537597\ttotal: 203ms\tremaining: 212ms\n",
            "22:\tlearn: 0.1489640\ttotal: 216ms\tremaining: 207ms\n",
            "23:\tlearn: 0.1384135\ttotal: 225ms\tremaining: 197ms\n",
            "24:\tlearn: 0.1326881\ttotal: 234ms\tremaining: 187ms\n",
            "25:\tlearn: 0.1279056\ttotal: 242ms\tremaining: 177ms\n",
            "26:\tlearn: 0.1221011\ttotal: 251ms\tremaining: 167ms\n",
            "27:\tlearn: 0.1167663\ttotal: 266ms\tremaining: 161ms\n",
            "28:\tlearn: 0.1124415\ttotal: 274ms\tremaining: 151ms\n",
            "29:\tlearn: 0.1075037\ttotal: 283ms\tremaining: 142ms\n",
            "30:\tlearn: 0.1035632\ttotal: 294ms\tremaining: 133ms\n",
            "31:\tlearn: 0.1014629\ttotal: 302ms\tremaining: 123ms\n",
            "32:\tlearn: 0.0991685\ttotal: 311ms\tremaining: 113ms\n",
            "33:\tlearn: 0.0964349\ttotal: 320ms\tremaining: 104ms\n",
            "34:\tlearn: 0.0934074\ttotal: 328ms\tremaining: 93.8ms\n",
            "35:\tlearn: 0.0922443\ttotal: 337ms\tremaining: 84.3ms\n",
            "36:\tlearn: 0.0906352\ttotal: 345ms\tremaining: 74.6ms\n",
            "37:\tlearn: 0.0878547\ttotal: 354ms\tremaining: 65.2ms\n",
            "38:\tlearn: 0.0857257\ttotal: 362ms\tremaining: 55.7ms\n",
            "39:\tlearn: 0.0846691\ttotal: 370ms\tremaining: 46.3ms\n",
            "40:\tlearn: 0.0826062\ttotal: 378ms\tremaining: 36.9ms\n",
            "41:\tlearn: 0.0814242\ttotal: 387ms\tremaining: 27.6ms\n",
            "42:\tlearn: 0.0801519\ttotal: 395ms\tremaining: 18.4ms\n",
            "43:\tlearn: 0.0785741\ttotal: 404ms\tremaining: 9.18ms\n",
            "44:\tlearn: 0.0776194\ttotal: 413ms\tremaining: 0us\n",
            "0:\tlearn: 0.5530462\ttotal: 13.7ms\tremaining: 601ms\n",
            "1:\tlearn: 0.4763039\ttotal: 32.3ms\tremaining: 693ms\n",
            "2:\tlearn: 0.3982115\ttotal: 43.2ms\tremaining: 604ms\n",
            "3:\tlearn: 0.3491799\ttotal: 52.4ms\tremaining: 537ms\n",
            "4:\tlearn: 0.3051601\ttotal: 60.2ms\tremaining: 481ms\n",
            "5:\tlearn: 0.2804504\ttotal: 69.3ms\tremaining: 451ms\n",
            "6:\tlearn: 0.2628703\ttotal: 77.9ms\tremaining: 423ms\n",
            "7:\tlearn: 0.2321367\ttotal: 87ms\tremaining: 402ms\n",
            "8:\tlearn: 0.2019621\ttotal: 95.3ms\tremaining: 381ms\n",
            "9:\tlearn: 0.1811693\ttotal: 105ms\tremaining: 368ms\n",
            "10:\tlearn: 0.1629754\ttotal: 114ms\tremaining: 352ms\n",
            "11:\tlearn: 0.1561875\ttotal: 125ms\tremaining: 345ms\n",
            "12:\tlearn: 0.1434841\ttotal: 140ms\tremaining: 344ms\n",
            "13:\tlearn: 0.1328196\ttotal: 154ms\tremaining: 341ms\n",
            "14:\tlearn: 0.1255334\ttotal: 163ms\tremaining: 326ms\n",
            "15:\tlearn: 0.1228921\ttotal: 171ms\tremaining: 309ms\n",
            "16:\tlearn: 0.1175249\ttotal: 179ms\tremaining: 294ms\n",
            "17:\tlearn: 0.1128323\ttotal: 186ms\tremaining: 279ms\n",
            "18:\tlearn: 0.1064292\ttotal: 194ms\tremaining: 266ms\n",
            "19:\tlearn: 0.1031081\ttotal: 206ms\tremaining: 257ms\n",
            "20:\tlearn: 0.0983335\ttotal: 215ms\tremaining: 245ms\n",
            "21:\tlearn: 0.0965042\ttotal: 222ms\tremaining: 232ms\n",
            "22:\tlearn: 0.0952595\ttotal: 232ms\tremaining: 221ms\n",
            "23:\tlearn: 0.0922545\ttotal: 240ms\tremaining: 210ms\n",
            "24:\tlearn: 0.0909448\ttotal: 249ms\tremaining: 199ms\n",
            "25:\tlearn: 0.0903170\ttotal: 262ms\tremaining: 192ms\n",
            "26:\tlearn: 0.0890807\ttotal: 273ms\tremaining: 182ms\n",
            "27:\tlearn: 0.0878350\ttotal: 283ms\tremaining: 172ms\n",
            "28:\tlearn: 0.0865201\ttotal: 303ms\tremaining: 167ms\n",
            "29:\tlearn: 0.0858643\ttotal: 322ms\tremaining: 161ms\n",
            "30:\tlearn: 0.0848050\ttotal: 334ms\tremaining: 151ms\n",
            "31:\tlearn: 0.0844881\ttotal: 352ms\tremaining: 143ms\n",
            "32:\tlearn: 0.0841959\ttotal: 371ms\tremaining: 135ms\n",
            "33:\tlearn: 0.0836506\ttotal: 392ms\tremaining: 127ms\n",
            "34:\tlearn: 0.0831118\ttotal: 414ms\tremaining: 118ms\n",
            "35:\tlearn: 0.0825813\ttotal: 433ms\tremaining: 108ms\n",
            "36:\tlearn: 0.0821500\ttotal: 452ms\tremaining: 97.7ms\n",
            "37:\tlearn: 0.0819553\ttotal: 467ms\tremaining: 86ms\n",
            "38:\tlearn: 0.0815968\ttotal: 487ms\tremaining: 74.9ms\n",
            "39:\tlearn: 0.0813269\ttotal: 507ms\tremaining: 63.4ms\n",
            "40:\tlearn: 0.0808988\ttotal: 528ms\tremaining: 51.5ms\n",
            "41:\tlearn: 0.0807157\ttotal: 544ms\tremaining: 38.8ms\n",
            "42:\tlearn: 0.0803686\ttotal: 559ms\tremaining: 26ms\n",
            "43:\tlearn: 0.0801678\ttotal: 575ms\tremaining: 13.1ms\n",
            "44:\tlearn: 0.0799998\ttotal: 594ms\tremaining: 0us\n",
            "0:\tlearn: 0.5530462\ttotal: 6.58ms\tremaining: 289ms\n",
            "1:\tlearn: 0.4763039\ttotal: 13.7ms\tremaining: 295ms\n",
            "2:\tlearn: 0.3982115\ttotal: 20.6ms\tremaining: 288ms\n",
            "3:\tlearn: 0.3491799\ttotal: 27.3ms\tremaining: 279ms\n",
            "4:\tlearn: 0.3051601\ttotal: 33.9ms\tremaining: 271ms\n",
            "5:\tlearn: 0.2804504\ttotal: 40.5ms\tremaining: 263ms\n",
            "6:\tlearn: 0.2628703\ttotal: 47.2ms\tremaining: 256ms\n",
            "7:\tlearn: 0.2321367\ttotal: 54.4ms\tremaining: 251ms\n",
            "8:\tlearn: 0.2019621\ttotal: 61ms\tremaining: 244ms\n",
            "9:\tlearn: 0.1811693\ttotal: 69.2ms\tremaining: 242ms\n",
            "10:\tlearn: 0.1629754\ttotal: 77.4ms\tremaining: 239ms\n",
            "11:\tlearn: 0.1561875\ttotal: 84.3ms\tremaining: 232ms\n",
            "12:\tlearn: 0.1434841\ttotal: 91ms\tremaining: 224ms\n",
            "13:\tlearn: 0.1328196\ttotal: 97.9ms\tremaining: 217ms\n",
            "14:\tlearn: 0.1255334\ttotal: 105ms\tremaining: 209ms\n",
            "15:\tlearn: 0.1228921\ttotal: 111ms\tremaining: 201ms\n",
            "16:\tlearn: 0.1175249\ttotal: 118ms\tremaining: 194ms\n",
            "17:\tlearn: 0.1128323\ttotal: 124ms\tremaining: 187ms\n",
            "18:\tlearn: 0.1064292\ttotal: 131ms\tremaining: 180ms\n",
            "19:\tlearn: 0.1031081\ttotal: 138ms\tremaining: 172ms\n",
            "20:\tlearn: 0.0983335\ttotal: 145ms\tremaining: 166ms\n",
            "21:\tlearn: 0.0965042\ttotal: 152ms\tremaining: 159ms\n",
            "22:\tlearn: 0.0952595\ttotal: 160ms\tremaining: 153ms\n",
            "23:\tlearn: 0.0922545\ttotal: 167ms\tremaining: 146ms\n",
            "24:\tlearn: 0.0909448\ttotal: 174ms\tremaining: 139ms\n",
            "25:\tlearn: 0.0903170\ttotal: 180ms\tremaining: 131ms\n",
            "26:\tlearn: 0.0890807\ttotal: 186ms\tremaining: 124ms\n",
            "27:\tlearn: 0.0878350\ttotal: 193ms\tremaining: 117ms\n",
            "28:\tlearn: 0.0865201\ttotal: 205ms\tremaining: 113ms\n",
            "29:\tlearn: 0.0858643\ttotal: 217ms\tremaining: 109ms\n",
            "30:\tlearn: 0.0848050\ttotal: 223ms\tremaining: 101ms\n",
            "31:\tlearn: 0.0844881\ttotal: 230ms\tremaining: 93.4ms\n",
            "32:\tlearn: 0.0841959\ttotal: 236ms\tremaining: 85.8ms\n",
            "33:\tlearn: 0.0836506\ttotal: 243ms\tremaining: 78.6ms\n",
            "34:\tlearn: 0.0831118\ttotal: 250ms\tremaining: 71.3ms\n",
            "35:\tlearn: 0.0825813\ttotal: 257ms\tremaining: 64.2ms\n",
            "36:\tlearn: 0.0821500\ttotal: 263ms\tremaining: 57ms\n",
            "37:\tlearn: 0.0819553\ttotal: 270ms\tremaining: 49.8ms\n",
            "38:\tlearn: 0.0815968\ttotal: 277ms\tremaining: 42.6ms\n",
            "39:\tlearn: 0.0813269\ttotal: 284ms\tremaining: 35.5ms\n",
            "40:\tlearn: 0.0808988\ttotal: 291ms\tremaining: 28.4ms\n",
            "41:\tlearn: 0.0807157\ttotal: 298ms\tremaining: 21.3ms\n",
            "42:\tlearn: 0.0803686\ttotal: 305ms\tremaining: 14.2ms\n",
            "43:\tlearn: 0.0801678\ttotal: 312ms\tremaining: 7.09ms\n",
            "44:\tlearn: 0.0799998\ttotal: 319ms\tremaining: 0us\n",
            "0:\tlearn: 0.5787871\ttotal: 6.5ms\tremaining: 286ms\n",
            "1:\tlearn: 0.4664316\ttotal: 13.9ms\tremaining: 299ms\n",
            "2:\tlearn: 0.4013329\ttotal: 20.4ms\tremaining: 286ms\n",
            "3:\tlearn: 0.3676318\ttotal: 27ms\tremaining: 276ms\n",
            "4:\tlearn: 0.3389503\ttotal: 34.1ms\tremaining: 273ms\n",
            "5:\tlearn: 0.2895014\ttotal: 40.7ms\tremaining: 264ms\n",
            "6:\tlearn: 0.2635022\ttotal: 47.1ms\tremaining: 256ms\n",
            "7:\tlearn: 0.2472207\ttotal: 53.7ms\tremaining: 248ms\n",
            "8:\tlearn: 0.2311104\ttotal: 60.2ms\tremaining: 241ms\n",
            "9:\tlearn: 0.2117758\ttotal: 67ms\tremaining: 235ms\n",
            "10:\tlearn: 0.1989473\ttotal: 73.5ms\tremaining: 227ms\n",
            "11:\tlearn: 0.1886732\ttotal: 80.1ms\tremaining: 220ms\n",
            "12:\tlearn: 0.1597828\ttotal: 86.7ms\tremaining: 213ms\n",
            "13:\tlearn: 0.1415552\ttotal: 93.2ms\tremaining: 206ms\n",
            "14:\tlearn: 0.1368122\ttotal: 99.6ms\tremaining: 199ms\n",
            "15:\tlearn: 0.1302844\ttotal: 106ms\tremaining: 192ms\n",
            "16:\tlearn: 0.1218987\ttotal: 113ms\tremaining: 185ms\n",
            "17:\tlearn: 0.1179246\ttotal: 119ms\tremaining: 179ms\n",
            "18:\tlearn: 0.1153028\ttotal: 125ms\tremaining: 172ms\n",
            "19:\tlearn: 0.1094128\ttotal: 132ms\tremaining: 165ms\n",
            "20:\tlearn: 0.1047858\ttotal: 139ms\tremaining: 159ms\n",
            "21:\tlearn: 0.1020286\ttotal: 145ms\tremaining: 152ms\n",
            "22:\tlearn: 0.0988645\ttotal: 152ms\tremaining: 145ms\n",
            "23:\tlearn: 0.0968920\ttotal: 158ms\tremaining: 139ms\n",
            "24:\tlearn: 0.0945492\ttotal: 165ms\tremaining: 132ms\n",
            "25:\tlearn: 0.0931132\ttotal: 171ms\tremaining: 125ms\n",
            "26:\tlearn: 0.0914206\ttotal: 178ms\tremaining: 119ms\n",
            "27:\tlearn: 0.0907233\ttotal: 185ms\tremaining: 112ms\n",
            "28:\tlearn: 0.0891339\ttotal: 191ms\tremaining: 106ms\n",
            "29:\tlearn: 0.0879479\ttotal: 198ms\tremaining: 98.9ms\n",
            "30:\tlearn: 0.0874448\ttotal: 209ms\tremaining: 94.3ms\n",
            "31:\tlearn: 0.0868483\ttotal: 218ms\tremaining: 88.6ms\n",
            "32:\tlearn: 0.0858601\ttotal: 225ms\tremaining: 81.8ms\n",
            "33:\tlearn: 0.0851168\ttotal: 231ms\tremaining: 74.9ms\n",
            "34:\tlearn: 0.0838541\ttotal: 238ms\tremaining: 68ms\n",
            "35:\tlearn: 0.0831221\ttotal: 245ms\tremaining: 61.2ms\n",
            "36:\tlearn: 0.0824922\ttotal: 251ms\tremaining: 54.4ms\n",
            "37:\tlearn: 0.0820828\ttotal: 258ms\tremaining: 47.5ms\n",
            "38:\tlearn: 0.0814523\ttotal: 265ms\tremaining: 40.7ms\n",
            "39:\tlearn: 0.0812252\ttotal: 271ms\tremaining: 33.9ms\n",
            "40:\tlearn: 0.0805894\ttotal: 287ms\tremaining: 28ms\n",
            "41:\tlearn: 0.0797849\ttotal: 306ms\tremaining: 21.9ms\n",
            "42:\tlearn: 0.0795954\ttotal: 321ms\tremaining: 14.9ms\n",
            "43:\tlearn: 0.0791696\ttotal: 341ms\tremaining: 7.74ms\n",
            "44:\tlearn: 0.0789620\ttotal: 363ms\tremaining: 0us\n",
            "0:\tlearn: 0.5684737\ttotal: 9.86ms\tremaining: 434ms\n",
            "1:\tlearn: 0.4762041\ttotal: 18.8ms\tremaining: 403ms\n",
            "2:\tlearn: 0.4071055\ttotal: 27ms\tremaining: 377ms\n",
            "3:\tlearn: 0.3377462\ttotal: 35.7ms\tremaining: 366ms\n",
            "4:\tlearn: 0.2777986\ttotal: 44.5ms\tremaining: 356ms\n",
            "5:\tlearn: 0.2481256\ttotal: 51.9ms\tremaining: 337ms\n",
            "6:\tlearn: 0.2296761\ttotal: 59.8ms\tremaining: 324ms\n",
            "7:\tlearn: 0.2139479\ttotal: 67.9ms\tremaining: 314ms\n",
            "8:\tlearn: 0.1907039\ttotal: 76.8ms\tremaining: 307ms\n",
            "9:\tlearn: 0.1801246\ttotal: 84.1ms\tremaining: 294ms\n",
            "10:\tlearn: 0.1612703\ttotal: 93ms\tremaining: 288ms\n",
            "11:\tlearn: 0.1505581\ttotal: 108ms\tremaining: 296ms\n",
            "12:\tlearn: 0.1433594\ttotal: 130ms\tremaining: 319ms\n",
            "13:\tlearn: 0.1390701\ttotal: 152ms\tremaining: 336ms\n",
            "14:\tlearn: 0.1314509\ttotal: 171ms\tremaining: 343ms\n",
            "15:\tlearn: 0.1244614\ttotal: 191ms\tremaining: 346ms\n",
            "16:\tlearn: 0.1203602\ttotal: 214ms\tremaining: 352ms\n",
            "17:\tlearn: 0.1156601\ttotal: 229ms\tremaining: 343ms\n",
            "18:\tlearn: 0.1085655\ttotal: 257ms\tremaining: 352ms\n",
            "19:\tlearn: 0.1049827\ttotal: 277ms\tremaining: 346ms\n",
            "20:\tlearn: 0.1036021\ttotal: 292ms\tremaining: 334ms\n",
            "21:\tlearn: 0.1002899\ttotal: 313ms\tremaining: 327ms\n",
            "22:\tlearn: 0.0982748\ttotal: 332ms\tremaining: 318ms\n",
            "23:\tlearn: 0.0963781\ttotal: 351ms\tremaining: 307ms\n",
            "24:\tlearn: 0.0945580\ttotal: 373ms\tremaining: 299ms\n",
            "25:\tlearn: 0.0924161\ttotal: 388ms\tremaining: 283ms\n",
            "26:\tlearn: 0.0902411\ttotal: 416ms\tremaining: 277ms\n",
            "27:\tlearn: 0.0895279\ttotal: 432ms\tremaining: 262ms\n",
            "28:\tlearn: 0.0886273\ttotal: 450ms\tremaining: 248ms\n",
            "29:\tlearn: 0.0876064\ttotal: 472ms\tremaining: 236ms\n",
            "30:\tlearn: 0.0862885\ttotal: 491ms\tremaining: 222ms\n",
            "31:\tlearn: 0.0853569\ttotal: 509ms\tremaining: 207ms\n",
            "32:\tlearn: 0.0838888\ttotal: 525ms\tremaining: 191ms\n",
            "33:\tlearn: 0.0836258\ttotal: 543ms\tremaining: 176ms\n",
            "34:\tlearn: 0.0832753\ttotal: 561ms\tremaining: 160ms\n",
            "35:\tlearn: 0.0829805\ttotal: 574ms\tremaining: 143ms\n",
            "36:\tlearn: 0.0825307\ttotal: 586ms\tremaining: 127ms\n",
            "37:\tlearn: 0.0820703\ttotal: 604ms\tremaining: 111ms\n",
            "38:\tlearn: 0.0817293\ttotal: 619ms\tremaining: 95.3ms\n",
            "39:\tlearn: 0.0815106\ttotal: 639ms\tremaining: 79.9ms\n",
            "40:\tlearn: 0.0813760\ttotal: 653ms\tremaining: 63.7ms\n",
            "41:\tlearn: 0.0808046\ttotal: 679ms\tremaining: 48.5ms\n",
            "42:\tlearn: 0.0805731\ttotal: 698ms\tremaining: 32.5ms\n",
            "43:\tlearn: 0.0802724\ttotal: 718ms\tremaining: 16.3ms\n",
            "44:\tlearn: 0.0800209\ttotal: 733ms\tremaining: 0us\n",
            "0:\tlearn: 0.5409042\ttotal: 19.4ms\tremaining: 855ms\n",
            "1:\tlearn: 0.4488828\ttotal: 33.5ms\tremaining: 720ms\n",
            "2:\tlearn: 0.3819408\ttotal: 46.8ms\tremaining: 655ms\n",
            "3:\tlearn: 0.3567883\ttotal: 55.2ms\tremaining: 566ms\n",
            "4:\tlearn: 0.2845578\ttotal: 62.7ms\tremaining: 501ms\n",
            "5:\tlearn: 0.2646474\ttotal: 69.8ms\tremaining: 453ms\n",
            "6:\tlearn: 0.2413327\ttotal: 78.5ms\tremaining: 426ms\n",
            "7:\tlearn: 0.2113553\ttotal: 86.8ms\tremaining: 401ms\n",
            "8:\tlearn: 0.1964371\ttotal: 95.1ms\tremaining: 380ms\n",
            "9:\tlearn: 0.1830314\ttotal: 106ms\tremaining: 370ms\n",
            "10:\tlearn: 0.1688111\ttotal: 119ms\tremaining: 368ms\n",
            "11:\tlearn: 0.1586597\ttotal: 131ms\tremaining: 360ms\n",
            "12:\tlearn: 0.1477128\ttotal: 144ms\tremaining: 354ms\n",
            "13:\tlearn: 0.1400335\ttotal: 155ms\tremaining: 343ms\n",
            "14:\tlearn: 0.1351677\ttotal: 163ms\tremaining: 327ms\n",
            "15:\tlearn: 0.1285636\ttotal: 171ms\tremaining: 311ms\n",
            "16:\tlearn: 0.1208245\ttotal: 181ms\tremaining: 298ms\n",
            "17:\tlearn: 0.1159555\ttotal: 192ms\tremaining: 288ms\n",
            "18:\tlearn: 0.1127992\ttotal: 213ms\tremaining: 291ms\n",
            "19:\tlearn: 0.1095074\ttotal: 227ms\tremaining: 283ms\n",
            "20:\tlearn: 0.1067474\ttotal: 235ms\tremaining: 268ms\n",
            "21:\tlearn: 0.1036431\ttotal: 244ms\tremaining: 255ms\n",
            "22:\tlearn: 0.1016255\ttotal: 251ms\tremaining: 240ms\n",
            "23:\tlearn: 0.1006528\ttotal: 259ms\tremaining: 227ms\n",
            "24:\tlearn: 0.0973881\ttotal: 268ms\tremaining: 214ms\n",
            "25:\tlearn: 0.0953295\ttotal: 275ms\tremaining: 201ms\n",
            "26:\tlearn: 0.0938385\ttotal: 287ms\tremaining: 191ms\n",
            "27:\tlearn: 0.0924933\ttotal: 301ms\tremaining: 183ms\n",
            "28:\tlearn: 0.0914033\ttotal: 320ms\tremaining: 177ms\n",
            "29:\tlearn: 0.0906623\ttotal: 342ms\tremaining: 171ms\n",
            "30:\tlearn: 0.0889396\ttotal: 360ms\tremaining: 163ms\n",
            "31:\tlearn: 0.0878240\ttotal: 374ms\tremaining: 152ms\n",
            "32:\tlearn: 0.0868741\ttotal: 393ms\tremaining: 143ms\n",
            "33:\tlearn: 0.0861975\ttotal: 408ms\tremaining: 132ms\n",
            "34:\tlearn: 0.0852268\ttotal: 418ms\tremaining: 119ms\n",
            "35:\tlearn: 0.0843214\ttotal: 435ms\tremaining: 109ms\n",
            "36:\tlearn: 0.0838639\ttotal: 445ms\tremaining: 96.3ms\n",
            "37:\tlearn: 0.0834688\ttotal: 456ms\tremaining: 84ms\n",
            "38:\tlearn: 0.0825394\ttotal: 466ms\tremaining: 71.6ms\n",
            "39:\tlearn: 0.0821278\ttotal: 474ms\tremaining: 59.2ms\n",
            "40:\tlearn: 0.0817355\ttotal: 482ms\tremaining: 47ms\n",
            "41:\tlearn: 0.0814128\ttotal: 490ms\tremaining: 35ms\n",
            "42:\tlearn: 0.0808891\ttotal: 501ms\tremaining: 23.3ms\n",
            "43:\tlearn: 0.0807486\ttotal: 519ms\tremaining: 11.8ms\n",
            "44:\tlearn: 0.0804516\ttotal: 538ms\tremaining: 0us\n",
            "0:\tlearn: 0.5987101\ttotal: 20.9ms\tremaining: 920ms\n",
            "1:\tlearn: 0.5071467\ttotal: 35.2ms\tremaining: 758ms\n",
            "2:\tlearn: 0.4219185\ttotal: 53ms\tremaining: 742ms\n",
            "3:\tlearn: 0.3741162\ttotal: 71.2ms\tremaining: 730ms\n",
            "4:\tlearn: 0.3147576\ttotal: 90.4ms\tremaining: 723ms\n",
            "5:\tlearn: 0.2812857\ttotal: 102ms\tremaining: 665ms\n",
            "6:\tlearn: 0.2563138\ttotal: 110ms\tremaining: 599ms\n",
            "7:\tlearn: 0.2238385\ttotal: 118ms\tremaining: 548ms\n",
            "8:\tlearn: 0.2109499\ttotal: 127ms\tremaining: 510ms\n",
            "9:\tlearn: 0.1950925\ttotal: 135ms\tremaining: 474ms\n",
            "10:\tlearn: 0.1873818\ttotal: 144ms\tremaining: 444ms\n",
            "11:\tlearn: 0.1790251\ttotal: 159ms\tremaining: 437ms\n",
            "12:\tlearn: 0.1714235\ttotal: 175ms\tremaining: 432ms\n",
            "13:\tlearn: 0.1580676\ttotal: 195ms\tremaining: 431ms\n",
            "14:\tlearn: 0.1500674\ttotal: 210ms\tremaining: 419ms\n",
            "15:\tlearn: 0.1426372\ttotal: 230ms\tremaining: 417ms\n",
            "16:\tlearn: 0.1354659\ttotal: 246ms\tremaining: 405ms\n",
            "17:\tlearn: 0.1311232\ttotal: 265ms\tremaining: 398ms\n",
            "18:\tlearn: 0.1238798\ttotal: 285ms\tremaining: 390ms\n",
            "19:\tlearn: 0.1131008\ttotal: 301ms\tremaining: 376ms\n",
            "20:\tlearn: 0.1076506\ttotal: 314ms\tremaining: 359ms\n",
            "21:\tlearn: 0.1051476\ttotal: 333ms\tremaining: 348ms\n",
            "22:\tlearn: 0.1031520\ttotal: 347ms\tremaining: 331ms\n",
            "23:\tlearn: 0.1008585\ttotal: 370ms\tremaining: 323ms\n",
            "24:\tlearn: 0.0983371\ttotal: 393ms\tremaining: 314ms\n",
            "25:\tlearn: 0.0939963\ttotal: 417ms\tremaining: 305ms\n",
            "26:\tlearn: 0.0925044\ttotal: 433ms\tremaining: 289ms\n",
            "27:\tlearn: 0.0909752\ttotal: 457ms\tremaining: 277ms\n",
            "28:\tlearn: 0.0891291\ttotal: 471ms\tremaining: 260ms\n",
            "29:\tlearn: 0.0882808\ttotal: 487ms\tremaining: 244ms\n",
            "30:\tlearn: 0.0876168\ttotal: 504ms\tremaining: 228ms\n",
            "31:\tlearn: 0.0864961\ttotal: 517ms\tremaining: 210ms\n",
            "32:\tlearn: 0.0848048\ttotal: 533ms\tremaining: 194ms\n",
            "33:\tlearn: 0.0842443\ttotal: 542ms\tremaining: 175ms\n",
            "34:\tlearn: 0.0836280\ttotal: 550ms\tremaining: 157ms\n",
            "35:\tlearn: 0.0826746\ttotal: 558ms\tremaining: 139ms\n",
            "36:\tlearn: 0.0823219\ttotal: 567ms\tremaining: 123ms\n",
            "37:\tlearn: 0.0814457\ttotal: 575ms\tremaining: 106ms\n",
            "38:\tlearn: 0.0809122\ttotal: 583ms\tremaining: 89.6ms\n",
            "39:\tlearn: 0.0804586\ttotal: 600ms\tremaining: 75ms\n",
            "40:\tlearn: 0.0803078\ttotal: 624ms\tremaining: 60.9ms\n",
            "41:\tlearn: 0.0799569\ttotal: 643ms\tremaining: 45.9ms\n",
            "42:\tlearn: 0.0797329\ttotal: 662ms\tremaining: 30.8ms\n",
            "43:\tlearn: 0.0794675\ttotal: 675ms\tremaining: 15.3ms\n",
            "44:\tlearn: 0.0792108\ttotal: 683ms\tremaining: 0us\n",
            "0:\tlearn: 0.5768381\ttotal: 14.1ms\tremaining: 620ms\n",
            "1:\tlearn: 0.4856806\ttotal: 33.6ms\tremaining: 722ms\n",
            "2:\tlearn: 0.3938988\ttotal: 53.8ms\tremaining: 753ms\n",
            "3:\tlearn: 0.3383050\ttotal: 80.7ms\tremaining: 827ms\n",
            "4:\tlearn: 0.3050559\ttotal: 99.3ms\tremaining: 794ms\n",
            "5:\tlearn: 0.2753787\ttotal: 119ms\tremaining: 771ms\n",
            "6:\tlearn: 0.2441012\ttotal: 138ms\tremaining: 747ms\n",
            "7:\tlearn: 0.2265483\ttotal: 154ms\tremaining: 712ms\n",
            "8:\tlearn: 0.2092118\ttotal: 173ms\tremaining: 691ms\n",
            "9:\tlearn: 0.1896561\ttotal: 191ms\tremaining: 670ms\n",
            "10:\tlearn: 0.1749201\ttotal: 211ms\tremaining: 651ms\n",
            "11:\tlearn: 0.1669733\ttotal: 229ms\tremaining: 631ms\n",
            "12:\tlearn: 0.1576182\ttotal: 247ms\tremaining: 608ms\n",
            "13:\tlearn: 0.1509766\ttotal: 267ms\tremaining: 591ms\n",
            "14:\tlearn: 0.1391894\ttotal: 284ms\tremaining: 569ms\n",
            "15:\tlearn: 0.1340423\ttotal: 302ms\tremaining: 547ms\n",
            "16:\tlearn: 0.1274694\ttotal: 319ms\tremaining: 525ms\n",
            "17:\tlearn: 0.1211763\ttotal: 334ms\tremaining: 502ms\n",
            "18:\tlearn: 0.1175541\ttotal: 352ms\tremaining: 482ms\n",
            "19:\tlearn: 0.1141983\ttotal: 372ms\tremaining: 465ms\n",
            "20:\tlearn: 0.1111881\ttotal: 388ms\tremaining: 444ms\n",
            "21:\tlearn: 0.1077737\ttotal: 411ms\tremaining: 430ms\n",
            "22:\tlearn: 0.1054007\ttotal: 430ms\tremaining: 411ms\n",
            "23:\tlearn: 0.0990838\ttotal: 449ms\tremaining: 393ms\n",
            "24:\tlearn: 0.0977766\ttotal: 459ms\tremaining: 368ms\n",
            "25:\tlearn: 0.0952206\ttotal: 472ms\tremaining: 345ms\n",
            "26:\tlearn: 0.0939967\ttotal: 491ms\tremaining: 327ms\n",
            "27:\tlearn: 0.0926114\ttotal: 505ms\tremaining: 307ms\n",
            "28:\tlearn: 0.0911641\ttotal: 523ms\tremaining: 289ms\n",
            "29:\tlearn: 0.0905333\ttotal: 533ms\tremaining: 267ms\n",
            "30:\tlearn: 0.0887629\ttotal: 542ms\tremaining: 245ms\n",
            "31:\tlearn: 0.0865964\ttotal: 550ms\tremaining: 224ms\n",
            "32:\tlearn: 0.0858131\ttotal: 562ms\tremaining: 204ms\n",
            "33:\tlearn: 0.0841992\ttotal: 578ms\tremaining: 187ms\n",
            "34:\tlearn: 0.0838902\ttotal: 599ms\tremaining: 171ms\n",
            "35:\tlearn: 0.0834932\ttotal: 619ms\tremaining: 155ms\n",
            "36:\tlearn: 0.0831361\ttotal: 633ms\tremaining: 137ms\n",
            "37:\tlearn: 0.0828624\ttotal: 659ms\tremaining: 121ms\n",
            "38:\tlearn: 0.0819792\ttotal: 678ms\tremaining: 104ms\n",
            "39:\tlearn: 0.0817082\ttotal: 697ms\tremaining: 87.2ms\n",
            "40:\tlearn: 0.0812463\ttotal: 713ms\tremaining: 69.6ms\n",
            "41:\tlearn: 0.0808722\ttotal: 732ms\tremaining: 52.3ms\n",
            "42:\tlearn: 0.0805917\ttotal: 753ms\tremaining: 35ms\n",
            "43:\tlearn: 0.0804486\ttotal: 766ms\tremaining: 17.4ms\n",
            "44:\tlearn: 0.0803141\ttotal: 786ms\tremaining: 0us\n",
            "0:\tlearn: 0.5900090\ttotal: 92.2ms\tremaining: 4.06s\n",
            "1:\tlearn: 0.5081979\ttotal: 158ms\tremaining: 3.4s\n",
            "2:\tlearn: 0.4372635\ttotal: 234ms\tremaining: 3.27s\n",
            "3:\tlearn: 0.4021220\ttotal: 305ms\tremaining: 3.13s\n",
            "4:\tlearn: 0.3574730\ttotal: 369ms\tremaining: 2.95s\n",
            "5:\tlearn: 0.3197877\ttotal: 434ms\tremaining: 2.82s\n",
            "6:\tlearn: 0.2991446\ttotal: 497ms\tremaining: 2.7s\n",
            "7:\tlearn: 0.2738463\ttotal: 565ms\tremaining: 2.61s\n",
            "8:\tlearn: 0.2593703\ttotal: 626ms\tremaining: 2.5s\n",
            "9:\tlearn: 0.2411576\ttotal: 692ms\tremaining: 2.42s\n",
            "10:\tlearn: 0.2269392\ttotal: 768ms\tremaining: 2.37s\n",
            "11:\tlearn: 0.2123994\ttotal: 839ms\tremaining: 2.31s\n",
            "12:\tlearn: 0.1966072\ttotal: 901ms\tremaining: 2.22s\n",
            "13:\tlearn: 0.1847487\ttotal: 965ms\tremaining: 2.14s\n",
            "14:\tlearn: 0.1733312\ttotal: 1.03s\tremaining: 2.06s\n",
            "15:\tlearn: 0.1594600\ttotal: 1.1s\tremaining: 2s\n",
            "16:\tlearn: 0.1495799\ttotal: 1.17s\tremaining: 1.92s\n",
            "17:\tlearn: 0.1434455\ttotal: 1.25s\tremaining: 1.88s\n",
            "18:\tlearn: 0.1353326\ttotal: 1.32s\tremaining: 1.81s\n",
            "19:\tlearn: 0.1297862\ttotal: 1.38s\tremaining: 1.73s\n",
            "20:\tlearn: 0.1255525\ttotal: 1.44s\tremaining: 1.65s\n",
            "21:\tlearn: 0.1222911\ttotal: 1.51s\tremaining: 1.58s\n",
            "22:\tlearn: 0.1182563\ttotal: 1.57s\tremaining: 1.5s\n",
            "23:\tlearn: 0.1121403\ttotal: 1.64s\tremaining: 1.44s\n",
            "24:\tlearn: 0.1088373\ttotal: 1.7s\tremaining: 1.36s\n",
            "25:\tlearn: 0.1065859\ttotal: 1.77s\tremaining: 1.29s\n",
            "26:\tlearn: 0.1042592\ttotal: 1.84s\tremaining: 1.22s\n",
            "27:\tlearn: 0.1020000\ttotal: 1.9s\tremaining: 1.15s\n",
            "28:\tlearn: 0.0992478\ttotal: 1.96s\tremaining: 1.08s\n",
            "29:\tlearn: 0.0961977\ttotal: 2.03s\tremaining: 1.01s\n",
            "30:\tlearn: 0.0936986\ttotal: 2.1s\tremaining: 949ms\n",
            "31:\tlearn: 0.0918383\ttotal: 2.17s\tremaining: 881ms\n",
            "32:\tlearn: 0.0897957\ttotal: 2.23s\tremaining: 811ms\n",
            "33:\tlearn: 0.0874511\ttotal: 2.31s\tremaining: 748ms\n",
            "34:\tlearn: 0.0856966\ttotal: 2.37s\tremaining: 678ms\n",
            "35:\tlearn: 0.0841787\ttotal: 2.44s\tremaining: 609ms\n",
            "36:\tlearn: 0.0832455\ttotal: 2.51s\tremaining: 542ms\n",
            "37:\tlearn: 0.0821296\ttotal: 2.58s\tremaining: 475ms\n",
            "38:\tlearn: 0.0795476\ttotal: 2.65s\tremaining: 408ms\n",
            "39:\tlearn: 0.0775170\ttotal: 2.72s\tremaining: 340ms\n",
            "40:\tlearn: 0.0764235\ttotal: 2.79s\tremaining: 272ms\n",
            "41:\tlearn: 0.0759833\ttotal: 2.86s\tremaining: 204ms\n",
            "42:\tlearn: 0.0754629\ttotal: 2.93s\tremaining: 136ms\n",
            "43:\tlearn: 0.0745043\ttotal: 2.99s\tremaining: 68.1ms\n",
            "44:\tlearn: 0.0738135\ttotal: 3.07s\tremaining: 0us\n",
            "0:\tlearn: 0.5900090\ttotal: 100ms\tremaining: 4.41s\n",
            "1:\tlearn: 0.5081979\ttotal: 166ms\tremaining: 3.58s\n",
            "2:\tlearn: 0.4372635\ttotal: 233ms\tremaining: 3.26s\n",
            "3:\tlearn: 0.4021220\ttotal: 294ms\tremaining: 3.01s\n",
            "4:\tlearn: 0.3574730\ttotal: 365ms\tremaining: 2.92s\n",
            "5:\tlearn: 0.3197877\ttotal: 430ms\tremaining: 2.79s\n",
            "6:\tlearn: 0.2991446\ttotal: 492ms\tremaining: 2.67s\n",
            "7:\tlearn: 0.2738463\ttotal: 556ms\tremaining: 2.57s\n",
            "8:\tlearn: 0.2593703\ttotal: 621ms\tremaining: 2.48s\n",
            "9:\tlearn: 0.2411576\ttotal: 685ms\tremaining: 2.4s\n",
            "10:\tlearn: 0.2269392\ttotal: 757ms\tremaining: 2.34s\n",
            "11:\tlearn: 0.2123994\ttotal: 827ms\tremaining: 2.27s\n",
            "12:\tlearn: 0.1966072\ttotal: 891ms\tremaining: 2.19s\n",
            "13:\tlearn: 0.1847487\ttotal: 969ms\tremaining: 2.15s\n",
            "14:\tlearn: 0.1733312\ttotal: 1.03s\tremaining: 2.07s\n",
            "15:\tlearn: 0.1594600\ttotal: 1.1s\tremaining: 2s\n",
            "16:\tlearn: 0.1495799\ttotal: 1.17s\tremaining: 1.93s\n",
            "17:\tlearn: 0.1434455\ttotal: 1.24s\tremaining: 1.86s\n",
            "18:\tlearn: 0.1353326\ttotal: 1.31s\tremaining: 1.79s\n",
            "19:\tlearn: 0.1297862\ttotal: 1.37s\tremaining: 1.71s\n",
            "20:\tlearn: 0.1255525\ttotal: 1.43s\tremaining: 1.64s\n",
            "21:\tlearn: 0.1222911\ttotal: 1.5s\tremaining: 1.56s\n",
            "22:\tlearn: 0.1182563\ttotal: 1.56s\tremaining: 1.49s\n",
            "23:\tlearn: 0.1121403\ttotal: 1.64s\tremaining: 1.43s\n",
            "24:\tlearn: 0.1088373\ttotal: 1.71s\tremaining: 1.36s\n",
            "25:\tlearn: 0.1065859\ttotal: 1.77s\tremaining: 1.29s\n",
            "26:\tlearn: 0.1042592\ttotal: 1.83s\tremaining: 1.22s\n",
            "27:\tlearn: 0.1020000\ttotal: 1.91s\tremaining: 1.16s\n",
            "28:\tlearn: 0.0992478\ttotal: 1.99s\tremaining: 1.1s\n",
            "29:\tlearn: 0.0961977\ttotal: 2.06s\tremaining: 1.03s\n",
            "30:\tlearn: 0.0936986\ttotal: 2.13s\tremaining: 961ms\n",
            "31:\tlearn: 0.0918383\ttotal: 2.19s\tremaining: 891ms\n",
            "32:\tlearn: 0.0897957\ttotal: 2.25s\tremaining: 820ms\n",
            "33:\tlearn: 0.0874511\ttotal: 2.31s\tremaining: 749ms\n",
            "34:\tlearn: 0.0856966\ttotal: 2.39s\tremaining: 682ms\n",
            "35:\tlearn: 0.0841787\ttotal: 2.46s\tremaining: 614ms\n",
            "36:\tlearn: 0.0832455\ttotal: 2.52s\tremaining: 545ms\n",
            "37:\tlearn: 0.0821296\ttotal: 2.58s\tremaining: 475ms\n",
            "38:\tlearn: 0.0795476\ttotal: 2.65s\tremaining: 408ms\n",
            "39:\tlearn: 0.0775170\ttotal: 2.72s\tremaining: 340ms\n",
            "40:\tlearn: 0.0764235\ttotal: 2.78s\tremaining: 271ms\n",
            "41:\tlearn: 0.0759833\ttotal: 2.84s\tremaining: 203ms\n",
            "42:\tlearn: 0.0754629\ttotal: 2.92s\tremaining: 136ms\n",
            "43:\tlearn: 0.0745043\ttotal: 3s\tremaining: 68.1ms\n",
            "44:\tlearn: 0.0738135\ttotal: 3.06s\tremaining: 0us\n",
            "0:\tlearn: 0.5959664\ttotal: 82.9ms\tremaining: 3.65s\n",
            "1:\tlearn: 0.5095069\ttotal: 147ms\tremaining: 3.16s\n",
            "2:\tlearn: 0.4506093\ttotal: 210ms\tremaining: 2.94s\n",
            "3:\tlearn: 0.4132259\ttotal: 271ms\tremaining: 2.78s\n",
            "4:\tlearn: 0.3753526\ttotal: 342ms\tremaining: 2.73s\n",
            "5:\tlearn: 0.3370758\ttotal: 402ms\tremaining: 2.62s\n",
            "6:\tlearn: 0.3134073\ttotal: 462ms\tremaining: 2.51s\n",
            "7:\tlearn: 0.2880847\ttotal: 525ms\tremaining: 2.43s\n",
            "8:\tlearn: 0.2705323\ttotal: 590ms\tremaining: 2.36s\n",
            "9:\tlearn: 0.2453123\ttotal: 652ms\tremaining: 2.28s\n",
            "10:\tlearn: 0.2365368\ttotal: 710ms\tremaining: 2.19s\n",
            "11:\tlearn: 0.2249622\ttotal: 770ms\tremaining: 2.12s\n",
            "12:\tlearn: 0.2121193\ttotal: 850ms\tremaining: 2.09s\n",
            "13:\tlearn: 0.1976050\ttotal: 913ms\tremaining: 2.02s\n",
            "14:\tlearn: 0.1813705\ttotal: 974ms\tremaining: 1.95s\n",
            "15:\tlearn: 0.1656094\ttotal: 1.04s\tremaining: 1.88s\n",
            "16:\tlearn: 0.1588890\ttotal: 1.1s\tremaining: 1.81s\n",
            "17:\tlearn: 0.1495960\ttotal: 1.16s\tremaining: 1.74s\n",
            "18:\tlearn: 0.1425638\ttotal: 1.22s\tremaining: 1.67s\n",
            "19:\tlearn: 0.1325886\ttotal: 1.29s\tremaining: 1.61s\n",
            "20:\tlearn: 0.1278060\ttotal: 1.35s\tremaining: 1.55s\n",
            "21:\tlearn: 0.1210223\ttotal: 1.41s\tremaining: 1.48s\n",
            "22:\tlearn: 0.1170010\ttotal: 1.48s\tremaining: 1.41s\n",
            "23:\tlearn: 0.1130319\ttotal: 1.55s\tremaining: 1.36s\n",
            "24:\tlearn: 0.1092584\ttotal: 1.61s\tremaining: 1.29s\n",
            "25:\tlearn: 0.1047695\ttotal: 1.67s\tremaining: 1.22s\n",
            "26:\tlearn: 0.1004440\ttotal: 1.73s\tremaining: 1.16s\n",
            "27:\tlearn: 0.0970761\ttotal: 1.8s\tremaining: 1.09s\n",
            "28:\tlearn: 0.0953945\ttotal: 1.88s\tremaining: 1.03s\n",
            "29:\tlearn: 0.0931618\ttotal: 1.94s\tremaining: 968ms\n",
            "30:\tlearn: 0.0913742\ttotal: 2s\tremaining: 902ms\n",
            "31:\tlearn: 0.0891065\ttotal: 2.06s\tremaining: 836ms\n",
            "32:\tlearn: 0.0874935\ttotal: 2.13s\tremaining: 774ms\n",
            "33:\tlearn: 0.0856683\ttotal: 2.24s\tremaining: 724ms\n",
            "34:\tlearn: 0.0843905\ttotal: 2.33s\tremaining: 667ms\n",
            "35:\tlearn: 0.0836097\ttotal: 2.43s\tremaining: 608ms\n",
            "36:\tlearn: 0.0824662\ttotal: 2.55s\tremaining: 552ms\n",
            "37:\tlearn: 0.0804712\ttotal: 2.68s\tremaining: 493ms\n",
            "38:\tlearn: 0.0793533\ttotal: 2.79s\tremaining: 430ms\n",
            "39:\tlearn: 0.0779950\ttotal: 2.92s\tremaining: 366ms\n",
            "40:\tlearn: 0.0768245\ttotal: 3.04s\tremaining: 297ms\n",
            "41:\tlearn: 0.0759298\ttotal: 3.17s\tremaining: 226ms\n",
            "42:\tlearn: 0.0749966\ttotal: 3.29s\tremaining: 153ms\n",
            "43:\tlearn: 0.0741276\ttotal: 3.41s\tremaining: 77.5ms\n",
            "44:\tlearn: 0.0732746\ttotal: 3.52s\tremaining: 0us\n",
            "0:\tlearn: 0.5948648\ttotal: 158ms\tremaining: 6.94s\n",
            "1:\tlearn: 0.5214261\ttotal: 277ms\tremaining: 5.96s\n",
            "2:\tlearn: 0.4700839\ttotal: 405ms\tremaining: 5.67s\n",
            "3:\tlearn: 0.4182583\ttotal: 523ms\tremaining: 5.36s\n",
            "4:\tlearn: 0.3741478\ttotal: 645ms\tremaining: 5.16s\n",
            "5:\tlearn: 0.3315078\ttotal: 775ms\tremaining: 5.04s\n",
            "6:\tlearn: 0.3142196\ttotal: 883ms\tremaining: 4.8s\n",
            "7:\tlearn: 0.2980177\ttotal: 999ms\tremaining: 4.62s\n",
            "8:\tlearn: 0.2791671\ttotal: 1.12s\tremaining: 4.47s\n",
            "9:\tlearn: 0.2597346\ttotal: 1.25s\tremaining: 4.36s\n",
            "10:\tlearn: 0.2292763\ttotal: 1.38s\tremaining: 4.25s\n",
            "11:\tlearn: 0.2132382\ttotal: 1.47s\tremaining: 4.05s\n",
            "12:\tlearn: 0.1970941\ttotal: 1.53s\tremaining: 3.77s\n",
            "13:\tlearn: 0.1852752\ttotal: 1.6s\tremaining: 3.54s\n",
            "14:\tlearn: 0.1736193\ttotal: 1.66s\tremaining: 3.32s\n",
            "15:\tlearn: 0.1591752\ttotal: 1.72s\tremaining: 3.12s\n",
            "16:\tlearn: 0.1510474\ttotal: 1.78s\tremaining: 2.94s\n",
            "17:\tlearn: 0.1442352\ttotal: 1.85s\tremaining: 2.77s\n",
            "18:\tlearn: 0.1350917\ttotal: 1.91s\tremaining: 2.62s\n",
            "19:\tlearn: 0.1269238\ttotal: 1.99s\tremaining: 2.48s\n",
            "20:\tlearn: 0.1205168\ttotal: 2.05s\tremaining: 2.34s\n",
            "21:\tlearn: 0.1164222\ttotal: 2.11s\tremaining: 2.21s\n",
            "22:\tlearn: 0.1116596\ttotal: 2.18s\tremaining: 2.08s\n",
            "23:\tlearn: 0.1070079\ttotal: 2.24s\tremaining: 1.96s\n",
            "24:\tlearn: 0.1042335\ttotal: 2.3s\tremaining: 1.84s\n",
            "25:\tlearn: 0.0996604\ttotal: 2.36s\tremaining: 1.73s\n",
            "26:\tlearn: 0.0976395\ttotal: 2.42s\tremaining: 1.62s\n",
            "27:\tlearn: 0.0953357\ttotal: 2.48s\tremaining: 1.51s\n",
            "28:\tlearn: 0.0924547\ttotal: 2.55s\tremaining: 1.41s\n",
            "29:\tlearn: 0.0912821\ttotal: 2.61s\tremaining: 1.31s\n",
            "30:\tlearn: 0.0900463\ttotal: 2.67s\tremaining: 1.21s\n",
            "31:\tlearn: 0.0878813\ttotal: 2.73s\tremaining: 1.11s\n",
            "32:\tlearn: 0.0869253\ttotal: 2.79s\tremaining: 1.02s\n",
            "33:\tlearn: 0.0860330\ttotal: 2.86s\tremaining: 926ms\n",
            "34:\tlearn: 0.0844862\ttotal: 2.92s\tremaining: 835ms\n",
            "35:\tlearn: 0.0831127\ttotal: 3s\tremaining: 749ms\n",
            "36:\tlearn: 0.0821266\ttotal: 3.06s\tremaining: 661ms\n",
            "37:\tlearn: 0.0814090\ttotal: 3.12s\tremaining: 575ms\n",
            "38:\tlearn: 0.0797555\ttotal: 3.19s\tremaining: 490ms\n",
            "39:\tlearn: 0.0786190\ttotal: 3.25s\tremaining: 406ms\n",
            "40:\tlearn: 0.0776882\ttotal: 3.31s\tremaining: 323ms\n",
            "41:\tlearn: 0.0767574\ttotal: 3.37s\tremaining: 241ms\n",
            "42:\tlearn: 0.0758443\ttotal: 3.44s\tremaining: 160ms\n",
            "43:\tlearn: 0.0753050\ttotal: 3.5s\tremaining: 79.4ms\n",
            "44:\tlearn: 0.0741887\ttotal: 3.56s\tremaining: 0us\n",
            "0:\tlearn: 0.5644095\ttotal: 83.5ms\tremaining: 3.67s\n",
            "1:\tlearn: 0.4968342\ttotal: 161ms\tremaining: 3.46s\n",
            "2:\tlearn: 0.4454674\ttotal: 223ms\tremaining: 3.13s\n",
            "3:\tlearn: 0.3951459\ttotal: 288ms\tremaining: 2.95s\n",
            "4:\tlearn: 0.3489620\ttotal: 355ms\tremaining: 2.84s\n",
            "5:\tlearn: 0.3232204\ttotal: 417ms\tremaining: 2.71s\n",
            "6:\tlearn: 0.2998467\ttotal: 477ms\tremaining: 2.59s\n",
            "7:\tlearn: 0.2774761\ttotal: 542ms\tremaining: 2.5s\n",
            "8:\tlearn: 0.2652485\ttotal: 603ms\tremaining: 2.41s\n",
            "9:\tlearn: 0.2481952\ttotal: 664ms\tremaining: 2.32s\n",
            "10:\tlearn: 0.2355184\ttotal: 721ms\tremaining: 2.23s\n",
            "11:\tlearn: 0.2115082\ttotal: 788ms\tremaining: 2.17s\n",
            "12:\tlearn: 0.1972827\ttotal: 852ms\tremaining: 2.1s\n",
            "13:\tlearn: 0.1851968\ttotal: 914ms\tremaining: 2.02s\n",
            "14:\tlearn: 0.1754060\ttotal: 974ms\tremaining: 1.95s\n",
            "15:\tlearn: 0.1654042\ttotal: 1.04s\tremaining: 1.89s\n",
            "16:\tlearn: 0.1554049\ttotal: 1.1s\tremaining: 1.82s\n",
            "17:\tlearn: 0.1490868\ttotal: 1.18s\tremaining: 1.77s\n",
            "18:\tlearn: 0.1414811\ttotal: 1.24s\tremaining: 1.69s\n",
            "19:\tlearn: 0.1350751\ttotal: 1.3s\tremaining: 1.63s\n",
            "20:\tlearn: 0.1271996\ttotal: 1.37s\tremaining: 1.56s\n",
            "21:\tlearn: 0.1196733\ttotal: 1.43s\tremaining: 1.5s\n",
            "22:\tlearn: 0.1166824\ttotal: 1.49s\tremaining: 1.43s\n",
            "23:\tlearn: 0.1123710\ttotal: 1.56s\tremaining: 1.36s\n",
            "24:\tlearn: 0.1097090\ttotal: 1.62s\tremaining: 1.29s\n",
            "25:\tlearn: 0.1051345\ttotal: 1.68s\tremaining: 1.23s\n",
            "26:\tlearn: 0.1021531\ttotal: 1.74s\tremaining: 1.16s\n",
            "27:\tlearn: 0.1000770\ttotal: 1.81s\tremaining: 1.1s\n",
            "28:\tlearn: 0.0976106\ttotal: 1.87s\tremaining: 1.03s\n",
            "29:\tlearn: 0.0957156\ttotal: 1.93s\tremaining: 966ms\n",
            "30:\tlearn: 0.0926913\ttotal: 1.99s\tremaining: 901ms\n",
            "31:\tlearn: 0.0914394\ttotal: 2.06s\tremaining: 837ms\n",
            "32:\tlearn: 0.0899402\ttotal: 2.12s\tremaining: 770ms\n",
            "33:\tlearn: 0.0884486\ttotal: 2.19s\tremaining: 709ms\n",
            "34:\tlearn: 0.0868853\ttotal: 2.25s\tremaining: 644ms\n",
            "35:\tlearn: 0.0856085\ttotal: 2.32s\tremaining: 580ms\n",
            "36:\tlearn: 0.0843341\ttotal: 2.38s\tremaining: 515ms\n",
            "37:\tlearn: 0.0832528\ttotal: 2.44s\tremaining: 449ms\n",
            "38:\tlearn: 0.0813256\ttotal: 2.5s\tremaining: 385ms\n",
            "39:\tlearn: 0.0807604\ttotal: 2.56s\tremaining: 321ms\n",
            "40:\tlearn: 0.0793462\ttotal: 2.62s\tremaining: 256ms\n",
            "41:\tlearn: 0.0781113\ttotal: 2.69s\tremaining: 192ms\n",
            "42:\tlearn: 0.0767514\ttotal: 2.75s\tremaining: 128ms\n",
            "43:\tlearn: 0.0755489\ttotal: 2.81s\tremaining: 64ms\n",
            "44:\tlearn: 0.0749659\ttotal: 2.88s\tremaining: 0us\n",
            "0:\tlearn: 0.5772940\ttotal: 85.8ms\tremaining: 3.77s\n",
            "1:\tlearn: 0.4995964\ttotal: 147ms\tremaining: 3.17s\n",
            "2:\tlearn: 0.4430793\ttotal: 209ms\tremaining: 2.93s\n",
            "3:\tlearn: 0.3984262\ttotal: 270ms\tremaining: 2.77s\n",
            "4:\tlearn: 0.3683769\ttotal: 335ms\tremaining: 2.68s\n",
            "5:\tlearn: 0.3198898\ttotal: 400ms\tremaining: 2.6s\n",
            "6:\tlearn: 0.2973977\ttotal: 460ms\tremaining: 2.5s\n",
            "7:\tlearn: 0.2755799\ttotal: 521ms\tremaining: 2.41s\n",
            "8:\tlearn: 0.2645139\ttotal: 586ms\tremaining: 2.34s\n",
            "9:\tlearn: 0.2493586\ttotal: 647ms\tremaining: 2.27s\n",
            "10:\tlearn: 0.2329960\ttotal: 709ms\tremaining: 2.19s\n",
            "11:\tlearn: 0.2164323\ttotal: 773ms\tremaining: 2.13s\n",
            "12:\tlearn: 0.2005383\ttotal: 841ms\tremaining: 2.07s\n",
            "13:\tlearn: 0.1836288\ttotal: 903ms\tremaining: 2s\n",
            "14:\tlearn: 0.1686336\ttotal: 965ms\tremaining: 1.93s\n",
            "15:\tlearn: 0.1607531\ttotal: 1.04s\tremaining: 1.88s\n",
            "16:\tlearn: 0.1499603\ttotal: 1.11s\tremaining: 1.83s\n",
            "17:\tlearn: 0.1415008\ttotal: 1.17s\tremaining: 1.76s\n",
            "18:\tlearn: 0.1342978\ttotal: 1.23s\tremaining: 1.68s\n",
            "19:\tlearn: 0.1287193\ttotal: 1.29s\tremaining: 1.61s\n",
            "20:\tlearn: 0.1212013\ttotal: 1.36s\tremaining: 1.55s\n",
            "21:\tlearn: 0.1179254\ttotal: 1.42s\tremaining: 1.48s\n",
            "22:\tlearn: 0.1173361\ttotal: 1.47s\tremaining: 1.41s\n",
            "23:\tlearn: 0.1128116\ttotal: 1.53s\tremaining: 1.34s\n",
            "24:\tlearn: 0.1096058\ttotal: 1.6s\tremaining: 1.28s\n",
            "25:\tlearn: 0.1068723\ttotal: 1.66s\tremaining: 1.21s\n",
            "26:\tlearn: 0.1028542\ttotal: 1.72s\tremaining: 1.15s\n",
            "27:\tlearn: 0.0984983\ttotal: 1.79s\tremaining: 1.08s\n",
            "28:\tlearn: 0.0957632\ttotal: 1.85s\tremaining: 1.02s\n",
            "29:\tlearn: 0.0935870\ttotal: 1.92s\tremaining: 958ms\n",
            "30:\tlearn: 0.0898098\ttotal: 1.98s\tremaining: 893ms\n",
            "31:\tlearn: 0.0879102\ttotal: 2.05s\tremaining: 833ms\n",
            "32:\tlearn: 0.0876996\ttotal: 2.12s\tremaining: 769ms\n",
            "33:\tlearn: 0.0859908\ttotal: 2.18s\tremaining: 704ms\n",
            "34:\tlearn: 0.0836739\ttotal: 2.24s\tremaining: 640ms\n",
            "35:\tlearn: 0.0816361\ttotal: 2.3s\tremaining: 575ms\n",
            "36:\tlearn: 0.0803937\ttotal: 2.37s\tremaining: 512ms\n",
            "37:\tlearn: 0.0788806\ttotal: 2.42s\tremaining: 447ms\n",
            "38:\tlearn: 0.0779470\ttotal: 2.48s\tremaining: 382ms\n",
            "39:\tlearn: 0.0766445\ttotal: 2.55s\tremaining: 318ms\n",
            "40:\tlearn: 0.0755002\ttotal: 2.62s\tremaining: 255ms\n",
            "41:\tlearn: 0.0743178\ttotal: 2.68s\tremaining: 192ms\n",
            "42:\tlearn: 0.0738345\ttotal: 2.74s\tremaining: 128ms\n",
            "43:\tlearn: 0.0731248\ttotal: 2.8s\tremaining: 63.7ms\n",
            "44:\tlearn: 0.0726610\ttotal: 2.87s\tremaining: 0us\n",
            "0:\tlearn: 0.5942313\ttotal: 81.1ms\tremaining: 3.57s\n",
            "1:\tlearn: 0.5161721\ttotal: 142ms\tremaining: 3.06s\n",
            "2:\tlearn: 0.4503600\ttotal: 206ms\tremaining: 2.88s\n",
            "3:\tlearn: 0.3936457\ttotal: 270ms\tremaining: 2.77s\n",
            "4:\tlearn: 0.3516683\ttotal: 337ms\tremaining: 2.69s\n",
            "5:\tlearn: 0.3206806\ttotal: 399ms\tremaining: 2.59s\n",
            "6:\tlearn: 0.2910715\ttotal: 462ms\tremaining: 2.51s\n",
            "7:\tlearn: 0.2735307\ttotal: 524ms\tremaining: 2.42s\n",
            "8:\tlearn: 0.2504357\ttotal: 590ms\tremaining: 2.36s\n",
            "9:\tlearn: 0.2336127\ttotal: 654ms\tremaining: 2.29s\n",
            "10:\tlearn: 0.2203617\ttotal: 712ms\tremaining: 2.2s\n",
            "11:\tlearn: 0.2038186\ttotal: 771ms\tremaining: 2.12s\n",
            "12:\tlearn: 0.1853454\ttotal: 838ms\tremaining: 2.06s\n",
            "13:\tlearn: 0.1688124\ttotal: 917ms\tremaining: 2.03s\n",
            "14:\tlearn: 0.1562381\ttotal: 979ms\tremaining: 1.96s\n",
            "15:\tlearn: 0.1467098\ttotal: 1.05s\tremaining: 1.9s\n",
            "16:\tlearn: 0.1384481\ttotal: 1.11s\tremaining: 1.83s\n",
            "17:\tlearn: 0.1360956\ttotal: 1.23s\tremaining: 1.85s\n",
            "18:\tlearn: 0.1311395\ttotal: 1.35s\tremaining: 1.85s\n",
            "19:\tlearn: 0.1251918\ttotal: 1.46s\tremaining: 1.83s\n",
            "20:\tlearn: 0.1185363\ttotal: 1.59s\tremaining: 1.82s\n",
            "21:\tlearn: 0.1125076\ttotal: 1.71s\tremaining: 1.78s\n",
            "22:\tlearn: 0.1098490\ttotal: 1.82s\tremaining: 1.74s\n",
            "23:\tlearn: 0.1059651\ttotal: 1.96s\tremaining: 1.71s\n",
            "24:\tlearn: 0.1035281\ttotal: 2.07s\tremaining: 1.66s\n",
            "25:\tlearn: 0.1009608\ttotal: 2.19s\tremaining: 1.6s\n",
            "26:\tlearn: 0.0981140\ttotal: 2.31s\tremaining: 1.54s\n",
            "27:\tlearn: 0.0948345\ttotal: 2.43s\tremaining: 1.48s\n",
            "28:\tlearn: 0.0921465\ttotal: 2.56s\tremaining: 1.41s\n",
            "29:\tlearn: 0.0894993\ttotal: 2.66s\tremaining: 1.33s\n",
            "30:\tlearn: 0.0880660\ttotal: 2.78s\tremaining: 1.25s\n",
            "31:\tlearn: 0.0871847\ttotal: 2.9s\tremaining: 1.18s\n",
            "32:\tlearn: 0.0869994\ttotal: 3.02s\tremaining: 1.1s\n",
            "33:\tlearn: 0.0855970\ttotal: 3.11s\tremaining: 1s\n",
            "34:\tlearn: 0.0846633\ttotal: 3.24s\tremaining: 925ms\n",
            "35:\tlearn: 0.0835038\ttotal: 3.35s\tremaining: 837ms\n",
            "36:\tlearn: 0.0818898\ttotal: 3.47s\tremaining: 751ms\n",
            "37:\tlearn: 0.0804797\ttotal: 3.57s\tremaining: 658ms\n",
            "38:\tlearn: 0.0789592\ttotal: 3.7s\tremaining: 569ms\n",
            "39:\tlearn: 0.0779542\ttotal: 3.81s\tremaining: 477ms\n",
            "40:\tlearn: 0.0771802\ttotal: 3.94s\tremaining: 385ms\n",
            "41:\tlearn: 0.0763296\ttotal: 4.06s\tremaining: 290ms\n",
            "42:\tlearn: 0.0758896\ttotal: 4.19s\tremaining: 195ms\n",
            "43:\tlearn: 0.0753013\ttotal: 4.31s\tremaining: 97.9ms\n",
            "44:\tlearn: 0.0746539\ttotal: 4.44s\tremaining: 0us\n",
            "0:\tlearn: 0.4623640\ttotal: 40.6ms\tremaining: 1.79s\n",
            "1:\tlearn: 0.3548798\ttotal: 71.9ms\tremaining: 1.54s\n",
            "2:\tlearn: 0.3012304\ttotal: 104ms\tremaining: 1.45s\n",
            "3:\tlearn: 0.2537516\ttotal: 134ms\tremaining: 1.38s\n",
            "4:\tlearn: 0.2271219\ttotal: 177ms\tremaining: 1.41s\n",
            "5:\tlearn: 0.2066534\ttotal: 210ms\tremaining: 1.36s\n",
            "6:\tlearn: 0.1917743\ttotal: 239ms\tremaining: 1.3s\n",
            "7:\tlearn: 0.1809256\ttotal: 272ms\tremaining: 1.26s\n",
            "8:\tlearn: 0.1712125\ttotal: 302ms\tremaining: 1.21s\n",
            "9:\tlearn: 0.1521067\ttotal: 331ms\tremaining: 1.16s\n",
            "10:\tlearn: 0.1376045\ttotal: 359ms\tremaining: 1.11s\n",
            "11:\tlearn: 0.1277026\ttotal: 390ms\tremaining: 1.07s\n",
            "12:\tlearn: 0.1155616\ttotal: 420ms\tremaining: 1.03s\n",
            "13:\tlearn: 0.1091066\ttotal: 450ms\tremaining: 996ms\n",
            "14:\tlearn: 0.1059114\ttotal: 484ms\tremaining: 968ms\n",
            "15:\tlearn: 0.0994540\ttotal: 514ms\tremaining: 932ms\n",
            "16:\tlearn: 0.0953090\ttotal: 544ms\tremaining: 896ms\n",
            "17:\tlearn: 0.0929856\ttotal: 573ms\tremaining: 860ms\n",
            "18:\tlearn: 0.0914137\ttotal: 603ms\tremaining: 825ms\n",
            "19:\tlearn: 0.0894712\ttotal: 634ms\tremaining: 793ms\n",
            "20:\tlearn: 0.0876468\ttotal: 665ms\tremaining: 760ms\n",
            "21:\tlearn: 0.0858035\ttotal: 703ms\tremaining: 735ms\n",
            "22:\tlearn: 0.0845667\ttotal: 733ms\tremaining: 701ms\n",
            "23:\tlearn: 0.0839791\ttotal: 762ms\tremaining: 666ms\n",
            "24:\tlearn: 0.0828137\ttotal: 792ms\tremaining: 633ms\n",
            "25:\tlearn: 0.0822050\ttotal: 821ms\tremaining: 600ms\n",
            "26:\tlearn: 0.0817379\ttotal: 850ms\tremaining: 567ms\n",
            "27:\tlearn: 0.0810637\ttotal: 881ms\tremaining: 535ms\n",
            "28:\tlearn: 0.0807256\ttotal: 914ms\tremaining: 504ms\n",
            "29:\tlearn: 0.0802640\ttotal: 945ms\tremaining: 472ms\n",
            "30:\tlearn: 0.0798442\ttotal: 974ms\tremaining: 440ms\n",
            "31:\tlearn: 0.0796415\ttotal: 1s\tremaining: 408ms\n",
            "32:\tlearn: 0.0792640\ttotal: 1.03s\tremaining: 376ms\n",
            "33:\tlearn: 0.0788695\ttotal: 1.06s\tremaining: 344ms\n",
            "34:\tlearn: 0.0786780\ttotal: 1.09s\tremaining: 312ms\n",
            "35:\tlearn: 0.0783678\ttotal: 1.13s\tremaining: 282ms\n",
            "36:\tlearn: 0.0783103\ttotal: 1.16s\tremaining: 250ms\n",
            "37:\tlearn: 0.0780884\ttotal: 1.2s\tremaining: 221ms\n",
            "38:\tlearn: 0.0779128\ttotal: 1.23s\tremaining: 189ms\n",
            "39:\tlearn: 0.0777479\ttotal: 1.26s\tremaining: 157ms\n",
            "40:\tlearn: 0.0776249\ttotal: 1.29s\tremaining: 126ms\n",
            "41:\tlearn: 0.0775687\ttotal: 1.32s\tremaining: 94.1ms\n",
            "42:\tlearn: 0.0774200\ttotal: 1.35s\tremaining: 62.9ms\n",
            "43:\tlearn: 0.0772527\ttotal: 1.38s\tremaining: 31.4ms\n",
            "44:\tlearn: 0.0769051\ttotal: 1.41s\tremaining: 0us\n",
            "0:\tlearn: 0.4623640\ttotal: 40.9ms\tremaining: 1.8s\n",
            "1:\tlearn: 0.3548798\ttotal: 72.4ms\tremaining: 1.56s\n",
            "2:\tlearn: 0.3012304\ttotal: 103ms\tremaining: 1.44s\n",
            "3:\tlearn: 0.2537516\ttotal: 133ms\tremaining: 1.37s\n",
            "4:\tlearn: 0.2271219\ttotal: 163ms\tremaining: 1.3s\n",
            "5:\tlearn: 0.2066534\ttotal: 193ms\tremaining: 1.25s\n",
            "6:\tlearn: 0.1917743\ttotal: 222ms\tremaining: 1.21s\n",
            "7:\tlearn: 0.1809256\ttotal: 256ms\tremaining: 1.18s\n",
            "8:\tlearn: 0.1712125\ttotal: 285ms\tremaining: 1.14s\n",
            "9:\tlearn: 0.1521067\ttotal: 318ms\tremaining: 1.11s\n",
            "10:\tlearn: 0.1376045\ttotal: 347ms\tremaining: 1.07s\n",
            "11:\tlearn: 0.1277026\ttotal: 377ms\tremaining: 1.04s\n",
            "12:\tlearn: 0.1155616\ttotal: 408ms\tremaining: 1s\n",
            "13:\tlearn: 0.1091066\ttotal: 440ms\tremaining: 974ms\n",
            "14:\tlearn: 0.1059114\ttotal: 475ms\tremaining: 951ms\n",
            "15:\tlearn: 0.0994540\ttotal: 507ms\tremaining: 919ms\n",
            "16:\tlearn: 0.0953090\ttotal: 538ms\tremaining: 886ms\n",
            "17:\tlearn: 0.0929856\ttotal: 568ms\tremaining: 852ms\n",
            "18:\tlearn: 0.0914137\ttotal: 598ms\tremaining: 818ms\n",
            "19:\tlearn: 0.0894712\ttotal: 628ms\tremaining: 785ms\n",
            "20:\tlearn: 0.0876468\ttotal: 658ms\tremaining: 752ms\n",
            "21:\tlearn: 0.0858035\ttotal: 702ms\tremaining: 734ms\n",
            "22:\tlearn: 0.0845667\ttotal: 740ms\tremaining: 708ms\n",
            "23:\tlearn: 0.0839791\ttotal: 769ms\tremaining: 673ms\n",
            "24:\tlearn: 0.0828137\ttotal: 799ms\tremaining: 639ms\n",
            "25:\tlearn: 0.0822050\ttotal: 828ms\tremaining: 605ms\n",
            "26:\tlearn: 0.0817379\ttotal: 857ms\tremaining: 571ms\n",
            "27:\tlearn: 0.0810637\ttotal: 888ms\tremaining: 539ms\n",
            "28:\tlearn: 0.0807256\ttotal: 923ms\tremaining: 510ms\n",
            "29:\tlearn: 0.0802640\ttotal: 954ms\tremaining: 477ms\n",
            "30:\tlearn: 0.0798442\ttotal: 983ms\tremaining: 444ms\n",
            "31:\tlearn: 0.0796415\ttotal: 1.01s\tremaining: 412ms\n",
            "32:\tlearn: 0.0792640\ttotal: 1.04s\tremaining: 379ms\n",
            "33:\tlearn: 0.0788695\ttotal: 1.07s\tremaining: 347ms\n",
            "34:\tlearn: 0.0786780\ttotal: 1.1s\tremaining: 315ms\n",
            "35:\tlearn: 0.0783678\ttotal: 1.14s\tremaining: 285ms\n",
            "36:\tlearn: 0.0783103\ttotal: 1.17s\tremaining: 253ms\n",
            "37:\tlearn: 0.0780884\ttotal: 1.2s\tremaining: 221ms\n",
            "38:\tlearn: 0.0779128\ttotal: 1.23s\tremaining: 189ms\n",
            "39:\tlearn: 0.0777479\ttotal: 1.26s\tremaining: 157ms\n",
            "40:\tlearn: 0.0776249\ttotal: 1.29s\tremaining: 126ms\n",
            "41:\tlearn: 0.0775687\ttotal: 1.32s\tremaining: 94.3ms\n",
            "42:\tlearn: 0.0774200\ttotal: 1.35s\tremaining: 63ms\n",
            "43:\tlearn: 0.0772527\ttotal: 1.39s\tremaining: 31.5ms\n",
            "44:\tlearn: 0.0769051\ttotal: 1.42s\tremaining: 0us\n",
            "0:\tlearn: 0.5022524\ttotal: 38.2ms\tremaining: 1.68s\n",
            "1:\tlearn: 0.3684927\ttotal: 67.2ms\tremaining: 1.44s\n",
            "2:\tlearn: 0.3053243\ttotal: 96ms\tremaining: 1.34s\n",
            "3:\tlearn: 0.2604015\ttotal: 125ms\tremaining: 1.28s\n",
            "4:\tlearn: 0.2330753\ttotal: 153ms\tremaining: 1.22s\n",
            "5:\tlearn: 0.2119812\ttotal: 182ms\tremaining: 1.18s\n",
            "6:\tlearn: 0.1888320\ttotal: 210ms\tremaining: 1.14s\n",
            "7:\tlearn: 0.1716966\ttotal: 245ms\tremaining: 1.14s\n",
            "8:\tlearn: 0.1588767\ttotal: 275ms\tremaining: 1.1s\n",
            "9:\tlearn: 0.1474898\ttotal: 303ms\tremaining: 1.06s\n",
            "10:\tlearn: 0.1355805\ttotal: 331ms\tremaining: 1.02s\n",
            "11:\tlearn: 0.1282226\ttotal: 359ms\tremaining: 987ms\n",
            "12:\tlearn: 0.1181794\ttotal: 388ms\tremaining: 954ms\n",
            "13:\tlearn: 0.1130831\ttotal: 417ms\tremaining: 922ms\n",
            "14:\tlearn: 0.1084257\ttotal: 444ms\tremaining: 888ms\n",
            "15:\tlearn: 0.1026925\ttotal: 477ms\tremaining: 865ms\n",
            "16:\tlearn: 0.0966914\ttotal: 506ms\tremaining: 833ms\n",
            "17:\tlearn: 0.0946631\ttotal: 534ms\tremaining: 801ms\n",
            "18:\tlearn: 0.0935954\ttotal: 562ms\tremaining: 769ms\n",
            "19:\tlearn: 0.0915640\ttotal: 591ms\tremaining: 739ms\n",
            "20:\tlearn: 0.0878956\ttotal: 620ms\tremaining: 709ms\n",
            "21:\tlearn: 0.0857845\ttotal: 649ms\tremaining: 678ms\n",
            "22:\tlearn: 0.0842960\ttotal: 679ms\tremaining: 650ms\n",
            "23:\tlearn: 0.0832403\ttotal: 711ms\tremaining: 622ms\n",
            "24:\tlearn: 0.0830476\ttotal: 738ms\tremaining: 590ms\n",
            "25:\tlearn: 0.0818003\ttotal: 767ms\tremaining: 560ms\n",
            "26:\tlearn: 0.0807671\ttotal: 796ms\tremaining: 531ms\n",
            "27:\tlearn: 0.0799652\ttotal: 825ms\tremaining: 501ms\n",
            "28:\tlearn: 0.0794669\ttotal: 856ms\tremaining: 473ms\n",
            "29:\tlearn: 0.0788339\ttotal: 889ms\tremaining: 444ms\n",
            "30:\tlearn: 0.0782312\ttotal: 921ms\tremaining: 416ms\n",
            "31:\tlearn: 0.0781920\ttotal: 948ms\tremaining: 385ms\n",
            "32:\tlearn: 0.0781652\ttotal: 983ms\tremaining: 358ms\n",
            "33:\tlearn: 0.0774736\ttotal: 1.01s\tremaining: 328ms\n",
            "34:\tlearn: 0.0771258\ttotal: 1.04s\tremaining: 298ms\n",
            "35:\tlearn: 0.0768457\ttotal: 1.07s\tremaining: 268ms\n",
            "36:\tlearn: 0.0765568\ttotal: 1.1s\tremaining: 239ms\n",
            "37:\tlearn: 0.0763135\ttotal: 1.13s\tremaining: 209ms\n",
            "38:\tlearn: 0.0759642\ttotal: 1.16s\tremaining: 179ms\n",
            "39:\tlearn: 0.0757910\ttotal: 1.19s\tremaining: 149ms\n",
            "40:\tlearn: 0.0757337\ttotal: 1.22s\tremaining: 119ms\n",
            "41:\tlearn: 0.0755379\ttotal: 1.25s\tremaining: 89.1ms\n",
            "42:\tlearn: 0.0753690\ttotal: 1.27s\tremaining: 59.3ms\n",
            "43:\tlearn: 0.0752919\ttotal: 1.3s\tremaining: 29.6ms\n",
            "44:\tlearn: 0.0750213\ttotal: 1.33s\tremaining: 0us\n",
            "0:\tlearn: 0.5057450\ttotal: 36.4ms\tremaining: 1.6s\n",
            "1:\tlearn: 0.4412734\ttotal: 71.9ms\tremaining: 1.54s\n",
            "2:\tlearn: 0.3734333\ttotal: 101ms\tremaining: 1.41s\n",
            "3:\tlearn: 0.3246776\ttotal: 128ms\tremaining: 1.32s\n",
            "4:\tlearn: 0.2736568\ttotal: 157ms\tremaining: 1.25s\n",
            "5:\tlearn: 0.2374621\ttotal: 185ms\tremaining: 1.2s\n",
            "6:\tlearn: 0.2049846\ttotal: 212ms\tremaining: 1.15s\n",
            "7:\tlearn: 0.1891567\ttotal: 240ms\tremaining: 1.11s\n",
            "8:\tlearn: 0.1749879\ttotal: 268ms\tremaining: 1.07s\n",
            "9:\tlearn: 0.1609427\ttotal: 300ms\tremaining: 1.05s\n",
            "10:\tlearn: 0.1480659\ttotal: 330ms\tremaining: 1.02s\n",
            "11:\tlearn: 0.1437450\ttotal: 357ms\tremaining: 982ms\n",
            "12:\tlearn: 0.1327593\ttotal: 389ms\tremaining: 957ms\n",
            "13:\tlearn: 0.1228579\ttotal: 417ms\tremaining: 923ms\n",
            "14:\tlearn: 0.1136182\ttotal: 446ms\tremaining: 891ms\n",
            "15:\tlearn: 0.1096172\ttotal: 474ms\tremaining: 859ms\n",
            "16:\tlearn: 0.1025667\ttotal: 505ms\tremaining: 832ms\n",
            "17:\tlearn: 0.0969327\ttotal: 547ms\tremaining: 821ms\n",
            "18:\tlearn: 0.0964092\ttotal: 575ms\tremaining: 786ms\n",
            "19:\tlearn: 0.0928475\ttotal: 604ms\tremaining: 754ms\n",
            "20:\tlearn: 0.0905650\ttotal: 632ms\tremaining: 722ms\n",
            "21:\tlearn: 0.0890575\ttotal: 661ms\tremaining: 691ms\n",
            "22:\tlearn: 0.0871759\ttotal: 689ms\tremaining: 659ms\n",
            "23:\tlearn: 0.0862851\ttotal: 724ms\tremaining: 633ms\n",
            "24:\tlearn: 0.0860986\ttotal: 753ms\tremaining: 603ms\n",
            "25:\tlearn: 0.0849853\ttotal: 783ms\tremaining: 572ms\n",
            "26:\tlearn: 0.0839881\ttotal: 811ms\tremaining: 541ms\n",
            "27:\tlearn: 0.0825140\ttotal: 840ms\tremaining: 510ms\n",
            "28:\tlearn: 0.0819098\ttotal: 869ms\tremaining: 480ms\n",
            "29:\tlearn: 0.0813377\ttotal: 899ms\tremaining: 449ms\n",
            "30:\tlearn: 0.0807157\ttotal: 933ms\tremaining: 422ms\n",
            "31:\tlearn: 0.0801890\ttotal: 963ms\tremaining: 391ms\n",
            "32:\tlearn: 0.0797365\ttotal: 992ms\tremaining: 361ms\n",
            "33:\tlearn: 0.0793230\ttotal: 1.02s\tremaining: 330ms\n",
            "34:\tlearn: 0.0791326\ttotal: 1.05s\tremaining: 300ms\n",
            "35:\tlearn: 0.0786317\ttotal: 1.08s\tremaining: 270ms\n",
            "36:\tlearn: 0.0782541\ttotal: 1.11s\tremaining: 240ms\n",
            "37:\tlearn: 0.0779786\ttotal: 1.15s\tremaining: 211ms\n",
            "38:\tlearn: 0.0778008\ttotal: 1.18s\tremaining: 181ms\n",
            "39:\tlearn: 0.0776462\ttotal: 1.21s\tremaining: 151ms\n",
            "40:\tlearn: 0.0774036\ttotal: 1.24s\tremaining: 121ms\n",
            "41:\tlearn: 0.0772810\ttotal: 1.26s\tremaining: 90.3ms\n",
            "42:\tlearn: 0.0770931\ttotal: 1.29s\tremaining: 60.1ms\n",
            "43:\tlearn: 0.0770060\ttotal: 1.32s\tremaining: 30ms\n",
            "44:\tlearn: 0.0769291\ttotal: 1.35s\tremaining: 0us\n",
            "0:\tlearn: 0.4634703\ttotal: 46.1ms\tremaining: 2.03s\n",
            "1:\tlearn: 0.3607262\ttotal: 89.8ms\tremaining: 1.93s\n",
            "2:\tlearn: 0.3077047\ttotal: 120ms\tremaining: 1.68s\n",
            "3:\tlearn: 0.2734139\ttotal: 150ms\tremaining: 1.53s\n",
            "4:\tlearn: 0.2229033\ttotal: 179ms\tremaining: 1.43s\n",
            "5:\tlearn: 0.1908648\ttotal: 208ms\tremaining: 1.35s\n",
            "6:\tlearn: 0.1679646\ttotal: 237ms\tremaining: 1.29s\n",
            "7:\tlearn: 0.1576813\ttotal: 267ms\tremaining: 1.23s\n",
            "8:\tlearn: 0.1433908\ttotal: 300ms\tremaining: 1.2s\n",
            "9:\tlearn: 0.1377944\ttotal: 330ms\tremaining: 1.16s\n",
            "10:\tlearn: 0.1274607\ttotal: 359ms\tremaining: 1.11s\n",
            "11:\tlearn: 0.1211760\ttotal: 389ms\tremaining: 1.07s\n",
            "12:\tlearn: 0.1129204\ttotal: 419ms\tremaining: 1.03s\n",
            "13:\tlearn: 0.1096864\ttotal: 447ms\tremaining: 991ms\n",
            "14:\tlearn: 0.1054423\ttotal: 477ms\tremaining: 954ms\n",
            "15:\tlearn: 0.1047937\ttotal: 511ms\tremaining: 925ms\n",
            "16:\tlearn: 0.1013422\ttotal: 540ms\tremaining: 889ms\n",
            "17:\tlearn: 0.0991068\ttotal: 575ms\tremaining: 863ms\n",
            "18:\tlearn: 0.0947451\ttotal: 606ms\tremaining: 830ms\n",
            "19:\tlearn: 0.0917794\ttotal: 637ms\tremaining: 796ms\n",
            "20:\tlearn: 0.0898748\ttotal: 666ms\tremaining: 762ms\n",
            "21:\tlearn: 0.0875186\ttotal: 696ms\tremaining: 727ms\n",
            "22:\tlearn: 0.0859924\ttotal: 729ms\tremaining: 698ms\n",
            "23:\tlearn: 0.0843649\ttotal: 760ms\tremaining: 665ms\n",
            "24:\tlearn: 0.0838569\ttotal: 789ms\tremaining: 631ms\n",
            "25:\tlearn: 0.0830535\ttotal: 818ms\tremaining: 598ms\n",
            "26:\tlearn: 0.0822765\ttotal: 848ms\tremaining: 565ms\n",
            "27:\tlearn: 0.0812311\ttotal: 880ms\tremaining: 534ms\n",
            "28:\tlearn: 0.0806713\ttotal: 909ms\tremaining: 501ms\n",
            "29:\tlearn: 0.0804439\ttotal: 941ms\tremaining: 471ms\n",
            "30:\tlearn: 0.0800618\ttotal: 971ms\tremaining: 438ms\n",
            "31:\tlearn: 0.0797604\ttotal: 1000ms\tremaining: 406ms\n",
            "32:\tlearn: 0.0795334\ttotal: 1.03s\tremaining: 374ms\n",
            "33:\tlearn: 0.0789332\ttotal: 1.06s\tremaining: 344ms\n",
            "34:\tlearn: 0.0786120\ttotal: 1.1s\tremaining: 314ms\n",
            "35:\tlearn: 0.0784331\ttotal: 1.13s\tremaining: 282ms\n",
            "36:\tlearn: 0.0780284\ttotal: 1.17s\tremaining: 252ms\n",
            "37:\tlearn: 0.0778775\ttotal: 1.2s\tremaining: 220ms\n",
            "38:\tlearn: 0.0777830\ttotal: 1.23s\tremaining: 189ms\n",
            "39:\tlearn: 0.0775820\ttotal: 1.25s\tremaining: 157ms\n",
            "40:\tlearn: 0.0774158\ttotal: 1.28s\tremaining: 125ms\n",
            "41:\tlearn: 0.0772473\ttotal: 1.31s\tremaining: 93.8ms\n",
            "42:\tlearn: 0.0771249\ttotal: 1.34s\tremaining: 62.4ms\n",
            "43:\tlearn: 0.0769757\ttotal: 1.37s\tremaining: 31.2ms\n",
            "44:\tlearn: 0.0768254\ttotal: 1.4s\tremaining: 0us\n",
            "0:\tlearn: 0.5070859\ttotal: 37.7ms\tremaining: 1.66s\n",
            "1:\tlearn: 0.3948028\ttotal: 72.6ms\tremaining: 1.56s\n",
            "2:\tlearn: 0.3526908\ttotal: 100ms\tremaining: 1.4s\n",
            "3:\tlearn: 0.3157839\ttotal: 128ms\tremaining: 1.31s\n",
            "4:\tlearn: 0.2769910\ttotal: 156ms\tremaining: 1.25s\n",
            "5:\tlearn: 0.2350705\ttotal: 185ms\tremaining: 1.2s\n",
            "6:\tlearn: 0.1897264\ttotal: 214ms\tremaining: 1.16s\n",
            "7:\tlearn: 0.1694743\ttotal: 242ms\tremaining: 1.12s\n",
            "8:\tlearn: 0.1623462\ttotal: 269ms\tremaining: 1.08s\n",
            "9:\tlearn: 0.1524054\ttotal: 303ms\tremaining: 1.06s\n",
            "10:\tlearn: 0.1404251\ttotal: 333ms\tremaining: 1.03s\n",
            "11:\tlearn: 0.1295167\ttotal: 364ms\tremaining: 1s\n",
            "12:\tlearn: 0.1210305\ttotal: 392ms\tremaining: 965ms\n",
            "13:\tlearn: 0.1170343\ttotal: 419ms\tremaining: 928ms\n",
            "14:\tlearn: 0.1124409\ttotal: 447ms\tremaining: 894ms\n",
            "15:\tlearn: 0.1073498\ttotal: 475ms\tremaining: 861ms\n",
            "16:\tlearn: 0.1008148\ttotal: 508ms\tremaining: 836ms\n",
            "17:\tlearn: 0.0976087\ttotal: 542ms\tremaining: 813ms\n",
            "18:\tlearn: 0.0943417\ttotal: 579ms\tremaining: 792ms\n",
            "19:\tlearn: 0.0921098\ttotal: 607ms\tremaining: 758ms\n",
            "20:\tlearn: 0.0897775\ttotal: 635ms\tremaining: 726ms\n",
            "21:\tlearn: 0.0883369\ttotal: 664ms\tremaining: 694ms\n",
            "22:\tlearn: 0.0853748\ttotal: 693ms\tremaining: 663ms\n",
            "23:\tlearn: 0.0836737\ttotal: 726ms\tremaining: 635ms\n",
            "24:\tlearn: 0.0828949\ttotal: 754ms\tremaining: 603ms\n",
            "25:\tlearn: 0.0813244\ttotal: 782ms\tremaining: 572ms\n",
            "26:\tlearn: 0.0802869\ttotal: 812ms\tremaining: 541ms\n",
            "27:\tlearn: 0.0800528\ttotal: 840ms\tremaining: 510ms\n",
            "28:\tlearn: 0.0793195\ttotal: 869ms\tremaining: 479ms\n",
            "29:\tlearn: 0.0789911\ttotal: 897ms\tremaining: 448ms\n",
            "30:\tlearn: 0.0786564\ttotal: 926ms\tremaining: 418ms\n",
            "31:\tlearn: 0.0784814\ttotal: 963ms\tremaining: 391ms\n",
            "32:\tlearn: 0.0780307\ttotal: 991ms\tremaining: 361ms\n",
            "33:\tlearn: 0.0774885\ttotal: 1.02s\tremaining: 330ms\n",
            "34:\tlearn: 0.0771767\ttotal: 1.05s\tremaining: 300ms\n",
            "35:\tlearn: 0.0769970\ttotal: 1.08s\tremaining: 269ms\n",
            "36:\tlearn: 0.0767310\ttotal: 1.11s\tremaining: 239ms\n",
            "37:\tlearn: 0.0764765\ttotal: 1.14s\tremaining: 209ms\n",
            "38:\tlearn: 0.0763680\ttotal: 1.17s\tremaining: 180ms\n",
            "39:\tlearn: 0.0762055\ttotal: 1.2s\tremaining: 150ms\n",
            "40:\tlearn: 0.0761436\ttotal: 1.23s\tremaining: 120ms\n",
            "41:\tlearn: 0.0759566\ttotal: 1.25s\tremaining: 89.5ms\n",
            "42:\tlearn: 0.0755952\ttotal: 1.28s\tremaining: 59.6ms\n",
            "43:\tlearn: 0.0754690\ttotal: 1.31s\tremaining: 29.8ms\n",
            "44:\tlearn: 0.0753895\ttotal: 1.34s\tremaining: 0us\n",
            "0:\tlearn: 0.4925401\ttotal: 38.7ms\tremaining: 1.7s\n",
            "1:\tlearn: 0.3815757\ttotal: 68.7ms\tremaining: 1.48s\n",
            "2:\tlearn: 0.2997041\ttotal: 97.9ms\tremaining: 1.37s\n",
            "3:\tlearn: 0.2594583\ttotal: 127ms\tremaining: 1.3s\n",
            "4:\tlearn: 0.2324259\ttotal: 156ms\tremaining: 1.25s\n",
            "5:\tlearn: 0.2076895\ttotal: 184ms\tremaining: 1.2s\n",
            "6:\tlearn: 0.1821815\ttotal: 214ms\tremaining: 1.16s\n",
            "7:\tlearn: 0.1633560\ttotal: 247ms\tremaining: 1.14s\n",
            "8:\tlearn: 0.1503735\ttotal: 276ms\tremaining: 1.1s\n",
            "9:\tlearn: 0.1419852\ttotal: 305ms\tremaining: 1.07s\n",
            "10:\tlearn: 0.1319845\ttotal: 333ms\tremaining: 1.03s\n",
            "11:\tlearn: 0.1295254\ttotal: 362ms\tremaining: 996ms\n",
            "12:\tlearn: 0.1178595\ttotal: 392ms\tremaining: 964ms\n",
            "13:\tlearn: 0.1136093\ttotal: 420ms\tremaining: 930ms\n",
            "14:\tlearn: 0.1123868\ttotal: 449ms\tremaining: 898ms\n",
            "15:\tlearn: 0.1060191\ttotal: 483ms\tremaining: 876ms\n",
            "16:\tlearn: 0.1011984\ttotal: 512ms\tremaining: 844ms\n",
            "17:\tlearn: 0.0979231\ttotal: 541ms\tremaining: 812ms\n",
            "18:\tlearn: 0.0954128\ttotal: 570ms\tremaining: 780ms\n",
            "19:\tlearn: 0.0928752\ttotal: 599ms\tremaining: 749ms\n",
            "20:\tlearn: 0.0922654\ttotal: 627ms\tremaining: 717ms\n",
            "21:\tlearn: 0.0896036\ttotal: 663ms\tremaining: 693ms\n",
            "22:\tlearn: 0.0885674\ttotal: 691ms\tremaining: 661ms\n",
            "23:\tlearn: 0.0867311\ttotal: 721ms\tremaining: 631ms\n",
            "24:\tlearn: 0.0851703\ttotal: 751ms\tremaining: 601ms\n",
            "25:\tlearn: 0.0842783\ttotal: 780ms\tremaining: 570ms\n",
            "26:\tlearn: 0.0835186\ttotal: 809ms\tremaining: 539ms\n",
            "27:\tlearn: 0.0823571\ttotal: 838ms\tremaining: 509ms\n",
            "28:\tlearn: 0.0816479\ttotal: 871ms\tremaining: 480ms\n",
            "29:\tlearn: 0.0811873\ttotal: 912ms\tremaining: 456ms\n",
            "30:\tlearn: 0.0806930\ttotal: 941ms\tremaining: 425ms\n",
            "31:\tlearn: 0.0804362\ttotal: 970ms\tremaining: 394ms\n",
            "32:\tlearn: 0.0797163\ttotal: 999ms\tremaining: 363ms\n",
            "33:\tlearn: 0.0792802\ttotal: 1.03s\tremaining: 333ms\n",
            "34:\tlearn: 0.0790194\ttotal: 1.06s\tremaining: 302ms\n",
            "35:\tlearn: 0.0785842\ttotal: 1.09s\tremaining: 273ms\n",
            "36:\tlearn: 0.0783248\ttotal: 1.12s\tremaining: 242ms\n",
            "37:\tlearn: 0.0780221\ttotal: 1.15s\tremaining: 212ms\n",
            "38:\tlearn: 0.0778154\ttotal: 1.18s\tremaining: 181ms\n",
            "39:\tlearn: 0.0776313\ttotal: 1.21s\tremaining: 151ms\n",
            "40:\tlearn: 0.0773091\ttotal: 1.24s\tremaining: 121ms\n",
            "41:\tlearn: 0.0772145\ttotal: 1.26s\tremaining: 90.3ms\n",
            "42:\tlearn: 0.0771258\ttotal: 1.3s\tremaining: 60.3ms\n",
            "43:\tlearn: 0.0770216\ttotal: 1.32s\tremaining: 30.1ms\n",
            "44:\tlearn: 0.0768425\ttotal: 1.35s\tremaining: 0us\n",
            "0:\tlearn: 0.6122832\ttotal: 112ms\tremaining: 4.93s\n",
            "1:\tlearn: 0.5380245\ttotal: 196ms\tremaining: 4.22s\n",
            "2:\tlearn: 0.4904082\ttotal: 278ms\tremaining: 3.9s\n",
            "3:\tlearn: 0.4189998\ttotal: 374ms\tremaining: 3.84s\n",
            "4:\tlearn: 0.3792741\ttotal: 458ms\tremaining: 3.67s\n",
            "5:\tlearn: 0.3560866\ttotal: 538ms\tremaining: 3.5s\n",
            "6:\tlearn: 0.3258202\ttotal: 633ms\tremaining: 3.44s\n",
            "7:\tlearn: 0.2998254\ttotal: 732ms\tremaining: 3.38s\n",
            "8:\tlearn: 0.2829586\ttotal: 813ms\tremaining: 3.25s\n",
            "9:\tlearn: 0.2634617\ttotal: 903ms\tremaining: 3.16s\n",
            "10:\tlearn: 0.2455277\ttotal: 987ms\tremaining: 3.05s\n",
            "11:\tlearn: 0.2311036\ttotal: 1.07s\tremaining: 2.94s\n",
            "12:\tlearn: 0.2166682\ttotal: 1.16s\tremaining: 2.85s\n",
            "13:\tlearn: 0.2020699\ttotal: 1.24s\tremaining: 2.75s\n",
            "14:\tlearn: 0.1899441\ttotal: 1.32s\tremaining: 2.65s\n",
            "15:\tlearn: 0.1799093\ttotal: 1.41s\tremaining: 2.55s\n",
            "16:\tlearn: 0.1722839\ttotal: 1.49s\tremaining: 2.45s\n",
            "17:\tlearn: 0.1654711\ttotal: 1.57s\tremaining: 2.35s\n",
            "18:\tlearn: 0.1583590\ttotal: 1.65s\tremaining: 2.26s\n",
            "19:\tlearn: 0.1519473\ttotal: 1.75s\tremaining: 2.19s\n",
            "20:\tlearn: 0.1470767\ttotal: 1.83s\tremaining: 2.09s\n",
            "21:\tlearn: 0.1416310\ttotal: 1.91s\tremaining: 2s\n",
            "22:\tlearn: 0.1362569\ttotal: 1.99s\tremaining: 1.91s\n",
            "23:\tlearn: 0.1319440\ttotal: 2.08s\tremaining: 1.82s\n",
            "24:\tlearn: 0.1284257\ttotal: 2.16s\tremaining: 1.73s\n",
            "25:\tlearn: 0.1239745\ttotal: 2.25s\tremaining: 1.64s\n",
            "26:\tlearn: 0.1209304\ttotal: 2.33s\tremaining: 1.55s\n",
            "27:\tlearn: 0.1181387\ttotal: 2.42s\tremaining: 1.47s\n",
            "28:\tlearn: 0.1159225\ttotal: 2.5s\tremaining: 1.38s\n",
            "29:\tlearn: 0.1129768\ttotal: 2.58s\tremaining: 1.29s\n",
            "30:\tlearn: 0.1107372\ttotal: 2.67s\tremaining: 1.21s\n",
            "31:\tlearn: 0.1093260\ttotal: 2.76s\tremaining: 1.12s\n",
            "32:\tlearn: 0.1069819\ttotal: 2.85s\tremaining: 1.03s\n",
            "33:\tlearn: 0.1053497\ttotal: 2.94s\tremaining: 950ms\n",
            "34:\tlearn: 0.1038373\ttotal: 3.02s\tremaining: 863ms\n",
            "35:\tlearn: 0.1016693\ttotal: 3.1s\tremaining: 776ms\n",
            "36:\tlearn: 0.0998810\ttotal: 3.19s\tremaining: 690ms\n",
            "37:\tlearn: 0.0984349\ttotal: 3.28s\tremaining: 604ms\n",
            "38:\tlearn: 0.0974183\ttotal: 3.36s\tremaining: 517ms\n",
            "39:\tlearn: 0.0958438\ttotal: 3.45s\tremaining: 431ms\n",
            "40:\tlearn: 0.0948646\ttotal: 3.54s\tremaining: 345ms\n",
            "41:\tlearn: 0.0936641\ttotal: 3.62s\tremaining: 259ms\n",
            "42:\tlearn: 0.0930591\ttotal: 3.71s\tremaining: 172ms\n",
            "43:\tlearn: 0.0921066\ttotal: 3.86s\tremaining: 87.8ms\n",
            "44:\tlearn: 0.0911619\ttotal: 4.03s\tremaining: 0us\n",
            "0:\tlearn: 0.6122832\ttotal: 110ms\tremaining: 4.84s\n",
            "1:\tlearn: 0.5380245\ttotal: 192ms\tremaining: 4.14s\n",
            "2:\tlearn: 0.4904082\ttotal: 271ms\tremaining: 3.79s\n",
            "3:\tlearn: 0.4189998\ttotal: 366ms\tremaining: 3.75s\n",
            "4:\tlearn: 0.3792741\ttotal: 449ms\tremaining: 3.59s\n",
            "5:\tlearn: 0.3560866\ttotal: 529ms\tremaining: 3.44s\n",
            "6:\tlearn: 0.3258202\ttotal: 631ms\tremaining: 3.42s\n",
            "7:\tlearn: 0.2998254\ttotal: 716ms\tremaining: 3.31s\n",
            "8:\tlearn: 0.2829586\ttotal: 800ms\tremaining: 3.2s\n",
            "9:\tlearn: 0.2634617\ttotal: 889ms\tremaining: 3.11s\n",
            "10:\tlearn: 0.2455277\ttotal: 973ms\tremaining: 3.01s\n",
            "11:\tlearn: 0.2311036\ttotal: 1.05s\tremaining: 2.89s\n",
            "12:\tlearn: 0.2166682\ttotal: 1.14s\tremaining: 2.81s\n",
            "13:\tlearn: 0.2020699\ttotal: 1.22s\tremaining: 2.71s\n",
            "14:\tlearn: 0.1899441\ttotal: 1.31s\tremaining: 2.61s\n",
            "15:\tlearn: 0.1799093\ttotal: 1.39s\tremaining: 2.52s\n",
            "16:\tlearn: 0.1722839\ttotal: 1.47s\tremaining: 2.42s\n",
            "17:\tlearn: 0.1654711\ttotal: 1.55s\tremaining: 2.32s\n",
            "18:\tlearn: 0.1583590\ttotal: 1.65s\tremaining: 2.25s\n",
            "19:\tlearn: 0.1519473\ttotal: 1.73s\tremaining: 2.16s\n",
            "20:\tlearn: 0.1470767\ttotal: 1.81s\tremaining: 2.07s\n",
            "21:\tlearn: 0.1416310\ttotal: 1.9s\tremaining: 1.99s\n",
            "22:\tlearn: 0.1362569\ttotal: 1.98s\tremaining: 1.89s\n",
            "23:\tlearn: 0.1319440\ttotal: 2.06s\tremaining: 1.8s\n",
            "24:\tlearn: 0.1284257\ttotal: 2.15s\tremaining: 1.72s\n",
            "25:\tlearn: 0.1239745\ttotal: 2.23s\tremaining: 1.63s\n",
            "26:\tlearn: 0.1209304\ttotal: 2.31s\tremaining: 1.54s\n",
            "27:\tlearn: 0.1181387\ttotal: 2.4s\tremaining: 1.46s\n",
            "28:\tlearn: 0.1159225\ttotal: 2.48s\tremaining: 1.37s\n",
            "29:\tlearn: 0.1129768\ttotal: 2.56s\tremaining: 1.28s\n",
            "30:\tlearn: 0.1107372\ttotal: 2.66s\tremaining: 1.2s\n",
            "31:\tlearn: 0.1093260\ttotal: 2.74s\tremaining: 1.11s\n",
            "32:\tlearn: 0.1069819\ttotal: 2.83s\tremaining: 1.03s\n",
            "33:\tlearn: 0.1053497\ttotal: 2.92s\tremaining: 945ms\n",
            "34:\tlearn: 0.1038373\ttotal: 3s\tremaining: 858ms\n",
            "35:\tlearn: 0.1016693\ttotal: 3.09s\tremaining: 772ms\n",
            "36:\tlearn: 0.0998810\ttotal: 3.17s\tremaining: 687ms\n",
            "37:\tlearn: 0.0984349\ttotal: 3.26s\tremaining: 600ms\n",
            "38:\tlearn: 0.0974183\ttotal: 3.34s\tremaining: 514ms\n",
            "39:\tlearn: 0.0958438\ttotal: 3.43s\tremaining: 429ms\n",
            "40:\tlearn: 0.0948646\ttotal: 3.52s\tremaining: 343ms\n",
            "41:\tlearn: 0.0936641\ttotal: 3.6s\tremaining: 257ms\n",
            "42:\tlearn: 0.0930591\ttotal: 3.7s\tremaining: 172ms\n",
            "43:\tlearn: 0.0921066\ttotal: 3.79s\tremaining: 86.2ms\n",
            "44:\tlearn: 0.0911619\ttotal: 3.88s\tremaining: 0us\n",
            "0:\tlearn: 0.6142135\ttotal: 104ms\tremaining: 4.56s\n",
            "1:\tlearn: 0.5602855\ttotal: 184ms\tremaining: 3.95s\n",
            "2:\tlearn: 0.5067675\ttotal: 263ms\tremaining: 3.68s\n",
            "3:\tlearn: 0.4642701\ttotal: 348ms\tremaining: 3.56s\n",
            "4:\tlearn: 0.4207794\ttotal: 431ms\tremaining: 3.45s\n",
            "5:\tlearn: 0.3915323\ttotal: 520ms\tremaining: 3.38s\n",
            "6:\tlearn: 0.3651014\ttotal: 604ms\tremaining: 3.28s\n",
            "7:\tlearn: 0.3317809\ttotal: 687ms\tremaining: 3.18s\n",
            "8:\tlearn: 0.3118041\ttotal: 768ms\tremaining: 3.07s\n",
            "9:\tlearn: 0.2898342\ttotal: 856ms\tremaining: 2.99s\n",
            "10:\tlearn: 0.2667762\ttotal: 935ms\tremaining: 2.89s\n",
            "11:\tlearn: 0.2535811\ttotal: 1.01s\tremaining: 2.79s\n",
            "12:\tlearn: 0.2338571\ttotal: 1.1s\tremaining: 2.7s\n",
            "13:\tlearn: 0.2212543\ttotal: 1.18s\tremaining: 2.6s\n",
            "14:\tlearn: 0.2065938\ttotal: 1.25s\tremaining: 2.51s\n",
            "15:\tlearn: 0.1944262\ttotal: 1.34s\tremaining: 2.43s\n",
            "16:\tlearn: 0.1821162\ttotal: 1.42s\tremaining: 2.34s\n",
            "17:\tlearn: 0.1748759\ttotal: 1.51s\tremaining: 2.26s\n",
            "18:\tlearn: 0.1667842\ttotal: 1.59s\tremaining: 2.18s\n",
            "19:\tlearn: 0.1604617\ttotal: 1.67s\tremaining: 2.09s\n",
            "20:\tlearn: 0.1561488\ttotal: 1.75s\tremaining: 2s\n",
            "21:\tlearn: 0.1465143\ttotal: 1.84s\tremaining: 1.92s\n",
            "22:\tlearn: 0.1389556\ttotal: 1.92s\tremaining: 1.83s\n",
            "23:\tlearn: 0.1350837\ttotal: 2s\tremaining: 1.75s\n",
            "24:\tlearn: 0.1312514\ttotal: 2.08s\tremaining: 1.66s\n",
            "25:\tlearn: 0.1282117\ttotal: 2.16s\tremaining: 1.58s\n",
            "26:\tlearn: 0.1233709\ttotal: 2.24s\tremaining: 1.49s\n",
            "27:\tlearn: 0.1201151\ttotal: 2.32s\tremaining: 1.41s\n",
            "28:\tlearn: 0.1172296\ttotal: 2.4s\tremaining: 1.32s\n",
            "29:\tlearn: 0.1141372\ttotal: 2.48s\tremaining: 1.24s\n",
            "30:\tlearn: 0.1122635\ttotal: 2.58s\tremaining: 1.16s\n",
            "31:\tlearn: 0.1092208\ttotal: 2.66s\tremaining: 1.08s\n",
            "32:\tlearn: 0.1075515\ttotal: 2.74s\tremaining: 995ms\n",
            "33:\tlearn: 0.1055135\ttotal: 2.89s\tremaining: 935ms\n",
            "34:\tlearn: 0.1037576\ttotal: 3.05s\tremaining: 871ms\n",
            "35:\tlearn: 0.1018028\ttotal: 3.21s\tremaining: 803ms\n",
            "36:\tlearn: 0.1007242\ttotal: 3.36s\tremaining: 727ms\n",
            "37:\tlearn: 0.0991939\ttotal: 3.51s\tremaining: 647ms\n",
            "38:\tlearn: 0.0980363\ttotal: 3.67s\tremaining: 564ms\n",
            "39:\tlearn: 0.0969660\ttotal: 3.83s\tremaining: 479ms\n",
            "40:\tlearn: 0.0954833\ttotal: 3.98s\tremaining: 388ms\n",
            "41:\tlearn: 0.0944649\ttotal: 4.13s\tremaining: 295ms\n",
            "42:\tlearn: 0.0933103\ttotal: 4.27s\tremaining: 199ms\n",
            "43:\tlearn: 0.0920486\ttotal: 4.43s\tremaining: 101ms\n",
            "44:\tlearn: 0.0912333\ttotal: 4.59s\tremaining: 0us\n",
            "0:\tlearn: 0.6025104\ttotal: 180ms\tremaining: 7.93s\n",
            "1:\tlearn: 0.5378082\ttotal: 334ms\tremaining: 7.17s\n",
            "2:\tlearn: 0.4778865\ttotal: 495ms\tremaining: 6.92s\n",
            "3:\tlearn: 0.4370793\ttotal: 659ms\tremaining: 6.76s\n",
            "4:\tlearn: 0.4012074\ttotal: 760ms\tremaining: 6.08s\n",
            "5:\tlearn: 0.3607003\ttotal: 840ms\tremaining: 5.46s\n",
            "6:\tlearn: 0.3403730\ttotal: 916ms\tremaining: 4.97s\n",
            "7:\tlearn: 0.3089881\ttotal: 1s\tremaining: 4.64s\n",
            "8:\tlearn: 0.2959270\ttotal: 1.08s\tremaining: 4.34s\n",
            "9:\tlearn: 0.2742008\ttotal: 1.18s\tremaining: 4.13s\n",
            "10:\tlearn: 0.2575590\ttotal: 1.26s\tremaining: 3.91s\n",
            "11:\tlearn: 0.2410913\ttotal: 1.35s\tremaining: 3.71s\n",
            "12:\tlearn: 0.2279616\ttotal: 1.43s\tremaining: 3.52s\n",
            "13:\tlearn: 0.2173855\ttotal: 1.51s\tremaining: 3.35s\n",
            "14:\tlearn: 0.2071079\ttotal: 1.59s\tremaining: 3.18s\n",
            "15:\tlearn: 0.1962610\ttotal: 1.67s\tremaining: 3.03s\n",
            "16:\tlearn: 0.1852939\ttotal: 1.75s\tremaining: 2.89s\n",
            "17:\tlearn: 0.1779068\ttotal: 1.83s\tremaining: 2.75s\n",
            "18:\tlearn: 0.1675408\ttotal: 1.91s\tremaining: 2.62s\n",
            "19:\tlearn: 0.1607422\ttotal: 2s\tremaining: 2.5s\n",
            "20:\tlearn: 0.1541292\ttotal: 2.08s\tremaining: 2.38s\n",
            "21:\tlearn: 0.1476478\ttotal: 2.17s\tremaining: 2.27s\n",
            "22:\tlearn: 0.1416872\ttotal: 2.25s\tremaining: 2.16s\n",
            "23:\tlearn: 0.1370633\ttotal: 2.33s\tremaining: 2.04s\n",
            "24:\tlearn: 0.1336714\ttotal: 2.42s\tremaining: 1.93s\n",
            "25:\tlearn: 0.1281627\ttotal: 2.5s\tremaining: 1.83s\n",
            "26:\tlearn: 0.1256268\ttotal: 2.58s\tremaining: 1.72s\n",
            "27:\tlearn: 0.1220494\ttotal: 2.66s\tremaining: 1.61s\n",
            "28:\tlearn: 0.1188564\ttotal: 2.74s\tremaining: 1.51s\n",
            "29:\tlearn: 0.1168494\ttotal: 2.82s\tremaining: 1.41s\n",
            "30:\tlearn: 0.1145473\ttotal: 2.9s\tremaining: 1.31s\n",
            "31:\tlearn: 0.1113639\ttotal: 2.99s\tremaining: 1.21s\n",
            "32:\tlearn: 0.1090774\ttotal: 3.07s\tremaining: 1.11s\n",
            "33:\tlearn: 0.1073187\ttotal: 3.15s\tremaining: 1.02s\n",
            "34:\tlearn: 0.1059521\ttotal: 3.24s\tremaining: 925ms\n",
            "35:\tlearn: 0.1043686\ttotal: 3.31s\tremaining: 829ms\n",
            "36:\tlearn: 0.1029247\ttotal: 3.39s\tremaining: 734ms\n",
            "37:\tlearn: 0.1009699\ttotal: 3.48s\tremaining: 642ms\n",
            "38:\tlearn: 0.0996205\ttotal: 3.56s\tremaining: 548ms\n",
            "39:\tlearn: 0.0979421\ttotal: 3.64s\tremaining: 455ms\n",
            "40:\tlearn: 0.0970572\ttotal: 3.73s\tremaining: 364ms\n",
            "41:\tlearn: 0.0960422\ttotal: 3.8s\tremaining: 272ms\n",
            "42:\tlearn: 0.0951004\ttotal: 3.88s\tremaining: 181ms\n",
            "43:\tlearn: 0.0940696\ttotal: 3.97s\tremaining: 90.2ms\n",
            "44:\tlearn: 0.0933008\ttotal: 4.05s\tremaining: 0us\n",
            "0:\tlearn: 0.6075785\ttotal: 104ms\tremaining: 4.6s\n",
            "1:\tlearn: 0.5190498\ttotal: 187ms\tremaining: 4.02s\n",
            "2:\tlearn: 0.4700615\ttotal: 267ms\tremaining: 3.74s\n",
            "3:\tlearn: 0.4252287\ttotal: 353ms\tremaining: 3.62s\n",
            "4:\tlearn: 0.3902127\ttotal: 431ms\tremaining: 3.45s\n",
            "5:\tlearn: 0.3603945\ttotal: 511ms\tremaining: 3.32s\n",
            "6:\tlearn: 0.3335478\ttotal: 599ms\tremaining: 3.25s\n",
            "7:\tlearn: 0.3143721\ttotal: 689ms\tremaining: 3.19s\n",
            "8:\tlearn: 0.2919441\ttotal: 769ms\tremaining: 3.08s\n",
            "9:\tlearn: 0.2724715\ttotal: 854ms\tremaining: 2.99s\n",
            "10:\tlearn: 0.2559569\ttotal: 933ms\tremaining: 2.88s\n",
            "11:\tlearn: 0.2366536\ttotal: 1.01s\tremaining: 2.79s\n",
            "12:\tlearn: 0.2212579\ttotal: 1.1s\tremaining: 2.71s\n",
            "13:\tlearn: 0.2031632\ttotal: 1.18s\tremaining: 2.62s\n",
            "14:\tlearn: 0.1913462\ttotal: 1.26s\tremaining: 2.53s\n",
            "15:\tlearn: 0.1805628\ttotal: 1.37s\tremaining: 2.48s\n",
            "16:\tlearn: 0.1648660\ttotal: 1.45s\tremaining: 2.39s\n",
            "17:\tlearn: 0.1559195\ttotal: 1.53s\tremaining: 2.3s\n",
            "18:\tlearn: 0.1475565\ttotal: 1.63s\tremaining: 2.22s\n",
            "19:\tlearn: 0.1405591\ttotal: 1.73s\tremaining: 2.16s\n",
            "20:\tlearn: 0.1349997\ttotal: 1.8s\tremaining: 2.06s\n",
            "21:\tlearn: 0.1306927\ttotal: 1.89s\tremaining: 1.97s\n",
            "22:\tlearn: 0.1255600\ttotal: 1.96s\tremaining: 1.88s\n",
            "23:\tlearn: 0.1216443\ttotal: 2.04s\tremaining: 1.79s\n",
            "24:\tlearn: 0.1182926\ttotal: 2.13s\tremaining: 1.7s\n",
            "25:\tlearn: 0.1150816\ttotal: 2.2s\tremaining: 1.61s\n",
            "26:\tlearn: 0.1129364\ttotal: 2.28s\tremaining: 1.52s\n",
            "27:\tlearn: 0.1106476\ttotal: 2.37s\tremaining: 1.44s\n",
            "28:\tlearn: 0.1081311\ttotal: 2.45s\tremaining: 1.35s\n",
            "29:\tlearn: 0.1058342\ttotal: 2.53s\tremaining: 1.26s\n",
            "30:\tlearn: 0.1034898\ttotal: 2.61s\tremaining: 1.18s\n",
            "31:\tlearn: 0.1019137\ttotal: 2.7s\tremaining: 1.1s\n",
            "32:\tlearn: 0.1000802\ttotal: 2.78s\tremaining: 1.01s\n",
            "33:\tlearn: 0.0989179\ttotal: 2.86s\tremaining: 926ms\n",
            "34:\tlearn: 0.0978338\ttotal: 2.94s\tremaining: 840ms\n",
            "35:\tlearn: 0.0962667\ttotal: 3.02s\tremaining: 755ms\n",
            "36:\tlearn: 0.0950138\ttotal: 3.11s\tremaining: 672ms\n",
            "37:\tlearn: 0.0938465\ttotal: 3.19s\tremaining: 587ms\n",
            "38:\tlearn: 0.0929187\ttotal: 3.27s\tremaining: 503ms\n",
            "39:\tlearn: 0.0911521\ttotal: 3.35s\tremaining: 419ms\n",
            "40:\tlearn: 0.0901059\ttotal: 3.43s\tremaining: 335ms\n",
            "41:\tlearn: 0.0891187\ttotal: 3.51s\tremaining: 251ms\n",
            "42:\tlearn: 0.0881312\ttotal: 3.6s\tremaining: 167ms\n",
            "43:\tlearn: 0.0874651\ttotal: 3.68s\tremaining: 83.6ms\n",
            "44:\tlearn: 0.0866728\ttotal: 3.77s\tremaining: 0us\n",
            "0:\tlearn: 0.5966079\ttotal: 106ms\tremaining: 4.67s\n",
            "1:\tlearn: 0.5263228\ttotal: 189ms\tremaining: 4.07s\n",
            "2:\tlearn: 0.4555978\ttotal: 274ms\tremaining: 3.83s\n",
            "3:\tlearn: 0.4139749\ttotal: 356ms\tremaining: 3.64s\n",
            "4:\tlearn: 0.3801825\ttotal: 437ms\tremaining: 3.49s\n",
            "5:\tlearn: 0.3454709\ttotal: 530ms\tremaining: 3.45s\n",
            "6:\tlearn: 0.3234273\ttotal: 614ms\tremaining: 3.33s\n",
            "7:\tlearn: 0.3010172\ttotal: 696ms\tremaining: 3.22s\n",
            "8:\tlearn: 0.2793783\ttotal: 777ms\tremaining: 3.11s\n",
            "9:\tlearn: 0.2602234\ttotal: 865ms\tremaining: 3.03s\n",
            "10:\tlearn: 0.2444098\ttotal: 945ms\tremaining: 2.92s\n",
            "11:\tlearn: 0.2294295\ttotal: 1.02s\tremaining: 2.82s\n",
            "12:\tlearn: 0.2168724\ttotal: 1.11s\tremaining: 2.73s\n",
            "13:\tlearn: 0.2011268\ttotal: 1.19s\tremaining: 2.64s\n",
            "14:\tlearn: 0.1928273\ttotal: 1.27s\tremaining: 2.55s\n",
            "15:\tlearn: 0.1797835\ttotal: 1.36s\tremaining: 2.46s\n",
            "16:\tlearn: 0.1695329\ttotal: 1.44s\tremaining: 2.37s\n",
            "17:\tlearn: 0.1626708\ttotal: 1.53s\tremaining: 2.3s\n",
            "18:\tlearn: 0.1537316\ttotal: 1.62s\tremaining: 2.22s\n",
            "19:\tlearn: 0.1459576\ttotal: 1.7s\tremaining: 2.13s\n",
            "20:\tlearn: 0.1389446\ttotal: 1.79s\tremaining: 2.05s\n",
            "21:\tlearn: 0.1354075\ttotal: 1.94s\tremaining: 2.03s\n",
            "22:\tlearn: 0.1295079\ttotal: 2.1s\tremaining: 2s\n",
            "23:\tlearn: 0.1269204\ttotal: 2.26s\tremaining: 1.98s\n",
            "24:\tlearn: 0.1233708\ttotal: 2.42s\tremaining: 1.94s\n",
            "25:\tlearn: 0.1175809\ttotal: 2.6s\tremaining: 1.9s\n",
            "26:\tlearn: 0.1154076\ttotal: 2.75s\tremaining: 1.84s\n",
            "27:\tlearn: 0.1129333\ttotal: 2.92s\tremaining: 1.77s\n",
            "28:\tlearn: 0.1100359\ttotal: 3.07s\tremaining: 1.69s\n",
            "29:\tlearn: 0.1077093\ttotal: 3.23s\tremaining: 1.62s\n",
            "30:\tlearn: 0.1052749\ttotal: 3.39s\tremaining: 1.53s\n",
            "31:\tlearn: 0.1036018\ttotal: 3.56s\tremaining: 1.44s\n",
            "32:\tlearn: 0.1017264\ttotal: 3.7s\tremaining: 1.35s\n",
            "33:\tlearn: 0.1000549\ttotal: 3.87s\tremaining: 1.25s\n",
            "34:\tlearn: 0.0987213\ttotal: 4.01s\tremaining: 1.15s\n",
            "35:\tlearn: 0.0979481\ttotal: 4.15s\tremaining: 1.04s\n",
            "36:\tlearn: 0.0970844\ttotal: 4.31s\tremaining: 932ms\n",
            "37:\tlearn: 0.0957498\ttotal: 4.47s\tremaining: 824ms\n",
            "38:\tlearn: 0.0950131\ttotal: 4.63s\tremaining: 713ms\n",
            "39:\tlearn: 0.0940162\ttotal: 4.8s\tremaining: 600ms\n",
            "40:\tlearn: 0.0926437\ttotal: 4.96s\tremaining: 484ms\n",
            "41:\tlearn: 0.0917174\ttotal: 5.1s\tremaining: 365ms\n",
            "42:\tlearn: 0.0914277\ttotal: 5.18s\tremaining: 241ms\n",
            "43:\tlearn: 0.0908062\ttotal: 5.26s\tremaining: 120ms\n",
            "44:\tlearn: 0.0899540\ttotal: 5.35s\tremaining: 0us\n",
            "0:\tlearn: 0.6022846\ttotal: 104ms\tremaining: 4.59s\n",
            "1:\tlearn: 0.5305904\ttotal: 187ms\tremaining: 4.02s\n",
            "2:\tlearn: 0.4561077\ttotal: 272ms\tremaining: 3.81s\n",
            "3:\tlearn: 0.4123613\ttotal: 356ms\tremaining: 3.65s\n",
            "4:\tlearn: 0.3537480\ttotal: 443ms\tremaining: 3.54s\n",
            "5:\tlearn: 0.3207978\ttotal: 524ms\tremaining: 3.41s\n",
            "6:\tlearn: 0.2967258\ttotal: 612ms\tremaining: 3.32s\n",
            "7:\tlearn: 0.2802141\ttotal: 692ms\tremaining: 3.2s\n",
            "8:\tlearn: 0.2640685\ttotal: 774ms\tremaining: 3.1s\n",
            "9:\tlearn: 0.2505863\ttotal: 866ms\tremaining: 3.03s\n",
            "10:\tlearn: 0.2387771\ttotal: 943ms\tremaining: 2.92s\n",
            "11:\tlearn: 0.2264969\ttotal: 1.02s\tremaining: 2.81s\n",
            "12:\tlearn: 0.2151058\ttotal: 1.11s\tremaining: 2.72s\n",
            "13:\tlearn: 0.1991419\ttotal: 1.19s\tremaining: 2.63s\n",
            "14:\tlearn: 0.1879863\ttotal: 1.27s\tremaining: 2.54s\n",
            "15:\tlearn: 0.1759090\ttotal: 1.35s\tremaining: 2.45s\n",
            "16:\tlearn: 0.1668318\ttotal: 1.43s\tremaining: 2.36s\n",
            "17:\tlearn: 0.1592592\ttotal: 1.51s\tremaining: 2.27s\n",
            "18:\tlearn: 0.1524119\ttotal: 1.59s\tremaining: 2.18s\n",
            "19:\tlearn: 0.1472230\ttotal: 1.67s\tremaining: 2.09s\n",
            "20:\tlearn: 0.1426345\ttotal: 1.75s\tremaining: 2s\n",
            "21:\tlearn: 0.1374377\ttotal: 1.85s\tremaining: 1.93s\n",
            "22:\tlearn: 0.1331005\ttotal: 1.93s\tremaining: 1.85s\n",
            "23:\tlearn: 0.1285282\ttotal: 2.01s\tremaining: 1.76s\n",
            "24:\tlearn: 0.1251686\ttotal: 2.09s\tremaining: 1.67s\n",
            "25:\tlearn: 0.1222888\ttotal: 2.17s\tremaining: 1.58s\n",
            "26:\tlearn: 0.1183028\ttotal: 2.25s\tremaining: 1.5s\n",
            "27:\tlearn: 0.1156436\ttotal: 2.33s\tremaining: 1.42s\n",
            "28:\tlearn: 0.1139367\ttotal: 2.42s\tremaining: 1.33s\n",
            "29:\tlearn: 0.1104988\ttotal: 2.5s\tremaining: 1.25s\n",
            "30:\tlearn: 0.1083991\ttotal: 2.58s\tremaining: 1.17s\n",
            "31:\tlearn: 0.1060757\ttotal: 2.66s\tremaining: 1.08s\n",
            "32:\tlearn: 0.1037527\ttotal: 2.74s\tremaining: 997ms\n",
            "33:\tlearn: 0.1023975\ttotal: 2.83s\tremaining: 916ms\n",
            "34:\tlearn: 0.1007654\ttotal: 2.92s\tremaining: 834ms\n",
            "35:\tlearn: 0.0996048\ttotal: 3s\tremaining: 750ms\n",
            "36:\tlearn: 0.0986005\ttotal: 3.08s\tremaining: 667ms\n",
            "37:\tlearn: 0.0972031\ttotal: 3.16s\tremaining: 583ms\n",
            "38:\tlearn: 0.0961190\ttotal: 3.24s\tremaining: 499ms\n",
            "39:\tlearn: 0.0953090\ttotal: 3.32s\tremaining: 416ms\n",
            "40:\tlearn: 0.0937386\ttotal: 3.41s\tremaining: 333ms\n",
            "41:\tlearn: 0.0930719\ttotal: 3.49s\tremaining: 249ms\n",
            "42:\tlearn: 0.0920461\ttotal: 3.57s\tremaining: 166ms\n",
            "43:\tlearn: 0.0912013\ttotal: 3.65s\tremaining: 82.9ms\n",
            "44:\tlearn: 0.0901911\ttotal: 3.73s\tremaining: 0us\n",
            "0:\tlearn: 0.5057396\ttotal: 97.9ms\tremaining: 4.3s\n",
            "1:\tlearn: 0.3714871\ttotal: 182ms\tremaining: 3.91s\n",
            "2:\tlearn: 0.2959651\ttotal: 257ms\tremaining: 3.6s\n",
            "3:\tlearn: 0.2497975\ttotal: 349ms\tremaining: 3.58s\n",
            "4:\tlearn: 0.2101490\ttotal: 476ms\tremaining: 3.81s\n",
            "5:\tlearn: 0.1831924\ttotal: 623ms\tremaining: 4.05s\n",
            "6:\tlearn: 0.1690106\ttotal: 764ms\tremaining: 4.15s\n",
            "7:\tlearn: 0.1562341\ttotal: 908ms\tremaining: 4.2s\n",
            "8:\tlearn: 0.1416379\ttotal: 1.06s\tremaining: 4.24s\n",
            "9:\tlearn: 0.1289098\ttotal: 1.21s\tremaining: 4.25s\n",
            "10:\tlearn: 0.1130325\ttotal: 1.35s\tremaining: 4.19s\n",
            "11:\tlearn: 0.1064924\ttotal: 1.5s\tremaining: 4.12s\n",
            "12:\tlearn: 0.1028282\ttotal: 1.64s\tremaining: 4.03s\n",
            "13:\tlearn: 0.0923483\ttotal: 1.77s\tremaining: 3.93s\n",
            "14:\tlearn: 0.0858996\ttotal: 1.92s\tremaining: 3.83s\n",
            "15:\tlearn: 0.0775272\ttotal: 2.06s\tremaining: 3.73s\n",
            "16:\tlearn: 0.0742290\ttotal: 2.19s\tremaining: 3.6s\n",
            "17:\tlearn: 0.0718636\ttotal: 2.33s\tremaining: 3.49s\n",
            "18:\tlearn: 0.0694851\ttotal: 2.47s\tremaining: 3.38s\n",
            "19:\tlearn: 0.0660378\ttotal: 2.6s\tremaining: 3.25s\n",
            "20:\tlearn: 0.0646110\ttotal: 2.74s\tremaining: 3.14s\n",
            "21:\tlearn: 0.0618670\ttotal: 2.89s\tremaining: 3.02s\n",
            "22:\tlearn: 0.0603310\ttotal: 3.01s\tremaining: 2.88s\n",
            "23:\tlearn: 0.0590677\ttotal: 3.16s\tremaining: 2.76s\n",
            "24:\tlearn: 0.0573723\ttotal: 3.3s\tremaining: 2.64s\n",
            "25:\tlearn: 0.0550771\ttotal: 3.45s\tremaining: 2.52s\n",
            "26:\tlearn: 0.0544369\ttotal: 3.59s\tremaining: 2.4s\n",
            "27:\tlearn: 0.0541183\ttotal: 3.72s\tremaining: 2.26s\n",
            "28:\tlearn: 0.0524760\ttotal: 3.79s\tremaining: 2.09s\n",
            "29:\tlearn: 0.0520699\ttotal: 3.87s\tremaining: 1.93s\n",
            "30:\tlearn: 0.0512673\ttotal: 3.94s\tremaining: 1.78s\n",
            "31:\tlearn: 0.0507740\ttotal: 4.01s\tremaining: 1.63s\n",
            "32:\tlearn: 0.0500261\ttotal: 4.09s\tremaining: 1.49s\n",
            "33:\tlearn: 0.0495522\ttotal: 4.16s\tremaining: 1.35s\n",
            "34:\tlearn: 0.0487433\ttotal: 4.24s\tremaining: 1.21s\n",
            "35:\tlearn: 0.0484120\ttotal: 4.32s\tremaining: 1.08s\n",
            "36:\tlearn: 0.0480440\ttotal: 4.4s\tremaining: 952ms\n",
            "37:\tlearn: 0.0478896\ttotal: 4.47s\tremaining: 824ms\n",
            "38:\tlearn: 0.0476957\ttotal: 4.54s\tremaining: 699ms\n",
            "39:\tlearn: 0.0475430\ttotal: 4.62s\tremaining: 578ms\n",
            "40:\tlearn: 0.0472717\ttotal: 4.69s\tremaining: 458ms\n",
            "41:\tlearn: 0.0471684\ttotal: 4.77s\tremaining: 340ms\n",
            "42:\tlearn: 0.0470506\ttotal: 4.84s\tremaining: 225ms\n",
            "43:\tlearn: 0.0468177\ttotal: 4.92s\tremaining: 112ms\n",
            "44:\tlearn: 0.0467804\ttotal: 4.99s\tremaining: 0us\n",
            "0:\tlearn: 0.5057396\ttotal: 97.5ms\tremaining: 4.29s\n",
            "1:\tlearn: 0.3714871\ttotal: 182ms\tremaining: 3.92s\n",
            "2:\tlearn: 0.2959651\ttotal: 256ms\tremaining: 3.59s\n",
            "3:\tlearn: 0.2497975\ttotal: 334ms\tremaining: 3.42s\n",
            "4:\tlearn: 0.2101490\ttotal: 406ms\tremaining: 3.25s\n",
            "5:\tlearn: 0.1831924\ttotal: 479ms\tremaining: 3.11s\n",
            "6:\tlearn: 0.1690106\ttotal: 558ms\tremaining: 3.03s\n",
            "7:\tlearn: 0.1562341\ttotal: 629ms\tremaining: 2.91s\n",
            "8:\tlearn: 0.1416379\ttotal: 702ms\tremaining: 2.81s\n",
            "9:\tlearn: 0.1289098\ttotal: 780ms\tremaining: 2.73s\n",
            "10:\tlearn: 0.1130325\ttotal: 853ms\tremaining: 2.64s\n",
            "11:\tlearn: 0.1064924\ttotal: 929ms\tremaining: 2.56s\n",
            "12:\tlearn: 0.1028282\ttotal: 1.01s\tremaining: 2.48s\n",
            "13:\tlearn: 0.0923483\ttotal: 1.08s\tremaining: 2.39s\n",
            "14:\tlearn: 0.0858996\ttotal: 1.16s\tremaining: 2.32s\n",
            "15:\tlearn: 0.0775272\ttotal: 1.25s\tremaining: 2.26s\n",
            "16:\tlearn: 0.0742290\ttotal: 1.32s\tremaining: 2.17s\n",
            "17:\tlearn: 0.0718636\ttotal: 1.39s\tremaining: 2.09s\n",
            "18:\tlearn: 0.0694851\ttotal: 1.47s\tremaining: 2.01s\n",
            "19:\tlearn: 0.0660378\ttotal: 1.54s\tremaining: 1.93s\n",
            "20:\tlearn: 0.0646110\ttotal: 1.61s\tremaining: 1.84s\n",
            "21:\tlearn: 0.0618670\ttotal: 1.69s\tremaining: 1.77s\n",
            "22:\tlearn: 0.0603310\ttotal: 1.76s\tremaining: 1.69s\n",
            "23:\tlearn: 0.0590677\ttotal: 1.83s\tremaining: 1.6s\n",
            "24:\tlearn: 0.0573723\ttotal: 1.91s\tremaining: 1.53s\n",
            "25:\tlearn: 0.0550771\ttotal: 1.98s\tremaining: 1.45s\n",
            "26:\tlearn: 0.0544369\ttotal: 2.06s\tremaining: 1.37s\n",
            "27:\tlearn: 0.0541183\ttotal: 2.13s\tremaining: 1.29s\n",
            "28:\tlearn: 0.0524760\ttotal: 2.23s\tremaining: 1.23s\n",
            "29:\tlearn: 0.0520699\ttotal: 2.36s\tremaining: 1.18s\n",
            "30:\tlearn: 0.0512673\ttotal: 2.5s\tremaining: 1.13s\n",
            "31:\tlearn: 0.0507740\ttotal: 2.64s\tremaining: 1.07s\n",
            "32:\tlearn: 0.0500261\ttotal: 2.78s\tremaining: 1.01s\n",
            "33:\tlearn: 0.0495522\ttotal: 2.94s\tremaining: 950ms\n",
            "34:\tlearn: 0.0487433\ttotal: 3.08s\tremaining: 879ms\n",
            "35:\tlearn: 0.0484120\ttotal: 3.23s\tremaining: 806ms\n",
            "36:\tlearn: 0.0480440\ttotal: 3.35s\tremaining: 724ms\n",
            "37:\tlearn: 0.0478896\ttotal: 3.49s\tremaining: 643ms\n",
            "38:\tlearn: 0.0476957\ttotal: 3.63s\tremaining: 558ms\n",
            "39:\tlearn: 0.0475430\ttotal: 3.77s\tremaining: 471ms\n",
            "40:\tlearn: 0.0472717\ttotal: 3.92s\tremaining: 382ms\n",
            "41:\tlearn: 0.0471684\ttotal: 4.05s\tremaining: 289ms\n",
            "42:\tlearn: 0.0470506\ttotal: 4.19s\tremaining: 195ms\n",
            "43:\tlearn: 0.0468177\ttotal: 4.33s\tremaining: 98.4ms\n",
            "44:\tlearn: 0.0467804\ttotal: 4.47s\tremaining: 0us\n",
            "0:\tlearn: 0.5202129\ttotal: 108ms\tremaining: 4.75s\n",
            "1:\tlearn: 0.3617318\ttotal: 181ms\tremaining: 3.9s\n",
            "2:\tlearn: 0.2743782\ttotal: 256ms\tremaining: 3.58s\n",
            "3:\tlearn: 0.2151665\ttotal: 334ms\tremaining: 3.43s\n",
            "4:\tlearn: 0.1909644\ttotal: 407ms\tremaining: 3.25s\n",
            "5:\tlearn: 0.1754499\ttotal: 478ms\tremaining: 3.1s\n",
            "6:\tlearn: 0.1524593\ttotal: 556ms\tremaining: 3.02s\n",
            "7:\tlearn: 0.1422267\ttotal: 627ms\tremaining: 2.9s\n",
            "8:\tlearn: 0.1365281\ttotal: 778ms\tremaining: 3.11s\n",
            "9:\tlearn: 0.1231877\ttotal: 916ms\tremaining: 3.21s\n",
            "10:\tlearn: 0.1175346\ttotal: 1.05s\tremaining: 3.25s\n",
            "11:\tlearn: 0.1094472\ttotal: 1.19s\tremaining: 3.27s\n",
            "12:\tlearn: 0.0985468\ttotal: 1.33s\tremaining: 3.27s\n",
            "13:\tlearn: 0.0956680\ttotal: 1.47s\tremaining: 3.25s\n",
            "14:\tlearn: 0.0858704\ttotal: 1.62s\tremaining: 3.23s\n",
            "15:\tlearn: 0.0814614\ttotal: 1.75s\tremaining: 3.17s\n",
            "16:\tlearn: 0.0779688\ttotal: 1.88s\tremaining: 3.1s\n",
            "17:\tlearn: 0.0737103\ttotal: 2.01s\tremaining: 3.02s\n",
            "18:\tlearn: 0.0717958\ttotal: 2.15s\tremaining: 2.94s\n",
            "19:\tlearn: 0.0680086\ttotal: 2.3s\tremaining: 2.87s\n",
            "20:\tlearn: 0.0672320\ttotal: 2.44s\tremaining: 2.79s\n",
            "21:\tlearn: 0.0635079\ttotal: 2.58s\tremaining: 2.7s\n",
            "22:\tlearn: 0.0594989\ttotal: 2.74s\tremaining: 2.62s\n",
            "23:\tlearn: 0.0588778\ttotal: 2.86s\tremaining: 2.5s\n",
            "24:\tlearn: 0.0574966\ttotal: 3s\tremaining: 2.4s\n",
            "25:\tlearn: 0.0556143\ttotal: 3.15s\tremaining: 2.3s\n",
            "26:\tlearn: 0.0553188\ttotal: 3.3s\tremaining: 2.2s\n",
            "27:\tlearn: 0.0549304\ttotal: 3.44s\tremaining: 2.09s\n",
            "28:\tlearn: 0.0539053\ttotal: 3.59s\tremaining: 1.98s\n",
            "29:\tlearn: 0.0532208\ttotal: 3.73s\tremaining: 1.87s\n",
            "30:\tlearn: 0.0515812\ttotal: 3.87s\tremaining: 1.75s\n",
            "31:\tlearn: 0.0510810\ttotal: 4.01s\tremaining: 1.63s\n",
            "32:\tlearn: 0.0503164\ttotal: 4.12s\tremaining: 1.5s\n",
            "33:\tlearn: 0.0499412\ttotal: 4.19s\tremaining: 1.35s\n",
            "34:\tlearn: 0.0492580\ttotal: 4.27s\tremaining: 1.22s\n",
            "35:\tlearn: 0.0490923\ttotal: 4.35s\tremaining: 1.09s\n",
            "36:\tlearn: 0.0486118\ttotal: 4.43s\tremaining: 957ms\n",
            "37:\tlearn: 0.0484623\ttotal: 4.5s\tremaining: 829ms\n",
            "38:\tlearn: 0.0481182\ttotal: 4.58s\tremaining: 705ms\n",
            "39:\tlearn: 0.0479776\ttotal: 4.65s\tremaining: 582ms\n",
            "40:\tlearn: 0.0475737\ttotal: 4.72s\tremaining: 461ms\n",
            "41:\tlearn: 0.0474477\ttotal: 4.8s\tremaining: 343ms\n",
            "42:\tlearn: 0.0471802\ttotal: 4.88s\tremaining: 227ms\n",
            "43:\tlearn: 0.0468708\ttotal: 4.95s\tremaining: 113ms\n",
            "44:\tlearn: 0.0467154\ttotal: 5.03s\tremaining: 0us\n",
            "0:\tlearn: 0.4926524\ttotal: 96.2ms\tremaining: 4.23s\n",
            "1:\tlearn: 0.4009784\ttotal: 168ms\tremaining: 3.61s\n",
            "2:\tlearn: 0.3193151\ttotal: 242ms\tremaining: 3.38s\n",
            "3:\tlearn: 0.2640712\ttotal: 319ms\tremaining: 3.27s\n",
            "4:\tlearn: 0.2268474\ttotal: 391ms\tremaining: 3.13s\n",
            "5:\tlearn: 0.1984495\ttotal: 462ms\tremaining: 3s\n",
            "6:\tlearn: 0.1732634\ttotal: 539ms\tremaining: 2.92s\n",
            "7:\tlearn: 0.1547633\ttotal: 611ms\tremaining: 2.83s\n",
            "8:\tlearn: 0.1427501\ttotal: 684ms\tremaining: 2.74s\n",
            "9:\tlearn: 0.1270801\ttotal: 760ms\tremaining: 2.66s\n",
            "10:\tlearn: 0.1168915\ttotal: 831ms\tremaining: 2.57s\n",
            "11:\tlearn: 0.1080139\ttotal: 903ms\tremaining: 2.48s\n",
            "12:\tlearn: 0.0994646\ttotal: 989ms\tremaining: 2.44s\n",
            "13:\tlearn: 0.0889443\ttotal: 1.06s\tremaining: 2.35s\n",
            "14:\tlearn: 0.0842414\ttotal: 1.13s\tremaining: 2.26s\n",
            "15:\tlearn: 0.0820834\ttotal: 1.21s\tremaining: 2.19s\n",
            "16:\tlearn: 0.0736461\ttotal: 1.28s\tremaining: 2.11s\n",
            "17:\tlearn: 0.0727107\ttotal: 1.35s\tremaining: 2.03s\n",
            "18:\tlearn: 0.0665543\ttotal: 1.43s\tremaining: 1.96s\n",
            "19:\tlearn: 0.0641491\ttotal: 1.51s\tremaining: 1.88s\n",
            "20:\tlearn: 0.0636791\ttotal: 1.58s\tremaining: 1.8s\n",
            "21:\tlearn: 0.0608367\ttotal: 1.66s\tremaining: 1.73s\n",
            "22:\tlearn: 0.0587832\ttotal: 1.73s\tremaining: 1.66s\n",
            "23:\tlearn: 0.0570748\ttotal: 1.8s\tremaining: 1.58s\n",
            "24:\tlearn: 0.0568811\ttotal: 1.88s\tremaining: 1.5s\n",
            "25:\tlearn: 0.0553511\ttotal: 1.95s\tremaining: 1.43s\n",
            "26:\tlearn: 0.0537250\ttotal: 2.04s\tremaining: 1.36s\n",
            "27:\tlearn: 0.0519109\ttotal: 2.12s\tremaining: 1.29s\n",
            "28:\tlearn: 0.0517731\ttotal: 2.19s\tremaining: 1.21s\n",
            "29:\tlearn: 0.0509017\ttotal: 2.27s\tremaining: 1.13s\n",
            "30:\tlearn: 0.0507583\ttotal: 2.34s\tremaining: 1.06s\n",
            "31:\tlearn: 0.0504035\ttotal: 2.41s\tremaining: 981ms\n",
            "32:\tlearn: 0.0495092\ttotal: 2.49s\tremaining: 905ms\n",
            "33:\tlearn: 0.0490652\ttotal: 2.57s\tremaining: 831ms\n",
            "34:\tlearn: 0.0488447\ttotal: 2.64s\tremaining: 755ms\n",
            "35:\tlearn: 0.0485310\ttotal: 2.72s\tremaining: 679ms\n",
            "36:\tlearn: 0.0481904\ttotal: 2.79s\tremaining: 604ms\n",
            "37:\tlearn: 0.0479770\ttotal: 2.87s\tremaining: 528ms\n",
            "38:\tlearn: 0.0478169\ttotal: 2.94s\tremaining: 452ms\n",
            "39:\tlearn: 0.0472886\ttotal: 3.03s\tremaining: 379ms\n",
            "40:\tlearn: 0.0470032\ttotal: 3.1s\tremaining: 303ms\n",
            "41:\tlearn: 0.0464767\ttotal: 3.18s\tremaining: 227ms\n",
            "42:\tlearn: 0.0463106\ttotal: 3.26s\tremaining: 151ms\n",
            "43:\tlearn: 0.0462179\ttotal: 3.33s\tremaining: 75.6ms\n",
            "44:\tlearn: 0.0460899\ttotal: 3.4s\tremaining: 0us\n",
            "0:\tlearn: 0.5029626\ttotal: 101ms\tremaining: 4.43s\n",
            "1:\tlearn: 0.3884986\ttotal: 174ms\tremaining: 3.74s\n",
            "2:\tlearn: 0.3264394\ttotal: 246ms\tremaining: 3.44s\n",
            "3:\tlearn: 0.2908053\ttotal: 323ms\tremaining: 3.31s\n",
            "4:\tlearn: 0.2592022\ttotal: 403ms\tremaining: 3.22s\n",
            "5:\tlearn: 0.2306648\ttotal: 480ms\tremaining: 3.12s\n",
            "6:\tlearn: 0.2056002\ttotal: 559ms\tremaining: 3.04s\n",
            "7:\tlearn: 0.1821111\ttotal: 632ms\tremaining: 2.92s\n",
            "8:\tlearn: 0.1641136\ttotal: 706ms\tremaining: 2.82s\n",
            "9:\tlearn: 0.1549366\ttotal: 782ms\tremaining: 2.73s\n",
            "10:\tlearn: 0.1457381\ttotal: 853ms\tremaining: 2.64s\n",
            "11:\tlearn: 0.1237045\ttotal: 925ms\tremaining: 2.54s\n",
            "12:\tlearn: 0.1093619\ttotal: 1s\tremaining: 2.47s\n",
            "13:\tlearn: 0.0986881\ttotal: 1.08s\tremaining: 2.38s\n",
            "14:\tlearn: 0.0959821\ttotal: 1.15s\tremaining: 2.29s\n",
            "15:\tlearn: 0.0871310\ttotal: 1.22s\tremaining: 2.22s\n",
            "16:\tlearn: 0.0813967\ttotal: 1.29s\tremaining: 2.13s\n",
            "17:\tlearn: 0.0795586\ttotal: 1.36s\tremaining: 2.05s\n",
            "18:\tlearn: 0.0784471\ttotal: 1.45s\tremaining: 1.99s\n",
            "19:\tlearn: 0.0721985\ttotal: 1.53s\tremaining: 1.91s\n",
            "20:\tlearn: 0.0692108\ttotal: 1.6s\tremaining: 1.83s\n",
            "21:\tlearn: 0.0653489\ttotal: 1.68s\tremaining: 1.76s\n",
            "22:\tlearn: 0.0633200\ttotal: 1.75s\tremaining: 1.68s\n",
            "23:\tlearn: 0.0617831\ttotal: 1.82s\tremaining: 1.6s\n",
            "24:\tlearn: 0.0603857\ttotal: 1.9s\tremaining: 1.52s\n",
            "25:\tlearn: 0.0591734\ttotal: 1.97s\tremaining: 1.44s\n",
            "26:\tlearn: 0.0571532\ttotal: 2.05s\tremaining: 1.37s\n",
            "27:\tlearn: 0.0555768\ttotal: 2.13s\tremaining: 1.29s\n",
            "28:\tlearn: 0.0543071\ttotal: 2.2s\tremaining: 1.21s\n",
            "29:\tlearn: 0.0534177\ttotal: 2.27s\tremaining: 1.14s\n",
            "30:\tlearn: 0.0521690\ttotal: 2.35s\tremaining: 1.06s\n",
            "31:\tlearn: 0.0516851\ttotal: 2.42s\tremaining: 984ms\n",
            "32:\tlearn: 0.0509025\ttotal: 2.51s\tremaining: 912ms\n",
            "33:\tlearn: 0.0507933\ttotal: 2.59s\tremaining: 837ms\n",
            "34:\tlearn: 0.0504787\ttotal: 2.66s\tremaining: 760ms\n",
            "35:\tlearn: 0.0500641\ttotal: 2.73s\tremaining: 683ms\n",
            "36:\tlearn: 0.0498894\ttotal: 2.81s\tremaining: 607ms\n",
            "37:\tlearn: 0.0496576\ttotal: 2.88s\tremaining: 531ms\n",
            "38:\tlearn: 0.0493763\ttotal: 2.96s\tremaining: 455ms\n",
            "39:\tlearn: 0.0489879\ttotal: 3.04s\tremaining: 380ms\n",
            "40:\tlearn: 0.0487174\ttotal: 3.11s\tremaining: 303ms\n",
            "41:\tlearn: 0.0482316\ttotal: 3.18s\tremaining: 227ms\n",
            "42:\tlearn: 0.0478928\ttotal: 3.26s\tremaining: 152ms\n",
            "43:\tlearn: 0.0475945\ttotal: 3.33s\tremaining: 75.7ms\n",
            "44:\tlearn: 0.0474503\ttotal: 3.4s\tremaining: 0us\n",
            "0:\tlearn: 0.5152038\ttotal: 94.7ms\tremaining: 4.17s\n",
            "1:\tlearn: 0.4014105\ttotal: 168ms\tremaining: 3.6s\n",
            "2:\tlearn: 0.3279997\ttotal: 240ms\tremaining: 3.36s\n",
            "3:\tlearn: 0.2703626\ttotal: 318ms\tremaining: 3.26s\n",
            "4:\tlearn: 0.2402751\ttotal: 393ms\tremaining: 3.14s\n",
            "5:\tlearn: 0.1979651\ttotal: 465ms\tremaining: 3.02s\n",
            "6:\tlearn: 0.1718323\ttotal: 541ms\tremaining: 2.94s\n",
            "7:\tlearn: 0.1550115\ttotal: 613ms\tremaining: 2.83s\n",
            "8:\tlearn: 0.1483185\ttotal: 684ms\tremaining: 2.74s\n",
            "9:\tlearn: 0.1321427\ttotal: 762ms\tremaining: 2.67s\n",
            "10:\tlearn: 0.1169684\ttotal: 833ms\tremaining: 2.58s\n",
            "11:\tlearn: 0.1078594\ttotal: 918ms\tremaining: 2.52s\n",
            "12:\tlearn: 0.0953484\ttotal: 994ms\tremaining: 2.45s\n",
            "13:\tlearn: 0.0896430\ttotal: 1.06s\tremaining: 2.36s\n",
            "14:\tlearn: 0.0870340\ttotal: 1.14s\tremaining: 2.27s\n",
            "15:\tlearn: 0.0804813\ttotal: 1.21s\tremaining: 2.2s\n",
            "16:\tlearn: 0.0741556\ttotal: 1.28s\tremaining: 2.11s\n",
            "17:\tlearn: 0.0709764\ttotal: 1.35s\tremaining: 2.03s\n",
            "18:\tlearn: 0.0695649\ttotal: 1.44s\tremaining: 1.98s\n",
            "19:\tlearn: 0.0690877\ttotal: 1.59s\tremaining: 1.99s\n",
            "20:\tlearn: 0.0660354\ttotal: 1.73s\tremaining: 1.98s\n",
            "21:\tlearn: 0.0625398\ttotal: 1.88s\tremaining: 1.97s\n",
            "22:\tlearn: 0.0593169\ttotal: 2.03s\tremaining: 1.94s\n",
            "23:\tlearn: 0.0581081\ttotal: 2.16s\tremaining: 1.89s\n",
            "24:\tlearn: 0.0564402\ttotal: 2.31s\tremaining: 1.85s\n",
            "25:\tlearn: 0.0548453\ttotal: 2.42s\tremaining: 1.77s\n",
            "26:\tlearn: 0.0536679\ttotal: 2.57s\tremaining: 1.71s\n",
            "27:\tlearn: 0.0519584\ttotal: 2.7s\tremaining: 1.64s\n",
            "28:\tlearn: 0.0505421\ttotal: 2.85s\tremaining: 1.57s\n",
            "29:\tlearn: 0.0496971\ttotal: 3s\tremaining: 1.5s\n",
            "30:\tlearn: 0.0490489\ttotal: 3.15s\tremaining: 1.42s\n",
            "31:\tlearn: 0.0484645\ttotal: 3.29s\tremaining: 1.34s\n",
            "32:\tlearn: 0.0480883\ttotal: 3.44s\tremaining: 1.25s\n",
            "33:\tlearn: 0.0472265\ttotal: 3.58s\tremaining: 1.16s\n",
            "34:\tlearn: 0.0467252\ttotal: 3.72s\tremaining: 1.06s\n",
            "35:\tlearn: 0.0461455\ttotal: 3.87s\tremaining: 968ms\n",
            "36:\tlearn: 0.0458835\ttotal: 4.02s\tremaining: 869ms\n",
            "37:\tlearn: 0.0452572\ttotal: 4.16s\tremaining: 767ms\n",
            "38:\tlearn: 0.0450502\ttotal: 4.3s\tremaining: 662ms\n",
            "39:\tlearn: 0.0447010\ttotal: 4.44s\tremaining: 555ms\n",
            "40:\tlearn: 0.0443775\ttotal: 4.59s\tremaining: 448ms\n",
            "41:\tlearn: 0.0443321\ttotal: 4.72s\tremaining: 338ms\n",
            "42:\tlearn: 0.0442973\ttotal: 4.8s\tremaining: 223ms\n",
            "43:\tlearn: 0.0439791\ttotal: 4.87s\tremaining: 111ms\n",
            "44:\tlearn: 0.0436484\ttotal: 4.94s\tremaining: 0us\n",
            "0:\tlearn: 0.5282744\ttotal: 93.4ms\tremaining: 4.11s\n",
            "1:\tlearn: 0.4148771\ttotal: 165ms\tremaining: 3.55s\n",
            "2:\tlearn: 0.3292014\ttotal: 240ms\tremaining: 3.35s\n",
            "3:\tlearn: 0.2579466\ttotal: 319ms\tremaining: 3.27s\n",
            "4:\tlearn: 0.2362099\ttotal: 391ms\tremaining: 3.13s\n",
            "5:\tlearn: 0.1982336\ttotal: 464ms\tremaining: 3.01s\n",
            "6:\tlearn: 0.1799905\ttotal: 540ms\tremaining: 2.93s\n",
            "7:\tlearn: 0.1698843\ttotal: 613ms\tremaining: 2.83s\n",
            "8:\tlearn: 0.1480147\ttotal: 684ms\tremaining: 2.73s\n",
            "9:\tlearn: 0.1347204\ttotal: 764ms\tremaining: 2.67s\n",
            "10:\tlearn: 0.1263125\ttotal: 835ms\tremaining: 2.58s\n",
            "11:\tlearn: 0.1204068\ttotal: 917ms\tremaining: 2.52s\n",
            "12:\tlearn: 0.1012803\ttotal: 995ms\tremaining: 2.45s\n",
            "13:\tlearn: 0.0902175\ttotal: 1.07s\tremaining: 2.36s\n",
            "14:\tlearn: 0.0872013\ttotal: 1.14s\tremaining: 2.27s\n",
            "15:\tlearn: 0.0789701\ttotal: 1.21s\tremaining: 2.2s\n",
            "16:\tlearn: 0.0778381\ttotal: 1.28s\tremaining: 2.12s\n",
            "17:\tlearn: 0.0733662\ttotal: 1.36s\tremaining: 2.04s\n",
            "18:\tlearn: 0.0729145\ttotal: 1.43s\tremaining: 1.96s\n",
            "19:\tlearn: 0.0690113\ttotal: 1.51s\tremaining: 1.88s\n",
            "20:\tlearn: 0.0660356\ttotal: 1.58s\tremaining: 1.8s\n",
            "21:\tlearn: 0.0639209\ttotal: 1.66s\tremaining: 1.73s\n",
            "22:\tlearn: 0.0604605\ttotal: 1.73s\tremaining: 1.65s\n",
            "23:\tlearn: 0.0592650\ttotal: 1.8s\tremaining: 1.57s\n",
            "24:\tlearn: 0.0590320\ttotal: 1.88s\tremaining: 1.5s\n",
            "25:\tlearn: 0.0566157\ttotal: 1.96s\tremaining: 1.43s\n",
            "26:\tlearn: 0.0560006\ttotal: 2.03s\tremaining: 1.35s\n",
            "27:\tlearn: 0.0536605\ttotal: 2.11s\tremaining: 1.28s\n",
            "28:\tlearn: 0.0533364\ttotal: 2.18s\tremaining: 1.21s\n",
            "29:\tlearn: 0.0521452\ttotal: 2.26s\tremaining: 1.13s\n",
            "30:\tlearn: 0.0513356\ttotal: 2.34s\tremaining: 1.05s\n",
            "31:\tlearn: 0.0509052\ttotal: 2.41s\tremaining: 979ms\n",
            "32:\tlearn: 0.0503709\ttotal: 2.48s\tremaining: 903ms\n",
            "33:\tlearn: 0.0494802\ttotal: 2.56s\tremaining: 828ms\n",
            "34:\tlearn: 0.0490092\ttotal: 2.63s\tremaining: 752ms\n",
            "35:\tlearn: 0.0486503\ttotal: 2.7s\tremaining: 676ms\n",
            "36:\tlearn: 0.0484537\ttotal: 2.78s\tremaining: 602ms\n",
            "37:\tlearn: 0.0482587\ttotal: 2.85s\tremaining: 526ms\n",
            "38:\tlearn: 0.0481946\ttotal: 2.92s\tremaining: 450ms\n",
            "39:\tlearn: 0.0477570\ttotal: 3.01s\tremaining: 377ms\n",
            "40:\tlearn: 0.0475884\ttotal: 3.09s\tremaining: 301ms\n",
            "41:\tlearn: 0.0474361\ttotal: 3.16s\tremaining: 226ms\n",
            "42:\tlearn: 0.0471504\ttotal: 3.24s\tremaining: 151ms\n",
            "43:\tlearn: 0.0469632\ttotal: 3.31s\tremaining: 75.3ms\n",
            "44:\tlearn: 0.0468039\ttotal: 3.38s\tremaining: 0us\n",
            "0:\tlearn: 0.5286036\ttotal: 81.4ms\tremaining: 3.58s\n",
            "1:\tlearn: 0.4046439\ttotal: 147ms\tremaining: 3.15s\n",
            "2:\tlearn: 0.3146855\ttotal: 208ms\tremaining: 2.92s\n",
            "3:\tlearn: 0.2569485\ttotal: 271ms\tremaining: 2.78s\n",
            "4:\tlearn: 0.2104454\ttotal: 342ms\tremaining: 2.73s\n",
            "5:\tlearn: 0.1773401\ttotal: 403ms\tremaining: 2.62s\n",
            "6:\tlearn: 0.1544429\ttotal: 461ms\tremaining: 2.5s\n",
            "7:\tlearn: 0.1268799\ttotal: 521ms\tremaining: 2.41s\n",
            "8:\tlearn: 0.1077601\ttotal: 584ms\tremaining: 2.34s\n",
            "9:\tlearn: 0.0936330\ttotal: 641ms\tremaining: 2.24s\n",
            "10:\tlearn: 0.0806412\ttotal: 709ms\tremaining: 2.19s\n",
            "11:\tlearn: 0.0696136\ttotal: 769ms\tremaining: 2.11s\n",
            "12:\tlearn: 0.0602611\ttotal: 832ms\tremaining: 2.05s\n",
            "13:\tlearn: 0.0527462\ttotal: 893ms\tremaining: 1.98s\n",
            "14:\tlearn: 0.0467968\ttotal: 952ms\tremaining: 1.9s\n",
            "15:\tlearn: 0.0414653\ttotal: 1.01s\tremaining: 1.83s\n",
            "16:\tlearn: 0.0344614\ttotal: 1.07s\tremaining: 1.77s\n",
            "17:\tlearn: 0.0312345\ttotal: 1.14s\tremaining: 1.7s\n",
            "18:\tlearn: 0.0288743\ttotal: 1.19s\tremaining: 1.63s\n",
            "19:\tlearn: 0.0246746\ttotal: 1.25s\tremaining: 1.57s\n",
            "20:\tlearn: 0.0225538\ttotal: 1.32s\tremaining: 1.5s\n",
            "21:\tlearn: 0.0216475\ttotal: 1.37s\tremaining: 1.43s\n",
            "22:\tlearn: 0.0194674\ttotal: 1.43s\tremaining: 1.37s\n",
            "23:\tlearn: 0.0184915\ttotal: 1.49s\tremaining: 1.3s\n",
            "24:\tlearn: 0.0163077\ttotal: 1.55s\tremaining: 1.24s\n",
            "25:\tlearn: 0.0161845\ttotal: 1.6s\tremaining: 1.17s\n",
            "26:\tlearn: 0.0153914\ttotal: 1.65s\tremaining: 1.1s\n",
            "27:\tlearn: 0.0133998\ttotal: 1.73s\tremaining: 1.05s\n",
            "28:\tlearn: 0.0133161\ttotal: 1.79s\tremaining: 987ms\n",
            "29:\tlearn: 0.0121308\ttotal: 1.85s\tremaining: 923ms\n",
            "30:\tlearn: 0.0116696\ttotal: 1.9s\tremaining: 858ms\n",
            "31:\tlearn: 0.0108481\ttotal: 1.96s\tremaining: 795ms\n",
            "32:\tlearn: 0.0102214\ttotal: 2.02s\tremaining: 735ms\n",
            "33:\tlearn: 0.0098952\ttotal: 2.07s\tremaining: 671ms\n",
            "34:\tlearn: 0.0089799\ttotal: 2.13s\tremaining: 609ms\n",
            "35:\tlearn: 0.0086680\ttotal: 2.18s\tremaining: 546ms\n",
            "36:\tlearn: 0.0076263\ttotal: 2.25s\tremaining: 487ms\n",
            "37:\tlearn: 0.0069260\ttotal: 2.31s\tremaining: 425ms\n",
            "38:\tlearn: 0.0060149\ttotal: 2.37s\tremaining: 364ms\n",
            "39:\tlearn: 0.0057102\ttotal: 2.42s\tremaining: 303ms\n",
            "40:\tlearn: 0.0055194\ttotal: 2.48s\tremaining: 242ms\n",
            "41:\tlearn: 0.0051871\ttotal: 2.54s\tremaining: 181ms\n",
            "42:\tlearn: 0.0048980\ttotal: 2.6s\tremaining: 121ms\n",
            "43:\tlearn: 0.0045039\ttotal: 2.65s\tremaining: 60.3ms\n",
            "44:\tlearn: 0.0044114\ttotal: 2.72s\tremaining: 0us\n",
            "0:\tlearn: 0.5286036\ttotal: 165ms\tremaining: 7.24s\n",
            "1:\tlearn: 0.4046439\ttotal: 265ms\tremaining: 5.7s\n",
            "2:\tlearn: 0.3146855\ttotal: 398ms\tremaining: 5.57s\n",
            "3:\tlearn: 0.2569485\ttotal: 506ms\tremaining: 5.19s\n",
            "4:\tlearn: 0.2104454\ttotal: 643ms\tremaining: 5.14s\n",
            "5:\tlearn: 0.1773401\ttotal: 758ms\tremaining: 4.93s\n",
            "6:\tlearn: 0.1544429\ttotal: 875ms\tremaining: 4.75s\n",
            "7:\tlearn: 0.1268799\ttotal: 981ms\tremaining: 4.54s\n",
            "8:\tlearn: 0.1077601\ttotal: 1.1s\tremaining: 4.4s\n",
            "9:\tlearn: 0.0936330\ttotal: 1.21s\tremaining: 4.25s\n",
            "10:\tlearn: 0.0806412\ttotal: 1.32s\tremaining: 4.08s\n",
            "11:\tlearn: 0.0696136\ttotal: 1.44s\tremaining: 3.96s\n",
            "12:\tlearn: 0.0602611\ttotal: 1.55s\tremaining: 3.83s\n",
            "13:\tlearn: 0.0527462\ttotal: 1.66s\tremaining: 3.67s\n",
            "14:\tlearn: 0.0467968\ttotal: 1.78s\tremaining: 3.55s\n",
            "15:\tlearn: 0.0414653\ttotal: 1.9s\tremaining: 3.44s\n",
            "16:\tlearn: 0.0344614\ttotal: 2.03s\tremaining: 3.35s\n",
            "17:\tlearn: 0.0312345\ttotal: 2.16s\tremaining: 3.24s\n",
            "18:\tlearn: 0.0288743\ttotal: 2.29s\tremaining: 3.13s\n",
            "19:\tlearn: 0.0246746\ttotal: 2.39s\tremaining: 2.99s\n",
            "20:\tlearn: 0.0225538\ttotal: 2.54s\tremaining: 2.9s\n",
            "21:\tlearn: 0.0216475\ttotal: 2.63s\tremaining: 2.75s\n",
            "22:\tlearn: 0.0194674\ttotal: 2.75s\tremaining: 2.63s\n",
            "23:\tlearn: 0.0184915\ttotal: 2.87s\tremaining: 2.51s\n",
            "24:\tlearn: 0.0163077\ttotal: 2.98s\tremaining: 2.39s\n",
            "25:\tlearn: 0.0161845\ttotal: 3.09s\tremaining: 2.26s\n",
            "26:\tlearn: 0.0153914\ttotal: 3.21s\tremaining: 2.14s\n",
            "27:\tlearn: 0.0133998\ttotal: 3.33s\tremaining: 2.02s\n",
            "28:\tlearn: 0.0133161\ttotal: 3.43s\tremaining: 1.89s\n",
            "29:\tlearn: 0.0121308\ttotal: 3.5s\tremaining: 1.75s\n",
            "30:\tlearn: 0.0116696\ttotal: 3.55s\tremaining: 1.6s\n",
            "31:\tlearn: 0.0108481\ttotal: 3.61s\tremaining: 1.47s\n",
            "32:\tlearn: 0.0102214\ttotal: 3.67s\tremaining: 1.33s\n",
            "33:\tlearn: 0.0098952\ttotal: 3.72s\tremaining: 1.2s\n",
            "34:\tlearn: 0.0089799\ttotal: 3.78s\tremaining: 1.08s\n",
            "35:\tlearn: 0.0086680\ttotal: 3.83s\tremaining: 958ms\n",
            "36:\tlearn: 0.0076263\ttotal: 3.9s\tremaining: 843ms\n",
            "37:\tlearn: 0.0069260\ttotal: 3.95s\tremaining: 728ms\n",
            "38:\tlearn: 0.0060149\ttotal: 4.01s\tremaining: 618ms\n",
            "39:\tlearn: 0.0057102\ttotal: 4.07s\tremaining: 509ms\n",
            "40:\tlearn: 0.0055194\ttotal: 4.13s\tremaining: 403ms\n",
            "41:\tlearn: 0.0051871\ttotal: 4.19s\tremaining: 299ms\n",
            "42:\tlearn: 0.0048980\ttotal: 4.25s\tremaining: 198ms\n",
            "43:\tlearn: 0.0045039\ttotal: 4.31s\tremaining: 97.9ms\n",
            "44:\tlearn: 0.0044114\ttotal: 4.36s\tremaining: 0us\n",
            "0:\tlearn: 0.5077568\ttotal: 146ms\tremaining: 6.42s\n",
            "1:\tlearn: 0.3960221\ttotal: 259ms\tremaining: 5.57s\n",
            "2:\tlearn: 0.3171623\ttotal: 366ms\tremaining: 5.12s\n",
            "3:\tlearn: 0.2502500\ttotal: 480ms\tremaining: 4.92s\n",
            "4:\tlearn: 0.2001590\ttotal: 601ms\tremaining: 4.81s\n",
            "5:\tlearn: 0.1715422\ttotal: 714ms\tremaining: 4.64s\n",
            "6:\tlearn: 0.1495552\ttotal: 834ms\tremaining: 4.53s\n",
            "7:\tlearn: 0.1238584\ttotal: 950ms\tremaining: 4.39s\n",
            "8:\tlearn: 0.0978400\ttotal: 1.07s\tremaining: 4.28s\n",
            "9:\tlearn: 0.0824665\ttotal: 1.18s\tremaining: 4.13s\n",
            "10:\tlearn: 0.0716822\ttotal: 1.29s\tremaining: 4s\n",
            "11:\tlearn: 0.0642190\ttotal: 1.4s\tremaining: 3.86s\n",
            "12:\tlearn: 0.0582946\ttotal: 1.52s\tremaining: 3.75s\n",
            "13:\tlearn: 0.0560088\ttotal: 1.62s\tremaining: 3.59s\n",
            "14:\tlearn: 0.0472225\ttotal: 1.74s\tremaining: 3.47s\n",
            "15:\tlearn: 0.0403425\ttotal: 1.83s\tremaining: 3.32s\n",
            "16:\tlearn: 0.0370302\ttotal: 1.94s\tremaining: 3.19s\n",
            "17:\tlearn: 0.0331827\ttotal: 2.05s\tremaining: 3.08s\n",
            "18:\tlearn: 0.0284231\ttotal: 2.15s\tremaining: 2.94s\n",
            "19:\tlearn: 0.0248088\ttotal: 2.27s\tremaining: 2.84s\n",
            "20:\tlearn: 0.0232567\ttotal: 2.37s\tremaining: 2.71s\n",
            "21:\tlearn: 0.0219676\ttotal: 2.5s\tremaining: 2.61s\n",
            "22:\tlearn: 0.0202989\ttotal: 2.61s\tremaining: 2.5s\n",
            "23:\tlearn: 0.0175540\ttotal: 2.69s\tremaining: 2.36s\n",
            "24:\tlearn: 0.0155627\ttotal: 2.75s\tremaining: 2.2s\n",
            "25:\tlearn: 0.0137028\ttotal: 2.81s\tremaining: 2.05s\n",
            "26:\tlearn: 0.0124974\ttotal: 2.86s\tremaining: 1.91s\n",
            "27:\tlearn: 0.0120512\ttotal: 2.92s\tremaining: 1.77s\n",
            "28:\tlearn: 0.0111371\ttotal: 2.98s\tremaining: 1.65s\n",
            "29:\tlearn: 0.0099476\ttotal: 3.04s\tremaining: 1.52s\n",
            "30:\tlearn: 0.0089982\ttotal: 3.1s\tremaining: 1.4s\n",
            "31:\tlearn: 0.0079359\ttotal: 3.16s\tremaining: 1.28s\n",
            "32:\tlearn: 0.0074110\ttotal: 3.23s\tremaining: 1.18s\n",
            "33:\tlearn: 0.0068289\ttotal: 3.29s\tremaining: 1.06s\n",
            "34:\tlearn: 0.0064927\ttotal: 3.34s\tremaining: 955ms\n",
            "35:\tlearn: 0.0059046\ttotal: 3.4s\tremaining: 849ms\n",
            "36:\tlearn: 0.0053199\ttotal: 3.46s\tremaining: 748ms\n",
            "37:\tlearn: 0.0049216\ttotal: 3.51s\tremaining: 647ms\n",
            "38:\tlearn: 0.0047371\ttotal: 3.56s\tremaining: 548ms\n",
            "39:\tlearn: 0.0045203\ttotal: 3.62s\tremaining: 452ms\n",
            "40:\tlearn: 0.0042384\ttotal: 3.68s\tremaining: 359ms\n",
            "41:\tlearn: 0.0040264\ttotal: 3.73s\tremaining: 267ms\n",
            "42:\tlearn: 0.0037745\ttotal: 3.79s\tremaining: 176ms\n",
            "43:\tlearn: 0.0036438\ttotal: 3.84s\tremaining: 87.3ms\n",
            "44:\tlearn: 0.0034181\ttotal: 3.9s\tremaining: 0us\n",
            "0:\tlearn: 0.5099956\ttotal: 73.9ms\tremaining: 3.25s\n",
            "1:\tlearn: 0.3783357\ttotal: 134ms\tremaining: 2.88s\n",
            "2:\tlearn: 0.2936431\ttotal: 192ms\tremaining: 2.69s\n",
            "3:\tlearn: 0.2361455\ttotal: 251ms\tremaining: 2.57s\n",
            "4:\tlearn: 0.2010612\ttotal: 315ms\tremaining: 2.52s\n",
            "5:\tlearn: 0.1599557\ttotal: 370ms\tremaining: 2.4s\n",
            "6:\tlearn: 0.1338857\ttotal: 423ms\tremaining: 2.3s\n",
            "7:\tlearn: 0.1140887\ttotal: 479ms\tremaining: 2.22s\n",
            "8:\tlearn: 0.0983617\ttotal: 549ms\tremaining: 2.2s\n",
            "9:\tlearn: 0.0808034\ttotal: 610ms\tremaining: 2.13s\n",
            "10:\tlearn: 0.0723655\ttotal: 664ms\tremaining: 2.05s\n",
            "11:\tlearn: 0.0624353\ttotal: 736ms\tremaining: 2.02s\n",
            "12:\tlearn: 0.0506310\ttotal: 810ms\tremaining: 1.99s\n",
            "13:\tlearn: 0.0478726\ttotal: 863ms\tremaining: 1.91s\n",
            "14:\tlearn: 0.0428738\ttotal: 918ms\tremaining: 1.83s\n",
            "15:\tlearn: 0.0367689\ttotal: 975ms\tremaining: 1.77s\n",
            "16:\tlearn: 0.0327720\ttotal: 1.04s\tremaining: 1.71s\n",
            "17:\tlearn: 0.0285668\ttotal: 1.09s\tremaining: 1.64s\n",
            "18:\tlearn: 0.0258590\ttotal: 1.15s\tremaining: 1.57s\n",
            "19:\tlearn: 0.0232437\ttotal: 1.2s\tremaining: 1.5s\n",
            "20:\tlearn: 0.0230742\ttotal: 1.27s\tremaining: 1.45s\n",
            "21:\tlearn: 0.0190436\ttotal: 1.32s\tremaining: 1.38s\n",
            "22:\tlearn: 0.0165596\ttotal: 1.38s\tremaining: 1.32s\n",
            "23:\tlearn: 0.0147809\ttotal: 1.44s\tremaining: 1.26s\n",
            "24:\tlearn: 0.0139909\ttotal: 1.5s\tremaining: 1.2s\n",
            "25:\tlearn: 0.0131019\ttotal: 1.55s\tremaining: 1.13s\n",
            "26:\tlearn: 0.0125317\ttotal: 1.6s\tremaining: 1.07s\n",
            "27:\tlearn: 0.0116317\ttotal: 1.66s\tremaining: 1.01s\n",
            "28:\tlearn: 0.0104695\ttotal: 1.72s\tremaining: 951ms\n",
            "29:\tlearn: 0.0098264\ttotal: 1.79s\tremaining: 894ms\n",
            "30:\tlearn: 0.0089102\ttotal: 1.84s\tremaining: 833ms\n",
            "31:\tlearn: 0.0088837\ttotal: 1.9s\tremaining: 772ms\n",
            "32:\tlearn: 0.0073350\ttotal: 1.97s\tremaining: 716ms\n",
            "33:\tlearn: 0.0069050\ttotal: 2.02s\tremaining: 654ms\n",
            "34:\tlearn: 0.0064395\ttotal: 2.08s\tremaining: 594ms\n",
            "35:\tlearn: 0.0061611\ttotal: 2.13s\tremaining: 533ms\n",
            "36:\tlearn: 0.0056663\ttotal: 2.2s\tremaining: 475ms\n",
            "37:\tlearn: 0.0052581\ttotal: 2.25s\tremaining: 415ms\n",
            "38:\tlearn: 0.0052581\ttotal: 2.3s\tremaining: 354ms\n",
            "39:\tlearn: 0.0052578\ttotal: 2.35s\tremaining: 294ms\n",
            "40:\tlearn: 0.0052576\ttotal: 2.41s\tremaining: 235ms\n",
            "41:\tlearn: 0.0052572\ttotal: 2.46s\tremaining: 175ms\n",
            "42:\tlearn: 0.0052565\ttotal: 2.51s\tremaining: 117ms\n",
            "43:\tlearn: 0.0052565\ttotal: 2.56s\tremaining: 58.1ms\n",
            "44:\tlearn: 0.0052501\ttotal: 2.6s\tremaining: 0us\n",
            "0:\tlearn: 0.5250575\ttotal: 77.2ms\tremaining: 3.4s\n",
            "1:\tlearn: 0.4133371\ttotal: 139ms\tremaining: 2.99s\n",
            "2:\tlearn: 0.3229664\ttotal: 199ms\tremaining: 2.79s\n",
            "3:\tlearn: 0.2504441\ttotal: 260ms\tremaining: 2.66s\n",
            "4:\tlearn: 0.1963488\ttotal: 328ms\tremaining: 2.63s\n",
            "5:\tlearn: 0.1584621\ttotal: 389ms\tremaining: 2.53s\n",
            "6:\tlearn: 0.1304164\ttotal: 450ms\tremaining: 2.44s\n",
            "7:\tlearn: 0.1137771\ttotal: 505ms\tremaining: 2.33s\n",
            "8:\tlearn: 0.1010000\ttotal: 565ms\tremaining: 2.26s\n",
            "9:\tlearn: 0.0881917\ttotal: 627ms\tremaining: 2.19s\n",
            "10:\tlearn: 0.0792484\ttotal: 681ms\tremaining: 2.11s\n",
            "11:\tlearn: 0.0723827\ttotal: 740ms\tremaining: 2.03s\n",
            "12:\tlearn: 0.0610483\ttotal: 810ms\tremaining: 1.99s\n",
            "13:\tlearn: 0.0535236\ttotal: 864ms\tremaining: 1.91s\n",
            "14:\tlearn: 0.0461344\ttotal: 917ms\tremaining: 1.83s\n",
            "15:\tlearn: 0.0439055\ttotal: 966ms\tremaining: 1.75s\n",
            "16:\tlearn: 0.0397874\ttotal: 1.03s\tremaining: 1.7s\n",
            "17:\tlearn: 0.0348539\ttotal: 1.08s\tremaining: 1.63s\n",
            "18:\tlearn: 0.0297691\ttotal: 1.14s\tremaining: 1.56s\n",
            "19:\tlearn: 0.0271172\ttotal: 1.19s\tremaining: 1.49s\n",
            "20:\tlearn: 0.0266087\ttotal: 1.25s\tremaining: 1.43s\n",
            "21:\tlearn: 0.0228846\ttotal: 1.31s\tremaining: 1.37s\n",
            "22:\tlearn: 0.0210790\ttotal: 1.36s\tremaining: 1.3s\n",
            "23:\tlearn: 0.0194128\ttotal: 1.41s\tremaining: 1.24s\n",
            "24:\tlearn: 0.0181315\ttotal: 1.48s\tremaining: 1.18s\n",
            "25:\tlearn: 0.0163728\ttotal: 1.53s\tremaining: 1.12s\n",
            "26:\tlearn: 0.0155006\ttotal: 1.58s\tremaining: 1.05s\n",
            "27:\tlearn: 0.0147348\ttotal: 1.64s\tremaining: 993ms\n",
            "28:\tlearn: 0.0136437\ttotal: 1.7s\tremaining: 937ms\n",
            "29:\tlearn: 0.0128606\ttotal: 1.75s\tremaining: 878ms\n",
            "30:\tlearn: 0.0119490\ttotal: 1.81s\tremaining: 820ms\n",
            "31:\tlearn: 0.0110421\ttotal: 1.87s\tremaining: 759ms\n",
            "32:\tlearn: 0.0106056\ttotal: 1.93s\tremaining: 702ms\n",
            "33:\tlearn: 0.0091688\ttotal: 1.99s\tremaining: 643ms\n",
            "34:\tlearn: 0.0082772\ttotal: 2.04s\tremaining: 583ms\n",
            "35:\tlearn: 0.0075247\ttotal: 2.1s\tremaining: 525ms\n",
            "36:\tlearn: 0.0069742\ttotal: 2.16s\tremaining: 467ms\n",
            "37:\tlearn: 0.0065305\ttotal: 2.22s\tremaining: 409ms\n",
            "38:\tlearn: 0.0060445\ttotal: 2.28s\tremaining: 350ms\n",
            "39:\tlearn: 0.0056230\ttotal: 2.33s\tremaining: 291ms\n",
            "40:\tlearn: 0.0052867\ttotal: 2.39s\tremaining: 233ms\n",
            "41:\tlearn: 0.0049843\ttotal: 2.45s\tremaining: 175ms\n",
            "42:\tlearn: 0.0046912\ttotal: 2.5s\tremaining: 116ms\n",
            "43:\tlearn: 0.0044248\ttotal: 2.55s\tremaining: 58ms\n",
            "44:\tlearn: 0.0040289\ttotal: 2.61s\tremaining: 0us\n",
            "0:\tlearn: 0.5045610\ttotal: 74.5ms\tremaining: 3.28s\n",
            "1:\tlearn: 0.3820937\ttotal: 135ms\tremaining: 2.9s\n",
            "2:\tlearn: 0.2997666\ttotal: 196ms\tremaining: 2.74s\n",
            "3:\tlearn: 0.2477828\ttotal: 250ms\tremaining: 2.56s\n",
            "4:\tlearn: 0.1803206\ttotal: 316ms\tremaining: 2.53s\n",
            "5:\tlearn: 0.1575716\ttotal: 370ms\tremaining: 2.4s\n",
            "6:\tlearn: 0.1352378\ttotal: 428ms\tremaining: 2.32s\n",
            "7:\tlearn: 0.1151062\ttotal: 482ms\tremaining: 2.23s\n",
            "8:\tlearn: 0.1009189\ttotal: 547ms\tremaining: 2.19s\n",
            "9:\tlearn: 0.0812839\ttotal: 608ms\tremaining: 2.13s\n",
            "10:\tlearn: 0.0683704\ttotal: 666ms\tremaining: 2.06s\n",
            "11:\tlearn: 0.0597937\ttotal: 721ms\tremaining: 1.98s\n",
            "12:\tlearn: 0.0533847\ttotal: 793ms\tremaining: 1.95s\n",
            "13:\tlearn: 0.0476562\ttotal: 848ms\tremaining: 1.88s\n",
            "14:\tlearn: 0.0432351\ttotal: 909ms\tremaining: 1.82s\n",
            "15:\tlearn: 0.0382031\ttotal: 980ms\tremaining: 1.78s\n",
            "16:\tlearn: 0.0348836\ttotal: 1.04s\tremaining: 1.71s\n",
            "17:\tlearn: 0.0306364\ttotal: 1.09s\tremaining: 1.64s\n",
            "18:\tlearn: 0.0282259\ttotal: 1.15s\tremaining: 1.57s\n",
            "19:\tlearn: 0.0257885\ttotal: 1.2s\tremaining: 1.5s\n",
            "20:\tlearn: 0.0235307\ttotal: 1.26s\tremaining: 1.45s\n",
            "21:\tlearn: 0.0209351\ttotal: 1.32s\tremaining: 1.38s\n",
            "22:\tlearn: 0.0192513\ttotal: 1.37s\tremaining: 1.31s\n",
            "23:\tlearn: 0.0171729\ttotal: 1.43s\tremaining: 1.25s\n",
            "24:\tlearn: 0.0160142\ttotal: 1.49s\tremaining: 1.19s\n",
            "25:\tlearn: 0.0143742\ttotal: 1.54s\tremaining: 1.13s\n",
            "26:\tlearn: 0.0122677\ttotal: 1.6s\tremaining: 1.07s\n",
            "27:\tlearn: 0.0118094\ttotal: 1.65s\tremaining: 1s\n",
            "28:\tlearn: 0.0108216\ttotal: 1.72s\tremaining: 947ms\n",
            "29:\tlearn: 0.0101698\ttotal: 1.77s\tremaining: 887ms\n",
            "30:\tlearn: 0.0095545\ttotal: 1.84s\tremaining: 830ms\n",
            "31:\tlearn: 0.0085653\ttotal: 1.89s\tremaining: 769ms\n",
            "32:\tlearn: 0.0082517\ttotal: 1.98s\tremaining: 720ms\n",
            "33:\tlearn: 0.0070858\ttotal: 2.09s\tremaining: 676ms\n",
            "34:\tlearn: 0.0066454\ttotal: 2.2s\tremaining: 628ms\n",
            "35:\tlearn: 0.0066344\ttotal: 2.3s\tremaining: 575ms\n",
            "36:\tlearn: 0.0059781\ttotal: 2.41s\tremaining: 521ms\n",
            "37:\tlearn: 0.0056061\ttotal: 2.52s\tremaining: 464ms\n",
            "38:\tlearn: 0.0051233\ttotal: 2.63s\tremaining: 405ms\n",
            "39:\tlearn: 0.0046372\ttotal: 2.74s\tremaining: 343ms\n",
            "40:\tlearn: 0.0043964\ttotal: 2.85s\tremaining: 278ms\n",
            "41:\tlearn: 0.0042425\ttotal: 2.94s\tremaining: 210ms\n",
            "42:\tlearn: 0.0039628\ttotal: 3.04s\tremaining: 142ms\n",
            "43:\tlearn: 0.0037887\ttotal: 3.16s\tremaining: 71.8ms\n",
            "44:\tlearn: 0.0034889\ttotal: 3.27s\tremaining: 0us\n",
            "0:\tlearn: 0.5399702\ttotal: 135ms\tremaining: 5.92s\n",
            "1:\tlearn: 0.4007742\ttotal: 244ms\tremaining: 5.26s\n",
            "2:\tlearn: 0.3141330\ttotal: 356ms\tremaining: 4.99s\n",
            "3:\tlearn: 0.2467532\ttotal: 437ms\tremaining: 4.48s\n",
            "4:\tlearn: 0.1981861\ttotal: 552ms\tremaining: 4.41s\n",
            "5:\tlearn: 0.1683882\ttotal: 677ms\tremaining: 4.4s\n",
            "6:\tlearn: 0.1424673\ttotal: 791ms\tremaining: 4.29s\n",
            "7:\tlearn: 0.1214543\ttotal: 903ms\tremaining: 4.17s\n",
            "8:\tlearn: 0.1066221\ttotal: 1.02s\tremaining: 4.08s\n",
            "9:\tlearn: 0.0824959\ttotal: 1.15s\tremaining: 4.01s\n",
            "10:\tlearn: 0.0722708\ttotal: 1.26s\tremaining: 3.89s\n",
            "11:\tlearn: 0.0610191\ttotal: 1.38s\tremaining: 3.79s\n",
            "12:\tlearn: 0.0547682\ttotal: 1.48s\tremaining: 3.65s\n",
            "13:\tlearn: 0.0475422\ttotal: 1.56s\tremaining: 3.45s\n",
            "14:\tlearn: 0.0468987\ttotal: 1.61s\tremaining: 3.23s\n",
            "15:\tlearn: 0.0415528\ttotal: 1.67s\tremaining: 3.02s\n",
            "16:\tlearn: 0.0376185\ttotal: 1.72s\tremaining: 2.84s\n",
            "17:\tlearn: 0.0325853\ttotal: 1.78s\tremaining: 2.67s\n",
            "18:\tlearn: 0.0292934\ttotal: 1.84s\tremaining: 2.52s\n",
            "19:\tlearn: 0.0256310\ttotal: 1.89s\tremaining: 2.37s\n",
            "20:\tlearn: 0.0254569\ttotal: 1.95s\tremaining: 2.23s\n",
            "21:\tlearn: 0.0238241\ttotal: 2.01s\tremaining: 2.1s\n",
            "22:\tlearn: 0.0216344\ttotal: 2.07s\tremaining: 1.98s\n",
            "23:\tlearn: 0.0189701\ttotal: 2.13s\tremaining: 1.87s\n",
            "24:\tlearn: 0.0173724\ttotal: 2.19s\tremaining: 1.75s\n",
            "25:\tlearn: 0.0150477\ttotal: 2.25s\tremaining: 1.64s\n",
            "26:\tlearn: 0.0138567\ttotal: 2.31s\tremaining: 1.54s\n",
            "27:\tlearn: 0.0128478\ttotal: 2.36s\tremaining: 1.43s\n",
            "28:\tlearn: 0.0113486\ttotal: 2.42s\tremaining: 1.33s\n",
            "29:\tlearn: 0.0101536\ttotal: 2.47s\tremaining: 1.24s\n",
            "30:\tlearn: 0.0094771\ttotal: 2.54s\tremaining: 1.15s\n",
            "31:\tlearn: 0.0083900\ttotal: 2.6s\tremaining: 1.05s\n",
            "32:\tlearn: 0.0078588\ttotal: 2.65s\tremaining: 964ms\n",
            "33:\tlearn: 0.0070290\ttotal: 2.71s\tremaining: 876ms\n",
            "34:\tlearn: 0.0066782\ttotal: 2.77s\tremaining: 791ms\n",
            "35:\tlearn: 0.0061741\ttotal: 2.82s\tremaining: 706ms\n",
            "36:\tlearn: 0.0058558\ttotal: 2.87s\tremaining: 622ms\n",
            "37:\tlearn: 0.0055200\ttotal: 2.93s\tremaining: 540ms\n",
            "38:\tlearn: 0.0050115\ttotal: 3s\tremaining: 462ms\n",
            "39:\tlearn: 0.0049981\ttotal: 3.05s\tremaining: 382ms\n",
            "40:\tlearn: 0.0047270\ttotal: 3.11s\tremaining: 303ms\n",
            "41:\tlearn: 0.0047269\ttotal: 3.16s\tremaining: 226ms\n",
            "42:\tlearn: 0.0047189\ttotal: 3.22s\tremaining: 150ms\n",
            "43:\tlearn: 0.0045541\ttotal: 3.27s\tremaining: 74.3ms\n",
            "44:\tlearn: 0.0042426\ttotal: 3.32s\tremaining: 0us\n",
            "0:\tlearn: 0.3970185\ttotal: 62.3ms\tremaining: 2.74s\n",
            "1:\tlearn: 0.2544057\ttotal: 107ms\tremaining: 2.3s\n",
            "2:\tlearn: 0.1643913\ttotal: 152ms\tremaining: 2.13s\n",
            "3:\tlearn: 0.1167782\ttotal: 197ms\tremaining: 2.02s\n",
            "4:\tlearn: 0.0951467\ttotal: 241ms\tremaining: 1.93s\n",
            "5:\tlearn: 0.0761534\ttotal: 293ms\tremaining: 1.91s\n",
            "6:\tlearn: 0.0543411\ttotal: 339ms\tremaining: 1.84s\n",
            "7:\tlearn: 0.0440465\ttotal: 394ms\tremaining: 1.82s\n",
            "8:\tlearn: 0.0369473\ttotal: 438ms\tremaining: 1.75s\n",
            "9:\tlearn: 0.0260784\ttotal: 485ms\tremaining: 1.7s\n",
            "10:\tlearn: 0.0219031\ttotal: 538ms\tremaining: 1.66s\n",
            "11:\tlearn: 0.0195726\ttotal: 582ms\tremaining: 1.6s\n",
            "12:\tlearn: 0.0127512\ttotal: 629ms\tremaining: 1.55s\n",
            "13:\tlearn: 0.0109814\ttotal: 679ms\tremaining: 1.5s\n",
            "14:\tlearn: 0.0091564\ttotal: 723ms\tremaining: 1.45s\n",
            "15:\tlearn: 0.0072245\ttotal: 775ms\tremaining: 1.4s\n",
            "16:\tlearn: 0.0062196\ttotal: 820ms\tremaining: 1.35s\n",
            "17:\tlearn: 0.0054284\ttotal: 864ms\tremaining: 1.29s\n",
            "18:\tlearn: 0.0041636\ttotal: 909ms\tremaining: 1.24s\n",
            "19:\tlearn: 0.0037159\ttotal: 953ms\tremaining: 1.19s\n",
            "20:\tlearn: 0.0031840\ttotal: 1.01s\tremaining: 1.15s\n",
            "21:\tlearn: 0.0029398\ttotal: 1.05s\tremaining: 1.1s\n",
            "22:\tlearn: 0.0027456\ttotal: 1.09s\tremaining: 1.04s\n",
            "23:\tlearn: 0.0024843\ttotal: 1.14s\tremaining: 994ms\n",
            "24:\tlearn: 0.0022336\ttotal: 1.18s\tremaining: 945ms\n",
            "25:\tlearn: 0.0019920\ttotal: 1.23s\tremaining: 902ms\n",
            "26:\tlearn: 0.0017187\ttotal: 1.28s\tremaining: 852ms\n",
            "27:\tlearn: 0.0015822\ttotal: 1.32s\tremaining: 803ms\n",
            "28:\tlearn: 0.0015822\ttotal: 1.36s\tremaining: 753ms\n",
            "29:\tlearn: 0.0015822\ttotal: 1.42s\tremaining: 711ms\n",
            "30:\tlearn: 0.0013550\ttotal: 1.48s\tremaining: 667ms\n",
            "31:\tlearn: 0.0013548\ttotal: 1.52s\tremaining: 618ms\n",
            "32:\tlearn: 0.0013548\ttotal: 1.57s\tremaining: 570ms\n",
            "33:\tlearn: 0.0013547\ttotal: 1.61s\tremaining: 522ms\n",
            "34:\tlearn: 0.0012762\ttotal: 1.66s\tremaining: 473ms\n",
            "35:\tlearn: 0.0012761\ttotal: 1.71s\tremaining: 427ms\n",
            "36:\tlearn: 0.0011513\ttotal: 1.75s\tremaining: 379ms\n",
            "37:\tlearn: 0.0011512\ttotal: 1.79s\tremaining: 331ms\n",
            "38:\tlearn: 0.0010539\ttotal: 1.84s\tremaining: 283ms\n",
            "39:\tlearn: 0.0010539\ttotal: 1.88s\tremaining: 235ms\n",
            "40:\tlearn: 0.0010539\ttotal: 1.94s\tremaining: 189ms\n",
            "41:\tlearn: 0.0010537\ttotal: 1.98s\tremaining: 141ms\n",
            "42:\tlearn: 0.0010537\ttotal: 2.02s\tremaining: 94ms\n",
            "43:\tlearn: 0.0010537\ttotal: 2.07s\tremaining: 47.1ms\n",
            "44:\tlearn: 0.0010537\ttotal: 2.11s\tremaining: 0us\n",
            "0:\tlearn: 0.3970185\ttotal: 60.9ms\tremaining: 2.68s\n",
            "1:\tlearn: 0.2544057\ttotal: 117ms\tremaining: 2.52s\n",
            "2:\tlearn: 0.1643913\ttotal: 163ms\tremaining: 2.27s\n",
            "3:\tlearn: 0.1167782\ttotal: 207ms\tremaining: 2.12s\n",
            "4:\tlearn: 0.0951467\ttotal: 250ms\tremaining: 2s\n",
            "5:\tlearn: 0.0761534\ttotal: 303ms\tremaining: 1.97s\n",
            "6:\tlearn: 0.0543411\ttotal: 349ms\tremaining: 1.89s\n",
            "7:\tlearn: 0.0440465\ttotal: 392ms\tremaining: 1.81s\n",
            "8:\tlearn: 0.0369473\ttotal: 436ms\tremaining: 1.74s\n",
            "9:\tlearn: 0.0260784\ttotal: 481ms\tremaining: 1.68s\n",
            "10:\tlearn: 0.0219031\ttotal: 534ms\tremaining: 1.65s\n",
            "11:\tlearn: 0.0195726\ttotal: 578ms\tremaining: 1.59s\n",
            "12:\tlearn: 0.0127512\ttotal: 626ms\tremaining: 1.54s\n",
            "13:\tlearn: 0.0109814\ttotal: 674ms\tremaining: 1.49s\n",
            "14:\tlearn: 0.0091564\ttotal: 717ms\tremaining: 1.43s\n",
            "15:\tlearn: 0.0072245\ttotal: 770ms\tremaining: 1.39s\n",
            "16:\tlearn: 0.0062196\ttotal: 813ms\tremaining: 1.34s\n",
            "17:\tlearn: 0.0054284\ttotal: 856ms\tremaining: 1.28s\n",
            "18:\tlearn: 0.0041636\ttotal: 900ms\tremaining: 1.23s\n",
            "19:\tlearn: 0.0037159\ttotal: 943ms\tremaining: 1.18s\n",
            "20:\tlearn: 0.0031840\ttotal: 995ms\tremaining: 1.14s\n",
            "21:\tlearn: 0.0029398\ttotal: 1.04s\tremaining: 1.09s\n",
            "22:\tlearn: 0.0027456\ttotal: 1.08s\tremaining: 1.03s\n",
            "23:\tlearn: 0.0024843\ttotal: 1.14s\tremaining: 996ms\n",
            "24:\tlearn: 0.0022336\ttotal: 1.18s\tremaining: 947ms\n",
            "25:\tlearn: 0.0019920\ttotal: 1.24s\tremaining: 903ms\n",
            "26:\tlearn: 0.0017187\ttotal: 1.28s\tremaining: 854ms\n",
            "27:\tlearn: 0.0015822\ttotal: 1.33s\tremaining: 809ms\n",
            "28:\tlearn: 0.0015822\ttotal: 1.38s\tremaining: 759ms\n",
            "29:\tlearn: 0.0015822\ttotal: 1.43s\tremaining: 713ms\n",
            "30:\tlearn: 0.0013550\ttotal: 1.48s\tremaining: 667ms\n",
            "31:\tlearn: 0.0013548\ttotal: 1.52s\tremaining: 620ms\n",
            "32:\tlearn: 0.0013548\ttotal: 1.57s\tremaining: 571ms\n",
            "33:\tlearn: 0.0013547\ttotal: 1.62s\tremaining: 523ms\n",
            "34:\tlearn: 0.0012762\ttotal: 1.66s\tremaining: 475ms\n",
            "35:\tlearn: 0.0012761\ttotal: 1.71s\tremaining: 428ms\n",
            "36:\tlearn: 0.0011513\ttotal: 1.75s\tremaining: 379ms\n",
            "37:\tlearn: 0.0011512\ttotal: 1.8s\tremaining: 332ms\n",
            "38:\tlearn: 0.0010539\ttotal: 1.87s\tremaining: 288ms\n",
            "39:\tlearn: 0.0010539\ttotal: 1.95s\tremaining: 244ms\n",
            "40:\tlearn: 0.0010539\ttotal: 2.05s\tremaining: 200ms\n",
            "41:\tlearn: 0.0010537\ttotal: 2.14s\tremaining: 153ms\n",
            "42:\tlearn: 0.0010537\ttotal: 2.23s\tremaining: 104ms\n",
            "43:\tlearn: 0.0010537\ttotal: 2.31s\tremaining: 52.6ms\n",
            "44:\tlearn: 0.0010537\ttotal: 2.4s\tremaining: 0us\n",
            "0:\tlearn: 0.4025481\ttotal: 69.3ms\tremaining: 3.05s\n",
            "1:\tlearn: 0.2721306\ttotal: 113ms\tremaining: 2.43s\n",
            "2:\tlearn: 0.1811551\ttotal: 157ms\tremaining: 2.19s\n",
            "3:\tlearn: 0.1350224\ttotal: 201ms\tremaining: 2.06s\n",
            "4:\tlearn: 0.1001417\ttotal: 243ms\tremaining: 1.95s\n",
            "5:\tlearn: 0.0753387\ttotal: 296ms\tremaining: 1.92s\n",
            "6:\tlearn: 0.0642138\ttotal: 342ms\tremaining: 1.85s\n",
            "7:\tlearn: 0.0560688\ttotal: 384ms\tremaining: 1.77s\n",
            "8:\tlearn: 0.0407278\ttotal: 428ms\tremaining: 1.71s\n",
            "9:\tlearn: 0.0382323\ttotal: 470ms\tremaining: 1.64s\n",
            "10:\tlearn: 0.0337512\ttotal: 521ms\tremaining: 1.61s\n",
            "11:\tlearn: 0.0278938\ttotal: 565ms\tremaining: 1.55s\n",
            "12:\tlearn: 0.0205719\ttotal: 609ms\tremaining: 1.5s\n",
            "13:\tlearn: 0.0152377\ttotal: 652ms\tremaining: 1.44s\n",
            "14:\tlearn: 0.0146477\ttotal: 711ms\tremaining: 1.42s\n",
            "15:\tlearn: 0.0144508\ttotal: 760ms\tremaining: 1.38s\n",
            "16:\tlearn: 0.0125364\ttotal: 802ms\tremaining: 1.32s\n",
            "17:\tlearn: 0.0103556\ttotal: 845ms\tremaining: 1.27s\n",
            "18:\tlearn: 0.0102069\ttotal: 887ms\tremaining: 1.21s\n",
            "19:\tlearn: 0.0089819\ttotal: 929ms\tremaining: 1.16s\n",
            "20:\tlearn: 0.0076298\ttotal: 981ms\tremaining: 1.12s\n",
            "21:\tlearn: 0.0065992\ttotal: 1.02s\tremaining: 1.07s\n",
            "22:\tlearn: 0.0054557\ttotal: 1.08s\tremaining: 1.03s\n",
            "23:\tlearn: 0.0049119\ttotal: 1.12s\tremaining: 980ms\n",
            "24:\tlearn: 0.0043450\ttotal: 1.16s\tremaining: 931ms\n",
            "25:\tlearn: 0.0037574\ttotal: 1.22s\tremaining: 888ms\n",
            "26:\tlearn: 0.0032854\ttotal: 1.26s\tremaining: 839ms\n",
            "27:\tlearn: 0.0030990\ttotal: 1.3s\tremaining: 790ms\n",
            "28:\tlearn: 0.0029371\ttotal: 1.34s\tremaining: 742ms\n",
            "29:\tlearn: 0.0029370\ttotal: 1.39s\tremaining: 693ms\n",
            "30:\tlearn: 0.0029370\ttotal: 1.44s\tremaining: 649ms\n",
            "31:\tlearn: 0.0029370\ttotal: 1.49s\tremaining: 605ms\n",
            "32:\tlearn: 0.0029369\ttotal: 1.53s\tremaining: 557ms\n",
            "33:\tlearn: 0.0029369\ttotal: 1.57s\tremaining: 509ms\n",
            "34:\tlearn: 0.0029369\ttotal: 1.62s\tremaining: 462ms\n",
            "35:\tlearn: 0.0029368\ttotal: 1.67s\tremaining: 416ms\n",
            "36:\tlearn: 0.0029368\ttotal: 1.71s\tremaining: 369ms\n",
            "37:\tlearn: 0.0029366\ttotal: 1.75s\tremaining: 322ms\n",
            "38:\tlearn: 0.0029367\ttotal: 1.79s\tremaining: 276ms\n",
            "39:\tlearn: 0.0029365\ttotal: 1.83s\tremaining: 229ms\n",
            "40:\tlearn: 0.0029364\ttotal: 1.88s\tremaining: 183ms\n",
            "41:\tlearn: 0.0029364\ttotal: 1.92s\tremaining: 137ms\n",
            "42:\tlearn: 0.0029364\ttotal: 1.97s\tremaining: 91.4ms\n",
            "43:\tlearn: 0.0029364\ttotal: 2.01s\tremaining: 45.6ms\n",
            "44:\tlearn: 0.0029364\ttotal: 2.07s\tremaining: 0us\n",
            "0:\tlearn: 0.3628860\ttotal: 62.6ms\tremaining: 2.75s\n",
            "1:\tlearn: 0.2466831\ttotal: 113ms\tremaining: 2.42s\n",
            "2:\tlearn: 0.1577984\ttotal: 156ms\tremaining: 2.18s\n",
            "3:\tlearn: 0.1163548\ttotal: 199ms\tremaining: 2.04s\n",
            "4:\tlearn: 0.0933944\ttotal: 243ms\tremaining: 1.94s\n",
            "5:\tlearn: 0.0776968\ttotal: 294ms\tremaining: 1.91s\n",
            "6:\tlearn: 0.0640325\ttotal: 337ms\tremaining: 1.83s\n",
            "7:\tlearn: 0.0588101\ttotal: 385ms\tremaining: 1.78s\n",
            "8:\tlearn: 0.0422102\ttotal: 430ms\tremaining: 1.72s\n",
            "9:\tlearn: 0.0398886\ttotal: 473ms\tremaining: 1.65s\n",
            "10:\tlearn: 0.0278653\ttotal: 523ms\tremaining: 1.62s\n",
            "11:\tlearn: 0.0273629\ttotal: 565ms\tremaining: 1.55s\n",
            "12:\tlearn: 0.0239203\ttotal: 608ms\tremaining: 1.5s\n",
            "13:\tlearn: 0.0201559\ttotal: 651ms\tremaining: 1.44s\n",
            "14:\tlearn: 0.0173822\ttotal: 693ms\tremaining: 1.39s\n",
            "15:\tlearn: 0.0134937\ttotal: 747ms\tremaining: 1.35s\n",
            "16:\tlearn: 0.0121298\ttotal: 790ms\tremaining: 1.3s\n",
            "17:\tlearn: 0.0093325\ttotal: 852ms\tremaining: 1.28s\n",
            "18:\tlearn: 0.0090878\ttotal: 894ms\tremaining: 1.22s\n",
            "19:\tlearn: 0.0090028\ttotal: 936ms\tremaining: 1.17s\n",
            "20:\tlearn: 0.0077907\ttotal: 986ms\tremaining: 1.13s\n",
            "21:\tlearn: 0.0077903\ttotal: 1.03s\tremaining: 1.07s\n",
            "22:\tlearn: 0.0077903\ttotal: 1.07s\tremaining: 1.02s\n",
            "23:\tlearn: 0.0077900\ttotal: 1.11s\tremaining: 973ms\n",
            "24:\tlearn: 0.0077899\ttotal: 1.15s\tremaining: 922ms\n",
            "25:\tlearn: 0.0077899\ttotal: 1.2s\tremaining: 879ms\n",
            "26:\tlearn: 0.0077899\ttotal: 1.24s\tremaining: 829ms\n",
            "27:\tlearn: 0.0077897\ttotal: 1.29s\tremaining: 784ms\n",
            "28:\tlearn: 0.0077895\ttotal: 1.33s\tremaining: 735ms\n",
            "29:\tlearn: 0.0077891\ttotal: 1.37s\tremaining: 687ms\n",
            "30:\tlearn: 0.0077883\ttotal: 1.43s\tremaining: 644ms\n",
            "31:\tlearn: 0.0077883\ttotal: 1.47s\tremaining: 596ms\n",
            "32:\tlearn: 0.0077881\ttotal: 1.51s\tremaining: 549ms\n",
            "33:\tlearn: 0.0077874\ttotal: 1.55s\tremaining: 501ms\n",
            "34:\tlearn: 0.0077871\ttotal: 1.59s\tremaining: 455ms\n",
            "35:\tlearn: 0.0077870\ttotal: 1.64s\tremaining: 410ms\n",
            "36:\tlearn: 0.0077868\ttotal: 1.68s\tremaining: 363ms\n",
            "37:\tlearn: 0.0077868\ttotal: 1.73s\tremaining: 319ms\n",
            "38:\tlearn: 0.0077866\ttotal: 1.77s\tremaining: 273ms\n",
            "39:\tlearn: 0.0077866\ttotal: 1.81s\tremaining: 227ms\n",
            "40:\tlearn: 0.0077864\ttotal: 1.87s\tremaining: 183ms\n",
            "41:\tlearn: 0.0077861\ttotal: 1.91s\tremaining: 137ms\n",
            "42:\tlearn: 0.0077861\ttotal: 1.95s\tremaining: 90.9ms\n",
            "43:\tlearn: 0.0077861\ttotal: 1.99s\tremaining: 45.3ms\n",
            "44:\tlearn: 0.0077859\ttotal: 2.04s\tremaining: 0us\n",
            "0:\tlearn: 0.3976441\ttotal: 59.2ms\tremaining: 2.6s\n",
            "1:\tlearn: 0.2654778\ttotal: 104ms\tremaining: 2.23s\n",
            "2:\tlearn: 0.1679067\ttotal: 149ms\tremaining: 2.08s\n",
            "3:\tlearn: 0.1230814\ttotal: 192ms\tremaining: 1.97s\n",
            "4:\tlearn: 0.0976495\ttotal: 236ms\tremaining: 1.89s\n",
            "5:\tlearn: 0.0686431\ttotal: 286ms\tremaining: 1.86s\n",
            "6:\tlearn: 0.0550963\ttotal: 332ms\tremaining: 1.8s\n",
            "7:\tlearn: 0.0521064\ttotal: 378ms\tremaining: 1.75s\n",
            "8:\tlearn: 0.0394134\ttotal: 421ms\tremaining: 1.68s\n",
            "9:\tlearn: 0.0337323\ttotal: 464ms\tremaining: 1.62s\n",
            "10:\tlearn: 0.0277037\ttotal: 514ms\tremaining: 1.59s\n",
            "11:\tlearn: 0.0237847\ttotal: 557ms\tremaining: 1.53s\n",
            "12:\tlearn: 0.0231616\ttotal: 608ms\tremaining: 1.5s\n",
            "13:\tlearn: 0.0191050\ttotal: 656ms\tremaining: 1.45s\n",
            "14:\tlearn: 0.0184378\ttotal: 697ms\tremaining: 1.39s\n",
            "15:\tlearn: 0.0171080\ttotal: 751ms\tremaining: 1.36s\n",
            "16:\tlearn: 0.0133984\ttotal: 806ms\tremaining: 1.33s\n",
            "17:\tlearn: 0.0132602\ttotal: 848ms\tremaining: 1.27s\n",
            "18:\tlearn: 0.0114481\ttotal: 891ms\tremaining: 1.22s\n",
            "19:\tlearn: 0.0097490\ttotal: 935ms\tremaining: 1.17s\n",
            "20:\tlearn: 0.0087816\ttotal: 986ms\tremaining: 1.13s\n",
            "21:\tlearn: 0.0081537\ttotal: 1.03s\tremaining: 1.07s\n",
            "22:\tlearn: 0.0070790\ttotal: 1.07s\tremaining: 1.02s\n",
            "23:\tlearn: 0.0058036\ttotal: 1.12s\tremaining: 977ms\n",
            "24:\tlearn: 0.0055285\ttotal: 1.16s\tremaining: 927ms\n",
            "25:\tlearn: 0.0043475\ttotal: 1.22s\tremaining: 888ms\n",
            "26:\tlearn: 0.0043466\ttotal: 1.27s\tremaining: 844ms\n",
            "27:\tlearn: 0.0043466\ttotal: 1.31s\tremaining: 795ms\n",
            "28:\tlearn: 0.0043466\ttotal: 1.35s\tremaining: 745ms\n",
            "29:\tlearn: 0.0043463\ttotal: 1.39s\tremaining: 695ms\n",
            "30:\tlearn: 0.0043463\ttotal: 1.44s\tremaining: 650ms\n",
            "31:\tlearn: 0.0043458\ttotal: 1.48s\tremaining: 602ms\n",
            "32:\tlearn: 0.0043458\ttotal: 1.52s\tremaining: 554ms\n",
            "33:\tlearn: 0.0043454\ttotal: 1.56s\tremaining: 506ms\n",
            "34:\tlearn: 0.0043444\ttotal: 1.6s\tremaining: 459ms\n",
            "35:\tlearn: 0.0043443\ttotal: 1.67s\tremaining: 417ms\n",
            "36:\tlearn: 0.0043444\ttotal: 1.71s\tremaining: 371ms\n",
            "37:\tlearn: 0.0043443\ttotal: 1.75s\tremaining: 323ms\n",
            "38:\tlearn: 0.0043211\ttotal: 1.8s\tremaining: 277ms\n",
            "39:\tlearn: 0.0043211\ttotal: 1.84s\tremaining: 230ms\n",
            "40:\tlearn: 0.0042943\ttotal: 1.89s\tremaining: 184ms\n",
            "41:\tlearn: 0.0042791\ttotal: 1.93s\tremaining: 138ms\n",
            "42:\tlearn: 0.0038917\ttotal: 1.98s\tremaining: 91.9ms\n",
            "43:\tlearn: 0.0036675\ttotal: 2.02s\tremaining: 45.9ms\n",
            "44:\tlearn: 0.0036668\ttotal: 2.06s\tremaining: 0us\n",
            "0:\tlearn: 0.4195479\ttotal: 60.9ms\tremaining: 2.68s\n",
            "1:\tlearn: 0.2402568\ttotal: 105ms\tremaining: 2.25s\n",
            "2:\tlearn: 0.1627297\ttotal: 149ms\tremaining: 2.08s\n",
            "3:\tlearn: 0.1399526\ttotal: 203ms\tremaining: 2.08s\n",
            "4:\tlearn: 0.0996000\ttotal: 252ms\tremaining: 2.02s\n",
            "5:\tlearn: 0.0825484\ttotal: 305ms\tremaining: 1.98s\n",
            "6:\tlearn: 0.0590754\ttotal: 348ms\tremaining: 1.89s\n",
            "7:\tlearn: 0.0480539\ttotal: 390ms\tremaining: 1.8s\n",
            "8:\tlearn: 0.0359935\ttotal: 434ms\tremaining: 1.73s\n",
            "9:\tlearn: 0.0280632\ttotal: 478ms\tremaining: 1.67s\n",
            "10:\tlearn: 0.0217171\ttotal: 531ms\tremaining: 1.64s\n",
            "11:\tlearn: 0.0189096\ttotal: 574ms\tremaining: 1.58s\n",
            "12:\tlearn: 0.0170398\ttotal: 617ms\tremaining: 1.52s\n",
            "13:\tlearn: 0.0136333\ttotal: 661ms\tremaining: 1.46s\n",
            "14:\tlearn: 0.0104235\ttotal: 711ms\tremaining: 1.42s\n",
            "15:\tlearn: 0.0101818\ttotal: 763ms\tremaining: 1.38s\n",
            "16:\tlearn: 0.0094808\ttotal: 805ms\tremaining: 1.32s\n",
            "17:\tlearn: 0.0072027\ttotal: 849ms\tremaining: 1.27s\n",
            "18:\tlearn: 0.0071015\ttotal: 889ms\tremaining: 1.22s\n",
            "19:\tlearn: 0.0054401\ttotal: 932ms\tremaining: 1.16s\n",
            "20:\tlearn: 0.0047927\ttotal: 983ms\tremaining: 1.12s\n",
            "21:\tlearn: 0.0044169\ttotal: 1.02s\tremaining: 1.07s\n",
            "22:\tlearn: 0.0041221\ttotal: 1.07s\tremaining: 1.02s\n",
            "23:\tlearn: 0.0038253\ttotal: 1.11s\tremaining: 971ms\n",
            "24:\tlearn: 0.0035130\ttotal: 1.16s\tremaining: 929ms\n",
            "25:\tlearn: 0.0030686\ttotal: 1.23s\tremaining: 896ms\n",
            "26:\tlearn: 0.0027535\ttotal: 1.27s\tremaining: 846ms\n",
            "27:\tlearn: 0.0025160\ttotal: 1.31s\tremaining: 797ms\n",
            "28:\tlearn: 0.0022419\ttotal: 1.36s\tremaining: 748ms\n",
            "29:\tlearn: 0.0020055\ttotal: 1.4s\tremaining: 700ms\n",
            "30:\tlearn: 0.0018380\ttotal: 1.45s\tremaining: 654ms\n",
            "31:\tlearn: 0.0018379\ttotal: 1.49s\tremaining: 606ms\n",
            "32:\tlearn: 0.0016646\ttotal: 1.53s\tremaining: 559ms\n",
            "33:\tlearn: 0.0016646\ttotal: 1.59s\tremaining: 514ms\n",
            "34:\tlearn: 0.0016641\ttotal: 1.63s\tremaining: 466ms\n",
            "35:\tlearn: 0.0015282\ttotal: 1.68s\tremaining: 420ms\n",
            "36:\tlearn: 0.0015281\ttotal: 1.73s\tremaining: 373ms\n",
            "37:\tlearn: 0.0013992\ttotal: 1.77s\tremaining: 326ms\n",
            "38:\tlearn: 0.0013993\ttotal: 1.81s\tremaining: 279ms\n",
            "39:\tlearn: 0.0013992\ttotal: 1.85s\tremaining: 232ms\n",
            "40:\tlearn: 0.0013990\ttotal: 1.9s\tremaining: 186ms\n",
            "41:\tlearn: 0.0013989\ttotal: 1.95s\tremaining: 139ms\n",
            "42:\tlearn: 0.0013989\ttotal: 2s\tremaining: 92.8ms\n",
            "43:\tlearn: 0.0013989\ttotal: 2.04s\tremaining: 46.3ms\n",
            "44:\tlearn: 0.0013989\ttotal: 2.08s\tremaining: 0us\n",
            "0:\tlearn: 0.4391642\ttotal: 61.9ms\tremaining: 2.73s\n",
            "1:\tlearn: 0.2748797\ttotal: 108ms\tremaining: 2.31s\n",
            "2:\tlearn: 0.1833455\ttotal: 158ms\tremaining: 2.21s\n",
            "3:\tlearn: 0.1378645\ttotal: 210ms\tremaining: 2.15s\n",
            "4:\tlearn: 0.0764818\ttotal: 293ms\tremaining: 2.34s\n",
            "5:\tlearn: 0.0684299\ttotal: 369ms\tremaining: 2.4s\n",
            "6:\tlearn: 0.0590843\ttotal: 464ms\tremaining: 2.52s\n",
            "7:\tlearn: 0.0500888\ttotal: 559ms\tremaining: 2.59s\n",
            "8:\tlearn: 0.0444254\ttotal: 644ms\tremaining: 2.58s\n",
            "9:\tlearn: 0.0377881\ttotal: 727ms\tremaining: 2.54s\n",
            "10:\tlearn: 0.0274856\ttotal: 820ms\tremaining: 2.53s\n",
            "11:\tlearn: 0.0250163\ttotal: 897ms\tremaining: 2.47s\n",
            "12:\tlearn: 0.0244949\ttotal: 979ms\tremaining: 2.41s\n",
            "13:\tlearn: 0.0191733\ttotal: 1.09s\tremaining: 2.42s\n",
            "14:\tlearn: 0.0166525\ttotal: 1.17s\tremaining: 2.34s\n",
            "15:\tlearn: 0.0162181\ttotal: 1.25s\tremaining: 2.27s\n",
            "16:\tlearn: 0.0128946\ttotal: 1.35s\tremaining: 2.22s\n",
            "17:\tlearn: 0.0127681\ttotal: 1.43s\tremaining: 2.15s\n",
            "18:\tlearn: 0.0099133\ttotal: 1.51s\tremaining: 2.07s\n",
            "19:\tlearn: 0.0098609\ttotal: 1.6s\tremaining: 2s\n",
            "20:\tlearn: 0.0097106\ttotal: 1.68s\tremaining: 1.92s\n",
            "21:\tlearn: 0.0074897\ttotal: 1.75s\tremaining: 1.83s\n",
            "22:\tlearn: 0.0065253\ttotal: 1.82s\tremaining: 1.74s\n",
            "23:\tlearn: 0.0046715\ttotal: 1.91s\tremaining: 1.67s\n",
            "24:\tlearn: 0.0045104\ttotal: 1.99s\tremaining: 1.59s\n",
            "25:\tlearn: 0.0038315\ttotal: 2.09s\tremaining: 1.53s\n",
            "26:\tlearn: 0.0033911\ttotal: 2.17s\tremaining: 1.44s\n",
            "27:\tlearn: 0.0030165\ttotal: 2.25s\tremaining: 1.37s\n",
            "28:\tlearn: 0.0030164\ttotal: 2.35s\tremaining: 1.29s\n",
            "29:\tlearn: 0.0030164\ttotal: 2.42s\tremaining: 1.21s\n",
            "30:\tlearn: 0.0030164\ttotal: 2.51s\tremaining: 1.13s\n",
            "31:\tlearn: 0.0030163\ttotal: 2.58s\tremaining: 1.05s\n",
            "32:\tlearn: 0.0030163\ttotal: 2.66s\tremaining: 969ms\n",
            "33:\tlearn: 0.0030161\ttotal: 2.74s\tremaining: 888ms\n",
            "34:\tlearn: 0.0030158\ttotal: 2.84s\tremaining: 811ms\n",
            "35:\tlearn: 0.0030157\ttotal: 2.92s\tremaining: 730ms\n",
            "36:\tlearn: 0.0030155\ttotal: 3s\tremaining: 649ms\n",
            "37:\tlearn: 0.0030154\ttotal: 3.09s\tremaining: 570ms\n",
            "38:\tlearn: 0.0030154\ttotal: 3.16s\tremaining: 486ms\n",
            "39:\tlearn: 0.0030154\ttotal: 3.25s\tremaining: 406ms\n",
            "40:\tlearn: 0.0030150\ttotal: 3.33s\tremaining: 325ms\n",
            "41:\tlearn: 0.0030149\ttotal: 3.41s\tremaining: 244ms\n",
            "42:\tlearn: 0.0030149\ttotal: 3.5s\tremaining: 163ms\n",
            "43:\tlearn: 0.0030148\ttotal: 3.59s\tremaining: 81.6ms\n",
            "44:\tlearn: 0.0030148\ttotal: 3.66s\tremaining: 0us\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x576 with 10 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.rcParams[\"figure.figsize\"] = [12, 8]\n",
        "#plt.rcParams[\"figure.autolayout\"] = True\n",
        "\n",
        "ax = plt.GridSpec(3, 4)\n",
        "plt.rcParams.update({'font.family':'serif'})\n",
        "\n",
        "ax1 = plt.subplot(ax[0,0])\n",
        "plt.title('A', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train1, y_train1)\n",
        "xgb.fit(X_train1, y_train1)\n",
        "cat.fit(X_train1, y_train1)\n",
        "lgb.fit(X_train1, y_train1)\n",
        "dt.fit(X_train1, y_train1)\n",
        "etc.fit(X_train1, y_train1)\n",
        "Stacking.fit(X_train1, y_train1)\n",
        "\n",
        "pred = dt.predict_proba(X_test1)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test1, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test1, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test1)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test1, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test1, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test1)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test1, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test1, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test1)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test1, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test1, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test1)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test1, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test1, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test1)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test1, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test1, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test1)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test1, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test1, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,1])\n",
        "plt.title('B', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train2, y_train2)\n",
        "xgb.fit(X_train2, y_train2)\n",
        "cat.fit(X_train2, y_train2)\n",
        "lgb.fit(X_train2, y_train2)\n",
        "dt.fit(X_train2, y_train2)\n",
        "etc.fit(X_train2, y_train2)\n",
        "Stacking.fit(X_train2, y_train2)\n",
        "\n",
        "pred = dt.predict_proba(X_test2)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test2, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test2, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test2)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test2, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test2, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test2)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test2, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test2, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test2)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test2, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test2, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test2)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test2, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test2, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test2)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test2, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test2, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test2)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test2, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test2, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,2])\n",
        "plt.title('C', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train3, y_train3)\n",
        "xgb.fit(X_train3, y_train3)\n",
        "cat.fit(X_train3, y_train3)\n",
        "lgb.fit(X_train3, y_train3)\n",
        "dt.fit(X_train3, y_train3)\n",
        "etc.fit(X_train3, y_train3)\n",
        "Stacking.fit(X_train3, y_train3)\n",
        "\n",
        "pred = dt.predict_proba(X_test3)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test3, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test3, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test3)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test3, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test3, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test3)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test3, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test3, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test3)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test3, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test3, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test3)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test3, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test3, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test3)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test3, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test3, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test3)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test3, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test3, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[0,3])\n",
        "plt.title('D', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train4, y_train4)\n",
        "xgb.fit(X_train4, y_train4)\n",
        "cat.fit(X_train4, y_train4)\n",
        "lgb.fit(X_train4, y_train4)\n",
        "dt.fit(X_train4, y_train4)\n",
        "etc.fit(X_train4, y_train4)\n",
        "Stacking.fit(X_train4, y_train4)\n",
        "\n",
        "pred = dt.predict_proba(X_test4)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test4, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test4, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test4)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test4, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test4, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test4)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test4, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test4, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test4)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test4, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test4, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test4)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test4, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test4, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test4)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test4, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test4, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test4)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test4, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test4, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,0])\n",
        "plt.title('E', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train5, y_train5)\n",
        "xgb.fit(X_train5, y_train5)\n",
        "cat.fit(X_train5, y_train5)\n",
        "lgb.fit(X_train5, y_train5)\n",
        "dt.fit(X_train5, y_train5)\n",
        "etc.fit(X_train5, y_train5)\n",
        "Stacking.fit(X_train5, y_train5)\n",
        "\n",
        "pred = dt.predict_proba(X_test5)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test5, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test5, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test5)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test5, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test5, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test5)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test5, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test5, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test5)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test5, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test5, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test5)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test5, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test5, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test5)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test5, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test5, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test5)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test5, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test5, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,1])\n",
        "plt.title('F', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train6, y_train6)\n",
        "xgb.fit(X_train6, y_train6)\n",
        "cat.fit(X_train6, y_train6)\n",
        "lgb.fit(X_train6, y_train6)\n",
        "dt.fit(X_train6, y_train6)\n",
        "etc.fit(X_train6, y_train6)\n",
        "Stacking.fit(X_train6, y_train6)\n",
        "\n",
        "pred = dt.predict_proba(X_test6)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test6, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test6, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test6)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test6, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test6, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test6)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test6, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test6, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test6)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test6, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test6, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test6)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test6, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test6, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test6)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test6, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test6, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test6)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test6, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test6, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,2])\n",
        "plt.title('G', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train7, y_train7)\n",
        "xgb.fit(X_train7, y_train7)\n",
        "cat.fit(X_train7, y_train7)\n",
        "lgb.fit(X_train7, y_train7)\n",
        "dt.fit(X_train7, y_train7)\n",
        "etc.fit(X_train7, y_train7)\n",
        "Stacking.fit(X_train7, y_train7)\n",
        "\n",
        "\n",
        "pred = dt.predict_proba(X_test7)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test7, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test7, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test7)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test7, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test7, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test7)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test7, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test7, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test7)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test7, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test7, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test7)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test7, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test7, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test7)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test7, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test7, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test7)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test7, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test7, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[1,3])\n",
        "plt.title('H', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train8, y_train8)\n",
        "xgb.fit(X_train8, y_train8)\n",
        "cat.fit(X_train8, y_train8)\n",
        "lgb.fit(X_train8, y_train8)\n",
        "dt.fit(X_train8, y_train8)\n",
        "etc.fit(X_train8, y_train8)\n",
        "Stacking.fit(X_train8, y_train8)\n",
        "\n",
        "pred = dt.predict_proba(X_test8)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test8, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test8, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test8)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test8, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test8, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test8)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test8, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test8, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test8)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test8, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test8, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test8)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test8, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test8, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test8)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test8, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test8, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test8)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test8, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test8, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[2,1])\n",
        "plt.title('I', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train9, y_train9)\n",
        "xgb.fit(X_train9, y_train9)\n",
        "cat.fit(X_train9, y_train9)\n",
        "lgb.fit(X_train9, y_train9)\n",
        "dt.fit(X_train9, y_train9)\n",
        "etc.fit(X_train9, y_train9)\n",
        "Stacking.fit(X_train9, y_train9)\n",
        "\n",
        "pred = dt.predict_proba(X_test9)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test9, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test9, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test9)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test9, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test9, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test9)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test9, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test9, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test9)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test9, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test9, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test9)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test9, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test9, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test9)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test9, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test9, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test9)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test9, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test9, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "ax1 = plt.subplot(ax[2,2])\n",
        "plt.title('J', weight='bold',  fontsize=15, y = 0.90, x=-0.20)\n",
        "plt.xticks(weight='bold')\n",
        "plt.yticks(weight='bold')\n",
        "\n",
        "rfc.fit(X_train10, y_train10)\n",
        "xgb.fit(X_train10, y_train10)\n",
        "cat.fit(X_train10, y_train10)\n",
        "lgb.fit(X_train10, y_train10)\n",
        "dt.fit(X_train10, y_train10)\n",
        "etc.fit(X_train10, y_train10)\n",
        "Stacking.fit(X_train10, y_train10)\n",
        "\n",
        "pred = dt.predict_proba(X_test10)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test10, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test10, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#800000\", label=\"DT, AUC=\"+str(auc))\n",
        "\n",
        "pred = etc.predict_proba(X_test10)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test10, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test10, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#FFA500\", label=\"ETC, AUC=\"+str(auc))\n",
        "\n",
        "pred = cat.predict_proba(X_test10)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test10, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test10, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00008B\", label=\"CAT, AUC=\"+str(auc))\n",
        "\n",
        "pred = xgb.predict_proba(X_test10)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test10, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test10, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#8A2BE2\", label=\"XGB, AUC=\"+str(auc))\n",
        "\n",
        "pred = lgb.predict_proba(X_test10)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test10, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test10, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#00FFFF\", label=\"LGBM, AUC=\"+str(auc))\n",
        "\n",
        "pred = rfc.predict_proba(X_test10)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test10, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test10, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#808000\", label=\"RF, AUC=\"+str(auc))\n",
        "\n",
        "pred = Stacking.predict_proba(X_test10)[:, 1]\n",
        "fpr, tpr, _ = metrics.roc_curve(y_test10, pred)\n",
        "auc = round(metrics.roc_auc_score(y_test10, pred), 3)\n",
        "plt.plot(fpr,tpr, color=\"#008000\", label=\"SPPIPred, AUC=\"+str(auc))\n",
        "\n",
        "plt.xlabel('False Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.ylabel('True Positive Rate', fontweight = 'bold',  fontsize=9)\n",
        "plt.legend(loc = 'lower right', fontsize=7)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.savefig('ROC Curve.png', dpi=800)\n",
        "plt.savefig('ROC Curve.pdf', dpi=800)"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "TtGO6vNtiBk2",
        "dDPgcu0DiW-Q"
      ],
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
